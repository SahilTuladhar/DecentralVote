{"ast":null,"code":"import walkTo from '../../methods/set/walk.js';\nimport { toCardinal } from '../../fns.js';\nimport { validate, parseTime, parseYear, parseMonth } from './_parsers.js';\nexport default [\n// =====\n//  d-m-y\n// =====\n//common british format - \"25-feb-2015\"\n{\n  reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n  parse: (s, m) => {\n    let obj = {\n      year: parseYear(m[3], s._today),\n      month: parseMonth(m[2]),\n      date: toCardinal(m[1] || '')\n    };\n    if (validate(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n    walkTo(s, obj);\n    s = parseTime(s, m[4]);\n    return s;\n  }\n},\n// \"25 Mar 2015\"\n{\n  reg: /^([0-9]{1,2})( [a-z]+)( [0-9]{4}| '[0-9]{2})? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: (s, m) => {\n    let obj = {\n      year: parseYear(m[3], s._today),\n      month: parseMonth(m[2]),\n      date: toCardinal(m[1])\n    };\n    if (!obj.month || validate(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n    walkTo(s, obj);\n    s = parseTime(s, m[4]);\n    return s;\n  }\n},\n// 01-jan-2020\n{\n  reg: /^([0-9]{1,2})[\\. -/]([a-z]+)[\\. -/]([0-9]{4})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n  parse: (s, m) => {\n    let obj = {\n      date: Number(m[1]),\n      month: parseMonth(m[2]),\n      year: Number(m[3])\n    };\n    if (validate(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n    walkTo(s, obj);\n    s = s.startOf('day');\n    s = parseTime(s, m[4]);\n    return s;\n  }\n}];","map":{"version":3,"names":["walkTo","toCardinal","validate","parseTime","parseYear","parseMonth","reg","parse","s","m","obj","year","_today","month","date","epoch","Number","startOf"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/input/formats/03-dmy.js"],"sourcesContent":["import walkTo from '../../methods/set/walk.js'\nimport { toCardinal } from '../../fns.js'\nimport { validate, parseTime, parseYear, parseMonth } from './_parsers.js'\n\nexport default [\n  // =====\n  //  d-m-y\n  // =====\n  //common british format - \"25-feb-2015\"\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n    parse: (s, m) => {\n      let obj = {\n        year: parseYear(m[3], s._today),\n        month: parseMonth(m[2]),\n        date: toCardinal(m[1] || '')\n      }\n      if (validate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, m[4])\n      return s\n    }\n  },\n  // \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2})( [a-z]+)( [0-9]{4}| '[0-9]{2})? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, m) => {\n      let obj = {\n        year: parseYear(m[3], s._today),\n        month: parseMonth(m[2]),\n        date: toCardinal(m[1])\n      }\n      if (!obj.month || validate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, m[4])\n      return s\n    }\n  },\n  // 01-jan-2020\n  {\n    reg: /^([0-9]{1,2})[\\. -/]([a-z]+)[\\. -/]([0-9]{4})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n    parse: (s, m) => {\n      let obj = {\n        date: Number(m[1]),\n        month: parseMonth(m[2]),\n        year: Number(m[3])\n      }\n      if (validate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = s.startOf('day')\n      s = parseTime(s, m[4])\n      return s\n    }\n  }\n]\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,2BAA2B;AAC9C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAE1E,eAAe;AACb;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAE,iDAAiD;EACtDC,KAAK,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAK;IACf,IAAIC,GAAG,GAAG;MACRC,IAAI,EAAEP,SAAS,CAACK,CAAC,CAAC,CAAC,CAAC,EAAED,CAAC,CAACI,MAAM,CAAC;MAC/BC,KAAK,EAAER,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC;MACvBK,IAAI,EAAEb,UAAU,CAACQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;IAC7B,CAAC;IACD,IAAIP,QAAQ,CAACQ,GAAG,CAAC,KAAK,KAAK,EAAE;MAC3BF,CAAC,CAACO,KAAK,GAAG,IAAI;MACd,OAAOP,CAAC;IACV;IACAR,MAAM,CAACQ,CAAC,EAAEE,GAAG,CAAC;IACdF,CAAC,GAAGL,SAAS,CAACK,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,OAAOD,CAAC;EACV;AACF,CAAC;AACD;AACA;EACEF,GAAG,EAAE,mGAAmG;EACxGC,KAAK,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAK;IACf,IAAIC,GAAG,GAAG;MACRC,IAAI,EAAEP,SAAS,CAACK,CAAC,CAAC,CAAC,CAAC,EAAED,CAAC,CAACI,MAAM,CAAC;MAC/BC,KAAK,EAAER,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC;MACvBK,IAAI,EAAEb,UAAU,CAACQ,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IACD,IAAI,CAACC,GAAG,CAACG,KAAK,IAAIX,QAAQ,CAACQ,GAAG,CAAC,KAAK,KAAK,EAAE;MACzCF,CAAC,CAACO,KAAK,GAAG,IAAI;MACd,OAAOP,CAAC;IACV;IACAR,MAAM,CAACQ,CAAC,EAAEE,GAAG,CAAC;IACdF,CAAC,GAAGL,SAAS,CAACK,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,OAAOD,CAAC;EACV;AACF,CAAC;AACD;AACA;EACEF,GAAG,EAAE,sGAAsG;EAC3GC,KAAK,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAK;IACf,IAAIC,GAAG,GAAG;MACRI,IAAI,EAAEE,MAAM,CAACP,CAAC,CAAC,CAAC,CAAC,CAAC;MAClBI,KAAK,EAAER,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC;MACvBE,IAAI,EAAEK,MAAM,CAACP,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,IAAIP,QAAQ,CAACQ,GAAG,CAAC,KAAK,KAAK,EAAE;MAC3BF,CAAC,CAACO,KAAK,GAAG,IAAI;MACd,OAAOP,CAAC;IACV;IACAR,MAAM,CAACQ,CAAC,EAAEE,GAAG,CAAC;IACdF,CAAC,GAAGA,CAAC,CAACS,OAAO,CAAC,KAAK,CAAC;IACpBT,CAAC,GAAGL,SAAS,CAACK,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,OAAOD,CAAC;EACV;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}