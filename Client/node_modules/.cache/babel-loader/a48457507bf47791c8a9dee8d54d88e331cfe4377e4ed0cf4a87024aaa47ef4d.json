{"ast":null,"code":"import quickOffset from './timezone/quick.js';\nimport findTz from './timezone/find.js';\nimport handleInput from './input/index.js';\nimport methods from './methods.js';\nimport zones from '../zonefile/unpack.js';\nimport queryFns from './methods/query/index.js';\nimport addFns from './methods/add.js';\nimport sameFns from './methods/same.js';\nimport compareFns from './methods/compare.js';\nimport i18nFns from './methods/i18n.js';\nlet timezones = zones;\n// fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function (input, tz, options = {}) {\n  // the holy moment\n  this.epoch = null;\n  // the shift for the given timezone\n  this.tz = findTz(tz, timezones);\n  // whether to output warnings to console\n  this.silent = typeof options.silent !== 'undefined' ? options.silent : true;\n  // favour british interpretation of 02/02/2018, etc\n  this.british = options.dmy || options.british;\n\n  // does the week start on sunday, or monday:\n  this._weekStart = 1; // default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart;\n  }\n  // the reference today date object, (for testing)\n  this._today = {};\n  if (options.today !== undefined) {\n    this._today = options.today;\n  }\n  // dunno if this is a good idea, or not\n  // Object.defineProperty(this, 'parsers', {\n  //   enumerable: false,\n  //   writable: true,\n  //   value: parsers\n  // })\n  // add getter/setters\n  Object.defineProperty(this, 'd', {\n    // return a js date object\n    get: function () {\n      let offset = quickOffset(this);\n      // every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0;\n      // movement\n      let shift = bias + offset * 60; //in minutes\n      shift = shift * 60 * 1000; //in ms\n      // remove this computer's offset\n      let epoch = this.epoch + shift;\n      let d = new Date(epoch);\n      return d;\n    }\n  });\n  // add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: obj => {\n      timezones = obj;\n      return obj;\n    }\n  });\n  // parse the various formats\n  let tmp = handleInput(this, input);\n  this.epoch = tmp.epoch;\n};\n\n// (add instance methods to prototype)\nObject.keys(methods).forEach(k => {\n  SpaceTime.prototype[k] = methods[k];\n});\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function () {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart,\n    today: this._today,\n    parsers: this.parsers\n  });\n};\n\n/**\n * @deprecated use toNativeDate()\n * @returns native date object at the same epoch\n */\nSpaceTime.prototype.toLocalDate = function () {\n  return this.toNativeDate();\n};\n\n/**\n * @returns native date object at the same epoch\n */\nSpaceTime.prototype.toNativeDate = function () {\n  return new Date(this.epoch);\n};\n\n// append more methods\nqueryFns(SpaceTime);\naddFns(SpaceTime);\nsameFns(SpaceTime);\ncompareFns(SpaceTime);\ni18nFns(SpaceTime);\nexport default SpaceTime;","map":{"version":3,"names":["quickOffset","findTz","handleInput","methods","zones","queryFns","addFns","sameFns","compareFns","i18nFns","timezones","SpaceTime","input","tz","options","epoch","silent","british","dmy","_weekStart","weekStart","undefined","_today","today","Object","defineProperty","get","offset","bias","Date","getTimezoneOffset","shift","d","set","obj","tmp","keys","forEach","k","prototype","clone","parsers","toLocalDate","toNativeDate"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/spacetime.js"],"sourcesContent":["import quickOffset from './timezone/quick.js'\nimport findTz from './timezone/find.js'\nimport handleInput from './input/index.js'\nimport methods from './methods.js'\nimport zones from '../zonefile/unpack.js'\nimport queryFns from './methods/query/index.js'\nimport addFns from './methods/add.js'\nimport sameFns from './methods/same.js'\nimport compareFns from './methods/compare.js'\nimport i18nFns from './methods/i18n.js'\n\nlet timezones = zones\n// fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function (input, tz, options = {}) {\n  // the holy moment\n  this.epoch = null\n  // the shift for the given timezone\n  this.tz = findTz(tz, timezones)\n  // whether to output warnings to console\n  this.silent = typeof options.silent !== 'undefined' ? options.silent : true\n  // favour british interpretation of 02/02/2018, etc\n  this.british = options.dmy || options.british\n\n  // does the week start on sunday, or monday:\n  this._weekStart = 1 // default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart\n  }\n  // the reference today date object, (for testing)\n  this._today = {}\n  if (options.today !== undefined) {\n    this._today = options.today\n  }\n  // dunno if this is a good idea, or not\n  // Object.defineProperty(this, 'parsers', {\n  //   enumerable: false,\n  //   writable: true,\n  //   value: parsers\n  // })\n  // add getter/setters\n  Object.defineProperty(this, 'd', {\n    // return a js date object\n    get: function () {\n      let offset = quickOffset(this)\n      // every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0\n      // movement\n      let shift = bias + offset * 60 //in minutes\n      shift = shift * 60 * 1000 //in ms\n      // remove this computer's offset\n      let epoch = this.epoch + shift\n      let d = new Date(epoch)\n      return d\n    }\n  })\n  // add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: (obj) => {\n      timezones = obj\n      return obj\n    }\n  })\n  // parse the various formats\n  let tmp = handleInput(this, input)\n  this.epoch = tmp.epoch\n}\n\n// (add instance methods to prototype)\nObject.keys(methods).forEach((k) => {\n  SpaceTime.prototype[k] = methods[k]\n})\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function () {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart,\n    today: this._today,\n    parsers: this.parsers\n  })\n}\n\n/**\n * @deprecated use toNativeDate()\n * @returns native date object at the same epoch\n */\nSpaceTime.prototype.toLocalDate = function () {\n  return this.toNativeDate()\n}\n\n/**\n * @returns native date object at the same epoch\n */\nSpaceTime.prototype.toNativeDate = function () {\n  return new Date(this.epoch)\n}\n\n// append more methods\nqueryFns(SpaceTime)\naddFns(SpaceTime)\nsameFns(SpaceTime)\ncompareFns(SpaceTime)\ni18nFns(SpaceTime)\n\nexport default SpaceTime\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}