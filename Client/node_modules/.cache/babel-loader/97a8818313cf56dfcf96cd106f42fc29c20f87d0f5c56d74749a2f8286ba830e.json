{"ast":null,"code":"import { dayOfYear as _dayOfYear, week as _week, month as _month, year as _year } from '../set/set.js';\nimport { long } from '../../data/months.js';\nimport quarters from '../../data/quarters.js';\nimport seasons from '../../data/seasons.js';\nimport ms from '../../data/milliseconds.js';\nconst clearMinutes = s => {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s;\n};\nconst methods = {\n  // day 0-366\n  dayOfYear: function (num, goFwd) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = _dayOfYear(s, num, goFwd);\n      return s;\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0;\n    let month = this.d.getMonth();\n    let tmp;\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setFullYear(this.d.getFullYear()); //the year matters, because leap-years\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n      sum += tmp.getDate();\n    }\n    return sum + this.d.getDate();\n  },\n  //since the start of the year\n  week: function (num, goFwd) {\n    // week-setter\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = _week(this, num, goFwd);\n      s = clearMinutes(s);\n      return s;\n    }\n    //find-out which week it is\n    let tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday');\n    //don't go into last-year\n    if (tmp.month() === 11 && tmp.date() >= 25) {\n      tmp = tmp.add(1, 'week');\n    }\n\n    // is first monday the 1st?\n    let toAdd = 1;\n    if (tmp.date() === 1) {\n      toAdd = 0;\n    }\n    tmp = tmp.minus(1, 'second');\n    const thisOne = this.epoch;\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1;\n    }\n    //speed it up, if we can\n    let i = 0;\n    let skipWeeks = this.month() * 4;\n    // console.log(ms.week+ \" \"+ skipWeeks);\n    tmp.epoch += ms.week * skipWeeks;\n    i += skipWeeks;\n    for (; i <= 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd;\n      }\n      tmp = tmp.add(1, 'week');\n    }\n    return 52;\n  },\n  //either name or number\n  month: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s.epoch = _month(s, input, goFwd);\n      return s;\n    }\n    return this.d.getMonth();\n  },\n  //'january'\n  monthName: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s = s.month(input, goFwd);\n      return s;\n    }\n    return long()[this.month()];\n  },\n  //q1, q2, q3, q4\n  quarter: function (num, goFwd) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n      if (quarters[num]) {\n        let s = this.clone();\n        let month = quarters[num][0];\n        s = s.month(month, goFwd);\n        s = s.date(1, goFwd);\n        s = s.startOf('day');\n        return s;\n      }\n    }\n    let month = this.d.getMonth();\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1;\n      }\n    }\n    return 4;\n  },\n  //spring, summer, winter, fall\n  season: function (input, goFwd) {\n    let hem = 'north';\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n    if (input !== undefined) {\n      // setter\n      let s = this.clone();\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1], goFwd);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n      return s;\n    }\n    let month = this.d.getMonth();\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0];\n      }\n    }\n    return hem === 'north' ? 'winter' : 'summer';\n  },\n  //the year number\n  year: function (num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = _year(s, num);\n      return s;\n    }\n    return this.d.getFullYear();\n  },\n  //bc/ad years\n  era: function (str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      str = str.toLowerCase();\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear();\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = _year(s, year * -1);\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = _year(s, year * -1);\n      }\n      return s;\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC';\n    }\n    return 'AD';\n  },\n  // 2019 -> 2010\n  decade: function (input) {\n    if (input !== undefined) {\n      input = String(input);\n      input = input.replace(/([0-9])'?s$/, '$1'); //1950's\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input');\n        return this;\n      }\n      // assume 20th century?? for '70s'.\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input;\n      }\n      let year = Number(input);\n      if (isNaN(year)) {\n        return this;\n      }\n      // round it down to the decade\n      year = Math.floor(year / 10) * 10;\n      return this.year(year); //.startOf('decade')\n    }\n\n    return this.startOf('decade').year();\n  },\n  // 1950 -> 19+1\n  century: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b;\n          }\n          return b;\n        });\n        input = input.replace(/c$/, ''); //20thC\n      }\n\n      let year = Number(input);\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input');\n        return this;\n      }\n      // there is no century 0\n      if (year === 0) {\n        year = 1;\n      }\n      if (year >= 0) {\n        year = (year - 1) * 100;\n      } else {\n        year = (year + 1) * 100;\n      }\n      return this.year(year);\n    }\n    // century getter\n    let num = this.startOf('century').year();\n    num = Math.floor(num / 100);\n    if (num < 0) {\n      return num - 1;\n    }\n    return num + 1;\n  },\n  // 2019 -> 2+1\n  millenium: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n        input = Number(input);\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input');\n          return this;\n        }\n      }\n      if (input > 0) {\n        input -= 1;\n      }\n      let year = input * 1000;\n      // there is no year 0\n      if (year === 0) {\n        year = 1;\n      }\n      return this.year(year);\n    }\n    // get the current millenium\n    let num = Math.floor(this.year() / 1000);\n    if (num >= 0) {\n      num += 1;\n    }\n    return num;\n  }\n};\nexport default methods;","map":{"version":3,"names":["dayOfYear","_dayOfYear","week","_week","month","_month","year","_year","long","quarters","seasons","ms","clearMinutes","s","minute","second","millisecond","methods","num","goFwd","undefined","clone","epoch","sum","d","getMonth","tmp","i","Date","setDate","setFullYear","getFullYear","setHours","setMinutes","setMonth","getDate","date","day","add","toAdd","minus","thisOne","skipWeeks","input","monthName","quarter","replace","parseInt","startOf","length","season","hem","hemisphere","era","str","toLowerCase","decade","String","console","warn","test","Number","isNaN","Math","floor","century","a","b","c","match","millenium"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/spacetime/src/methods/query/03-year.js"],"sourcesContent":["import { dayOfYear as _dayOfYear, week as _week, month as _month, year as _year } from '../set/set.js'\nimport { long } from '../../data/months.js'\nimport quarters from '../../data/quarters.js'\nimport seasons from '../../data/seasons.js'\nimport ms from '../../data/milliseconds.js'\n\nconst clearMinutes = (s) => {\n  s = s.minute(0)\n  s = s.second(0)\n  s = s.millisecond(1)\n  return s\n}\n\nconst methods = {\n  // day 0-366\n  dayOfYear: function (num, goFwd) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = _dayOfYear(s, num, goFwd)\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0\n    let month = this.d.getMonth()\n    let tmp\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date()\n      tmp.setDate(1)\n      tmp.setFullYear(this.d.getFullYear()) //the year matters, because leap-years\n      tmp.setHours(1)\n      tmp.setMinutes(1)\n      tmp.setMonth(i)\n      tmp.setHours(-2) //the last day of the month\n      sum += tmp.getDate()\n    }\n    return sum + this.d.getDate()\n  },\n\n  //since the start of the year\n  week: function (num, goFwd) {\n    // week-setter\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = _week(this, num, goFwd)\n      s = clearMinutes(s)\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone()\n    tmp = tmp.month(0)\n    tmp = tmp.date(1)\n    tmp = clearMinutes(tmp)\n    tmp = tmp.day('monday')\n    //don't go into last-year\n    if (tmp.month() === 11 && tmp.date() >= 25) {\n      tmp = tmp.add(1, 'week')\n    }\n\n    // is first monday the 1st?\n    let toAdd = 1\n    if (tmp.date() === 1) {\n      toAdd = 0\n    }\n    tmp = tmp.minus(1, 'second')\n    const thisOne = this.epoch\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    //speed it up, if we can\n    let i = 0\n    let skipWeeks = this.month() * 4\n    // console.log(ms.week+ \" \"+ skipWeeks);\n    tmp.epoch += ms.week * skipWeeks\n    i += skipWeeks\n    for (; i <= 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd\n      }\n      tmp = tmp.add(1, 'week')\n    }\n    return 52\n  },\n  //either name or number\n  month: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone()\n      s.epoch = _month(s, input, goFwd)\n      return s\n    }\n    return this.d.getMonth()\n  },\n  //'january'\n  monthName: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone()\n      s = s.month(input, goFwd)\n      return s\n    }\n    return long()[this.month()]\n  },\n\n  //q1, q2, q3, q4\n  quarter: function (num, goFwd) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '')\n        num = parseInt(num, 10)\n      }\n      if (quarters[num]) {\n        let s = this.clone()\n        let month = quarters[num][0]\n        s = s.month(month, goFwd)\n        s = s.date(1, goFwd)\n        s = s.startOf('day')\n        return s\n      }\n    }\n    let month = this.d.getMonth()\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function (input, goFwd) {\n    let hem = 'north'\n    if (this.hemisphere() === 'South') {\n      hem = 'south'\n    }\n    if (input !== undefined) {    // setter\n      let s = this.clone()\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1], goFwd)\n          s = s.date(1)\n          s = s.startOf('day')\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth()\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return hem === 'north' ? 'winter' : 'summer'\n  },\n\n  //the year number\n  year: function (num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = _year(s, num)\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function (str) {\n    if (str !== undefined) {\n      let s = this.clone()\n      str = str.toLowerCase()\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear()\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = _year(s, year * -1)\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = _year(s, year * -1)\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  },\n\n  // 2019 -> 2010\n  decade: function (input) {\n    if (input !== undefined) {\n      input = String(input)\n      input = input.replace(/([0-9])'?s$/, '$1') //1950's\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input')\n        return this\n      }\n      // assume 20th century?? for '70s'.\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input\n      }\n      let year = Number(input)\n      if (isNaN(year)) {\n        return this\n      }\n      // round it down to the decade\n      year = Math.floor(year / 10) * 10\n      return this.year(year) //.startOf('decade')\n    }\n    return this.startOf('decade').year()\n  },\n  // 1950 -> 19+1\n  century: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b\n          }\n          return b\n        })\n        input = input.replace(/c$/, '') //20thC\n      }\n      let year = Number(input)\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input')\n        return this\n      }\n      // there is no century 0\n      if (year === 0) {\n        year = 1\n      }\n      if (year >= 0) {\n        year = (year - 1) * 100\n      } else {\n        year = (year + 1) * 100\n      }\n      return this.year(year)\n    }\n    // century getter\n    let num = this.startOf('century').year()\n    num = Math.floor(num / 100)\n    if (num < 0) {\n      return num - 1\n    }\n    return num + 1\n  },\n  // 2019 -> 2+1\n  millenium: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n        input = Number(input)\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input')\n          return this\n        }\n      }\n      if (input > 0) {\n        input -= 1\n      }\n      let year = input * 1000\n      // there is no year 0\n      if (year === 0) {\n        year = 1\n      }\n      return this.year(year)\n    }\n    // get the current millenium\n    let num = Math.floor(this.year() / 1000)\n    if (num >= 0) {\n      num += 1\n    }\n    return num\n  }\n}\nexport default methods\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}