{"ast":null,"code":"import { date as _date } from '../set/set.js';\nimport { aliases, short, long } from '../../data/days.js';\nimport walkTo from '../set/walk.js';\nconst methods = {\n  // # day in the month\n  date: function (num, goFwd) {\n    if (num !== undefined) {\n      let s = this.clone();\n      num = parseInt(num, 10);\n      if (num) {\n        s.epoch = _date(s, num, goFwd);\n      }\n      return s;\n    }\n    return this.d.getDate();\n  },\n  //like 'wednesday' (hard!)\n  day: function (input, goFwd) {\n    if (input === undefined) {\n      return this.d.getDay();\n    }\n    let original = this.clone();\n    let want = input;\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase();\n      if (aliases.hasOwnProperty(input)) {\n        want = aliases[input];\n      } else {\n        want = short().indexOf(input);\n        if (want === -1) {\n          want = long().indexOf(input);\n        }\n      }\n    }\n    //move approx\n    let day = this.d.getDay();\n    let diff = day - want;\n    if (goFwd === true && diff > 0) {\n      diff = diff - 7;\n    }\n    if (goFwd === false && diff < 0) {\n      diff = diff + 7;\n    }\n    let s = this.subtract(diff, 'days');\n    //tighten it back up\n    walkTo(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    });\n    return s;\n  },\n  //these are helpful name-wrappers\n  dayName: function (input, goFwd) {\n    if (input === undefined) {\n      return long()[this.day()];\n    }\n    let s = this.clone();\n    s = s.day(input, goFwd);\n    return s;\n  }\n};\nexport default methods;","map":{"version":3,"names":["date","_date","aliases","short","long","walkTo","methods","num","goFwd","undefined","s","clone","parseInt","epoch","d","getDate","day","input","getDay","original","want","toLowerCase","hasOwnProperty","indexOf","diff","subtract","hour","minute","second","dayName"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/spacetime/src/methods/query/02-date.js"],"sourcesContent":["import { date as _date } from '../set/set.js'\nimport { aliases, short, long } from '../../data/days.js'\nimport walkTo from '../set/walk.js'\n\nconst methods = {\n  // # day in the month\n  date: function (num, goFwd) {\n    if (num !== undefined) {\n      let s = this.clone()\n      num = parseInt(num, 10)\n      if (num) {\n        s.epoch = _date(s, num, goFwd)\n      }\n      return s\n    }\n    return this.d.getDate()\n  },\n\n  //like 'wednesday' (hard!)\n  day: function (input, goFwd) {\n    if (input === undefined) {\n      return this.d.getDay()\n    }\n    let original = this.clone()\n    let want = input\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase()\n      if (aliases.hasOwnProperty(input)) {\n        want = aliases[input]\n      } else {\n        want = short().indexOf(input)\n        if (want === -1) {\n          want = long().indexOf(input)\n        }\n      }\n    }\n    //move approx\n    let day = this.d.getDay()\n    let diff = day - want\n    if (goFwd === true && diff > 0) {\n      diff = diff - 7\n    }\n    if (goFwd === false && diff < 0) {\n      diff = diff + 7\n    }\n    let s = this.subtract(diff, 'days')\n    //tighten it back up\n    walkTo(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    })\n    return s\n  },\n\n  //these are helpful name-wrappers\n  dayName: function (input, goFwd) {\n    if (input === undefined) {\n      return long()[this.day()]\n    }\n    let s = this.clone()\n    s = s.day(input, goFwd)\n    return s\n  }\n}\nexport default methods\n"],"mappings":"AAAA,SAASA,IAAI,IAAIC,KAAK,QAAQ,eAAe;AAC7C,SAASC,OAAO,EAAEC,KAAK,EAAEC,IAAI,QAAQ,oBAAoB;AACzD,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,OAAO,GAAG;EACd;EACAN,IAAI,EAAE,SAAAA,CAAUO,GAAG,EAAEC,KAAK,EAAE;IAC1B,IAAID,GAAG,KAAKE,SAAS,EAAE;MACrB,IAAIC,CAAC,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;MACpBJ,GAAG,GAAGK,QAAQ,CAACL,GAAG,EAAE,EAAE,CAAC;MACvB,IAAIA,GAAG,EAAE;QACPG,CAAC,CAACG,KAAK,GAAGZ,KAAK,CAACS,CAAC,EAAEH,GAAG,EAAEC,KAAK,CAAC;MAChC;MACA,OAAOE,CAAC;IACV;IACA,OAAO,IAAI,CAACI,CAAC,CAACC,OAAO,CAAC,CAAC;EACzB,CAAC;EAED;EACAC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAET,KAAK,EAAE;IAC3B,IAAIS,KAAK,KAAKR,SAAS,EAAE;MACvB,OAAO,IAAI,CAACK,CAAC,CAACI,MAAM,CAAC,CAAC;IACxB;IACA,IAAIC,QAAQ,GAAG,IAAI,CAACR,KAAK,CAAC,CAAC;IAC3B,IAAIS,IAAI,GAAGH,KAAK;IAChB;IACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAGA,KAAK,CAACI,WAAW,CAAC,CAAC;MAC3B,IAAInB,OAAO,CAACoB,cAAc,CAACL,KAAK,CAAC,EAAE;QACjCG,IAAI,GAAGlB,OAAO,CAACe,KAAK,CAAC;MACvB,CAAC,MAAM;QACLG,IAAI,GAAGjB,KAAK,CAAC,CAAC,CAACoB,OAAO,CAACN,KAAK,CAAC;QAC7B,IAAIG,IAAI,KAAK,CAAC,CAAC,EAAE;UACfA,IAAI,GAAGhB,IAAI,CAAC,CAAC,CAACmB,OAAO,CAACN,KAAK,CAAC;QAC9B;MACF;IACF;IACA;IACA,IAAID,GAAG,GAAG,IAAI,CAACF,CAAC,CAACI,MAAM,CAAC,CAAC;IACzB,IAAIM,IAAI,GAAGR,GAAG,GAAGI,IAAI;IACrB,IAAIZ,KAAK,KAAK,IAAI,IAAIgB,IAAI,GAAG,CAAC,EAAE;MAC9BA,IAAI,GAAGA,IAAI,GAAG,CAAC;IACjB;IACA,IAAIhB,KAAK,KAAK,KAAK,IAAIgB,IAAI,GAAG,CAAC,EAAE;MAC/BA,IAAI,GAAGA,IAAI,GAAG,CAAC;IACjB;IACA,IAAId,CAAC,GAAG,IAAI,CAACe,QAAQ,CAACD,IAAI,EAAE,MAAM,CAAC;IACnC;IACAnB,MAAM,CAACK,CAAC,EAAE;MACRgB,IAAI,EAAEP,QAAQ,CAACO,IAAI,CAAC,CAAC;MACrBC,MAAM,EAAER,QAAQ,CAACQ,MAAM,CAAC,CAAC;MACzBC,MAAM,EAAET,QAAQ,CAACS,MAAM,CAAC;IAC1B,CAAC,CAAC;IACF,OAAOlB,CAAC;EACV,CAAC;EAED;EACAmB,OAAO,EAAE,SAAAA,CAAUZ,KAAK,EAAET,KAAK,EAAE;IAC/B,IAAIS,KAAK,KAAKR,SAAS,EAAE;MACvB,OAAOL,IAAI,CAAC,CAAC,CAAC,IAAI,CAACY,GAAG,CAAC,CAAC,CAAC;IAC3B;IACA,IAAIN,CAAC,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;IACpBD,CAAC,GAAGA,CAAC,CAACM,GAAG,CAACC,KAAK,EAAET,KAAK,CAAC;IACvB,OAAOE,CAAC;EACV;AACF,CAAC;AACD,eAAeJ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}