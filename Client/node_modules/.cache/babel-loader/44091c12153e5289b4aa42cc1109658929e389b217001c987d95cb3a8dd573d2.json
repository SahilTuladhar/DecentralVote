{"ast":null,"code":"import { isObject, isBoolean } from '../fns.js';\nimport { set as setD } from '../data/days.js';\nimport { set as setM } from '../data/months.js';\nimport { set as setTcf } from '../data/caseFormat.js';\nimport { set as setAmpm } from '../data/ampm.js';\nconst addMethods = SpaceTime => {\n  const methods = {\n    i18n: function (data) {\n      //change the day names\n      if (isObject(data.days)) {\n        setD(data.days);\n      }\n      //change the month names\n      if (isObject(data.months)) {\n        setM(data.months);\n      }\n\n      // change the the display style of the month / day names\n      if (isBoolean(data.useTitleCase)) {\n        setTcf(data.useTitleCase);\n      }\n\n      //change am and pm strings\n      if (isObject(data.ampm)) {\n        setAmpm(data.ampm);\n      }\n      return this;\n    }\n  };\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\nexport default addMethods;","map":{"version":3,"names":["isObject","isBoolean","set","setD","setM","setTcf","setAmpm","addMethods","SpaceTime","methods","i18n","data","days","months","useTitleCase","ampm","Object","keys","forEach","k","prototype"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/methods/i18n.js"],"sourcesContent":["import { isObject, isBoolean } from '../fns.js'\nimport { set as setD } from '../data/days.js'\nimport { set as setM } from '../data/months.js'\nimport { set as setTcf } from '../data/caseFormat.js'\nimport { set as setAmpm } from '../data/ampm.js'\n\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    i18n: function (data) {\n      //change the day names\n      if (isObject(data.days)) {\n        setD(data.days)\n      }\n      //change the month names\n      if (isObject(data.months)) {\n        setM(data.months)\n      }\n\n      // change the the display style of the month / day names\n      if (isBoolean(data.useTitleCase)) {\n        setTcf(data.useTitleCase)\n      }\n\n      //change am and pm strings\n      if (isObject(data.ampm)) {\n        setAmpm(data.ampm)\n      }\n      return this\n    }\n  }\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k]\n  })\n}\n\nexport default addMethods\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,WAAW;AAC/C,SAASC,GAAG,IAAIC,IAAI,QAAQ,iBAAiB;AAC7C,SAASD,GAAG,IAAIE,IAAI,QAAQ,mBAAmB;AAC/C,SAASF,GAAG,IAAIG,MAAM,QAAQ,uBAAuB;AACrD,SAASH,GAAG,IAAII,OAAO,QAAQ,iBAAiB;AAGhD,MAAMC,UAAU,GAAGC,SAAS,IAAI;EAC9B,MAAMC,OAAO,GAAG;IACdC,IAAI,EAAE,SAAAA,CAAUC,IAAI,EAAE;MACpB;MACA,IAAIX,QAAQ,CAACW,IAAI,CAACC,IAAI,CAAC,EAAE;QACvBT,IAAI,CAACQ,IAAI,CAACC,IAAI,CAAC;MACjB;MACA;MACA,IAAIZ,QAAQ,CAACW,IAAI,CAACE,MAAM,CAAC,EAAE;QACzBT,IAAI,CAACO,IAAI,CAACE,MAAM,CAAC;MACnB;;MAEA;MACA,IAAIZ,SAAS,CAACU,IAAI,CAACG,YAAY,CAAC,EAAE;QAChCT,MAAM,CAACM,IAAI,CAACG,YAAY,CAAC;MAC3B;;MAEA;MACA,IAAId,QAAQ,CAACW,IAAI,CAACI,IAAI,CAAC,EAAE;QACvBT,OAAO,CAACK,IAAI,CAACI,IAAI,CAAC;MACpB;MACA,OAAO,IAAI;IACb;EACF,CAAC;;EAED;EACAC,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACS,OAAO,CAACC,CAAC,IAAI;IAChCX,SAAS,CAACY,SAAS,CAACD,CAAC,CAAC,GAAGV,OAAO,CAACU,CAAC,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC;AAED,eAAeZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}