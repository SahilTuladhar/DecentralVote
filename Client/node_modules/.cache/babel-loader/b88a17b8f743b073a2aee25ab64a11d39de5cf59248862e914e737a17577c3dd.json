{"ast":null,"code":"import { normalize } from '../fns.js';\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress();\n  unit = normalize(unit);\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour';\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit);\n    }\n    // go to start\n    s = s.startOf(unit);\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\");\n  }\n  return s;\n};\nexport default nearest;","map":{"version":3,"names":["normalize","nearest","s","unit","prog","progress","undefined","add","startOf","silent","console","warn"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/methods/nearest.js"],"sourcesContent":["import { normalize } from '../fns.js'\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress()\n  unit = normalize(unit)\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour'\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit)\n    }\n    // go to start\n    s = s.startOf(unit)\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\")\n  }\n  return s\n}\nexport default nearest\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;;AAErC;AACA,MAAMC,OAAO,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;EAC3B;EACA,IAAIC,IAAI,GAAGF,CAAC,CAACG,QAAQ,CAAC,CAAC;EACvBF,IAAI,GAAGH,SAAS,CAACG,IAAI,CAAC;EACtB;EACA,IAAIA,IAAI,KAAK,aAAa,EAAE;IAC1BA,IAAI,GAAG,aAAa;EACtB;EACA,IAAIC,IAAI,CAACD,IAAI,CAAC,KAAKG,SAAS,EAAE;IAC5B;IACA,IAAIF,IAAI,CAACD,IAAI,CAAC,GAAG,GAAG,EAAE;MACpBD,CAAC,GAAGA,CAAC,CAACK,GAAG,CAAC,CAAC,EAAEJ,IAAI,CAAC;IACpB;IACA;IACAD,CAAC,GAAGA,CAAC,CAACM,OAAO,CAACL,IAAI,CAAC;EACrB,CAAC,MAAM,IAAID,CAAC,CAACO,MAAM,KAAK,KAAK,EAAE;IAC7BC,OAAO,CAACC,IAAI,CAAC,iBAAiB,GAAGR,IAAI,GAAG,GAAG,CAAC;EAC9C;EACA,OAAOD,CAAC;AACV,CAAC;AACD,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}