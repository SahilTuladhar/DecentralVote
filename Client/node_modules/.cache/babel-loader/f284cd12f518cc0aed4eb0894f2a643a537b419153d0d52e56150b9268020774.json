{"ast":null,"code":"import e from \"../lib/LdrsBaseElement.js\";\nvar i = ':host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{align-items:center;display:flex;height:var(--uib-size);justify-content:flex-start;position:relative;width:var(--uib-size)}.line{align-items:flex-start;display:flex;height:100%;left:calc(50% - var(--uib-stroke)/2);position:absolute;top:0;width:var(--uib-stroke)}.line:before{animation:pulse calc(var(--uib-speed)) ease-in-out infinite;background-color:var(--uib-color);border-radius:calc(var(--uib-stroke)/2);content:\"\";height:22%;transform-origin:center bottom;transition:background-color .3s ease;width:100%}.line:first-child{transform:rotate(-30deg)}.line:first-child:before{animation-delay:calc(var(--uib-speed)/-12*1)}.line:nth-child(2){transform:rotate(-60deg)}.line:nth-child(2):before{animation-delay:calc(var(--uib-speed)/-12*2)}.line:nth-child(3){transform:rotate(-90deg)}.line:nth-child(3):before{animation-delay:calc(var(--uib-speed)/-12*3)}.line:nth-child(4){transform:rotate(-120deg)}.line:nth-child(4):before{animation-delay:calc(var(--uib-speed)/-12*4)}.line:nth-child(5){transform:rotate(-150deg)}.line:nth-child(5):before{animation-delay:calc(var(--uib-speed)/-12*5)}.line:nth-child(6){transform:rotate(-180deg)}.line:nth-child(6):before{animation-delay:calc(var(--uib-speed)/-12*6)}.line:nth-child(7){transform:rotate(-210deg)}.line:nth-child(7):before{animation-delay:calc(var(--uib-speed)/-12*7)}.line:nth-child(8){transform:rotate(-240deg)}.line:nth-child(8):before{animation-delay:calc(var(--uib-speed)/-12*8)}.line:nth-child(9){transform:rotate(-270deg)}.line:nth-child(9):before{animation-delay:calc(var(--uib-speed)/-12*9)}.line:nth-child(10){transform:rotate(-300deg)}.line:nth-child(10):before{animation-delay:calc(var(--uib-speed)/-12*10)}.line:nth-child(11){transform:rotate(-330deg)}.line:nth-child(11):before{animation-delay:calc(var(--uib-speed)/-12*11)}@keyframes pulse{0%,80%,to{opacity:0;transform:scaleY(.75)}20%{opacity:1;transform:scaleY(1)}}';\nclass t extends e {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\"];\n  size;\n  color;\n  speed;\n  stroke;\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\", \"stroke\"];\n  }\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 40,\n      color: \"black\",\n      speed: 1,\n      stroke: 3\n    }), this.template.innerHTML = `\\n      <div class=\"container\">\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n      </div>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-stroke: ${this.stroke}px;\\n        }\\n        ${i}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const e = this.shadow.querySelector(\"style\");\n    e && (e.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-stroke: ${this.stroke}px;\\n      }\\n      ${i}\\n    `);\n  }\n}\nvar n = {\n  register: (e = \"l-line-spinner\") => {\n    customElements.get(e) || customElements.define(e, class extends t {});\n  },\n  element: t\n};\nexport { n as default };","map":{"version":3,"names":["t","e","_attributes","size","color","speed","stroke","observedAttributes","constructor","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","template","innerHTML","i","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","n","register","customElements","get","define","element","default"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/ldrs/temp-ts-out/elements/lineSpinner.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './lineSpinner.scss';\nclass LineSpinner extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke'];\n    size;\n    color;\n    speed;\n    stroke;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 40,\n            color: 'black',\n            speed: 1,\n            stroke: 3,\n        });\n        this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n      </div>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-stroke: ${this.stroke}px;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-stroke: ${this.stroke}px;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-line-spinner') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends LineSpinner {\n            });\n        }\n    },\n    element: LineSpinner,\n};\n"],"mappings":";;AAEA,MAAMA,CAAA,SAAoBC,CAAA;EACtBC,WAAA,GAAc,CAAC,QAAQ,SAAS,SAAS;EACzCC,IAAA;EACAC,KAAA;EACAC,KAAA;EACAC,MAAA;EACW,WAAAC,mBAAA;IACP,OAAO,CAAC,QAAQ,SAAS,SAAS,SACrC;EAAA;EACDC,YAAA;IACI,SACA,KAAKC,mBAAA,CAAoB,KAAKP,WAAA,GAC9B,KAAKQ,OAAA,CAAQ,KAAKR,WAAA,CACrB;EAAA;EACDS,kBAAA;IACI,KAAKC,kBAAA,IACL,KAAKC,iBAAA,CAAkB;MACnBV,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,MAAA,EAAQ;IAAA,IAEZ,KAAKQ,QAAA,CAASC,SAAA,GAAY,+fAiBV,KAAKZ,IAAA,+BACJ,KAAKC,KAAA,6BACL,KAAKC,KAAA,+BACJ,KAAKC,MAAA,2BAErBU,CAAA,0BAGF,KAAKC,MAAA,CAAOC,eAAA,CAAgB,KAAKJ,QAAA,CAASK,OAAA,CAAQC,SAAA,EAAU,GAC/D;EAAA;EACDC,yBAAA;IACI,MAAMpB,CAAA,GAAU,KAAKgB,MAAA,CAAOK,aAAA,CAAc;IACrCrB,CAAA,KAELA,CAAA,CAAQc,SAAA,GAAY,uCAEN,KAAKZ,IAAA,6BACJ,KAAKC,KAAA,2BACL,KAAKC,KAAA,6BACJ,KAAKC,MAAA,uBAErBU,CAAA,SAEH;EAAA;AAAA;AAEL,IAAeO,CAAA;EACXC,QAAA,EAAUA,CAACvB,CAAA,GAAO;IACTwB,cAAA,CAAeC,GAAA,CAAIzB,CAAA,KACpBwB,cAAA,CAAeE,MAAA,CAAO1B,CAAA,EAAM,cAAcD,CAAA,IAE7C;EAAA;EAEL4B,OAAA,EAAS5B;AAAA;AAAA,SAAAuB,CAAA,IAAAM,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}