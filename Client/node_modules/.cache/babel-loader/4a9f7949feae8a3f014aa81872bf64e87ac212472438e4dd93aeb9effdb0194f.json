{"ast":null,"code":"import t from \"../lib/scaleD.js\";\nimport e from \"../lib/LdrsBaseElement.js\";\nvar s = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:calc(var(--uib-size)*.42);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{height:calc(var(--uib-size)*.42);overflow:visible;transform-origin:center;width:var(--uib-size)}.car{fill:none;stroke:var(--uib-color);stroke-dasharray:var(--uib-dash),var(--uib-gap);stroke-dashoffset:0;stroke-linecap:round;animation:travel var(--uib-speed) linear infinite;transition:stroke .5s ease;will-change:stroke-dasharray,stroke-dashoffset}.track{stroke:var(--uib-color);opacity:var(--uib-bg-opacity)}@keyframes travel{0%{stroke-dashoffset:0}to{stroke-dashoffset:100}}\";\nclass i extends e {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\", \"stroke-length\", \"bg-opacity\"];\n  size;\n  color;\n  speed;\n  stroke;\n  \"stroke-length\";\n  \"bg-opacity\";\n  d;\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\", \"stroke\", \"stroke-length\", \"bg-opacity\"];\n  }\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes), this.d = \"M26.7,12.2c3.5,3.4,7.4,7.8,12.7,7.8c5.5,0,9.6-4.4,9.6-9.5C49,5,45.1,1,39.8,1c-5.5,0-9.5,4.2-13.1,7.8l-3.4,3.3c-3.6,3.6-7.6,7.8-13.1,7.8C4.9,20,1,16,1,10.5C1,5.4,5.1,1,10.6,1c5.3,0,9.2,4.5,12.7,7.8L26.7,12.2z\";\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 55,\n      color: \"black\",\n      speed: 1.3,\n      stroke: 4,\n      \"stroke-length\": .15,\n      \"bg-opacity\": .1\n    });\n    const e = parseInt(this.size),\n      i = t(e / 50, this.d);\n    this.template.innerHTML = `\\n      <svg\\n        class=\"container\" \\n        x=\"0px\" \\n        y=\"0px\"\\n        viewBox=\"0 0 ${this.size} ${e * (2.1 / 5)}\"\\n        height=\"${e * (2.1 / 5)}\"\\n        width=\"${this.size}\"\\n        preserveAspectRatio='xMidYMid meet'\\n      >\\n        <path\\n          class=\"track\" \\n          fill=\"none\" \\n          stroke-width=\"${this.stroke}\" \\n          pathlength=\"100\"\\n          d=\"${i}\"\\n        />\\n\\n        <path\\n          class=\"car\" \\n          fill=\"none\" \\n          stroke-width=\"${this.stroke}\" \\n          pathlength=\"100\"\\n          d=\"${i}\"\\n        />\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-dash: ${100 * parseFloat(this[\"stroke-length\"])};\\n          --uib-gap: ${100 - 100 * parseFloat(this[\"stroke-length\"])};\\n          --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n        }\\n        ${s}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const e = this.shadow.querySelector(\"style\"),\n      i = this.shadow.querySelector(\"svg\"),\n      r = this.shadow.querySelectorAll(\"path\"),\n      n = parseInt(this.size);\n    e && (i.setAttribute(\"height\", String(n * (2.1 / 5))), i.setAttribute(\"width\", this.size), i.setAttribute(\"viewBox\", `0 0 ${this.size} ${n * (2.1 / 5)}`), r.forEach(e => {\n      e.setAttribute(\"stroke-width\", this.stroke), e.setAttribute(\"d\", t(n / 50, this.d));\n    }), e.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-dash: ${100 * parseFloat(this[\"stroke-length\"])};\\n        --uib-gap: ${100 - 100 * parseFloat(this[\"stroke-length\"])};\\n        --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n      }\\n      ${s}\\n    `);\n  }\n}\nvar r = {\n  register: (t = \"l-infinity\") => {\n    customElements.get(t) || customElements.define(t, class extends i {});\n  },\n  element: i\n};\nexport { r as default };","map":{"version":3,"names":["i","e","_attributes","size","color","speed","stroke","d","observedAttributes","constructor","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","parseInt","t","template","innerHTML","parseFloat","s","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","r","querySelectorAll","n","setAttribute","String","forEach","register","customElements","get","define","element","default"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/ldrs/temp-ts-out/elements/infinity.js"],"sourcesContent":["import scaleD from '../lib/scaleD.js';\nimport Base from '../lib/LdrsBaseElement.js';\nimport styles from './infinity.scss';\nclass Infinity extends Base {\n    _attributes = [\n        'size',\n        'color',\n        'speed',\n        'stroke',\n        'stroke-length',\n        'bg-opacity',\n    ];\n    size;\n    color;\n    speed;\n    stroke;\n    'stroke-length';\n    'bg-opacity';\n    d;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke', 'stroke-length', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n        this.d =\n            'M26.7,12.2c3.5,3.4,7.4,7.8,12.7,7.8c5.5,0,9.6-4.4,9.6-9.5C49,5,45.1,1,39.8,1c-5.5,0-9.5,4.2-13.1,7.8l-3.4,3.3c-3.6,3.6-7.6,7.8-13.1,7.8C4.9,20,1,16,1,10.5C1,5.4,5.1,1,10.6,1c5.3,0,9.2,4.5,12.7,7.8L26.7,12.2z';\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 55,\n            color: 'black',\n            speed: 1.3,\n            stroke: 4,\n            'stroke-length': 0.15,\n            'bg-opacity': 0.1,\n        });\n        const sizeInt = parseInt(this.size);\n        const scaledD = scaleD(sizeInt / 50, this.d);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\" \n        x=\"0px\" \n        y=\"0px\"\n        viewBox=\"0 0 ${this.size} ${sizeInt * (2.1 / 5)}\"\n        height=\"${sizeInt * (2.1 / 5)}\"\n        width=\"${this.size}\"\n        preserveAspectRatio='xMidYMid meet'\n      >\n        <path\n          class=\"track\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}\" \n          pathlength=\"100\"\n          d=\"${scaledD}\"\n        />\n\n        <path\n          class=\"car\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}\" \n          pathlength=\"100\"\n          d=\"${scaledD}\"\n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n          --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const pathEls = this.shadow.querySelectorAll('path');\n        const sizeInt = parseInt(this.size);\n        if (!styleEl)\n            return;\n        svgEl.setAttribute('height', String(sizeInt * (2.1 / 5)));\n        svgEl.setAttribute('width', this.size);\n        svgEl.setAttribute('viewBox', `0 0 ${this.size} ${sizeInt * (2.1 / 5)}`);\n        pathEls.forEach((pathEl) => {\n            pathEl.setAttribute('stroke-width', this.stroke);\n            pathEl.setAttribute('d', scaleD(sizeInt / 50, this.d));\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n        --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-infinity') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Infinity {\n            });\n        }\n    },\n    element: Infinity,\n};\n"],"mappings":";;;AAGA,MAAMA,CAAA,SAAiBC,CAAA;EACnBC,WAAA,GAAc,CACV,QACA,SACA,SACA,UACA,iBACA;EAEJC,IAAA;EACAC,KAAA;EACAC,KAAA;EACAC,MAAA;EACA;EACA;EACAC,CAAA;EACW,WAAAC,mBAAA;IACP,OAAO,CAAC,QAAQ,SAAS,SAAS,UAAU,iBAAiB,aAChE;EAAA;EACDC,YAAA;IACI,SACA,KAAKC,mBAAA,CAAoB,KAAKR,WAAA,GAC9B,KAAKS,OAAA,CAAQ,KAAKT,WAAA,GAClB,KAAKK,CAAA,GACD,iNACP;EAAA;EACDK,kBAAA;IACI,KAAKC,kBAAA,IACL,KAAKC,iBAAA,CAAkB;MACnBX,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,MAAA,EAAQ;MACR,iBAAiB;MACjB,cAAc;IAAA;IAElB,MAAML,CAAA,GAAUc,QAAA,CAAS,KAAKZ,IAAA;MACxBH,CAAA,GAAUgB,CAAA,CAAOf,CAAA,GAAU,IAAI,KAAKM,CAAA;IAC1C,KAAKU,QAAA,CAASC,SAAA,GAAY,qGAKX,KAAKf,IAAA,IAAQF,CAAA,IAAW,MAAM,wBACnCA,CAAA,IAAW,MAAM,uBAClB,KAAKE,IAAA,qJAMI,KAAKG,MAAA,gDAEhBN,CAAA,2GAMW,KAAKM,MAAA,gDAEhBN,CAAA,qFAKS,KAAKG,IAAA,+BACJ,KAAKC,KAAA,6BACL,KAAKC,KAAA,6BAC8B,MAApCc,UAAA,CAAW,KAAK,4CACjB,MAA0C,MAApCA,UAAA,CAAW,KAAK,mDACf,KAAK,sCAEzBC,CAAA,0BAGF,KAAKC,MAAA,CAAOC,eAAA,CAAgB,KAAKL,QAAA,CAASM,OAAA,CAAQC,SAAA,EAAU,GAC/D;EAAA;EACDC,yBAAA;IACI,MAAMxB,CAAA,GAAU,KAAKoB,MAAA,CAAOK,aAAA,CAAc;MACpC1B,CAAA,GAAQ,KAAKqB,MAAA,CAAOK,aAAA,CAAc;MAClCC,CAAA,GAAU,KAAKN,MAAA,CAAOO,gBAAA,CAAiB;MACvCC,CAAA,GAAUd,QAAA,CAAS,KAAKZ,IAAA;IACzBF,CAAA,KAELD,CAAA,CAAM8B,YAAA,CAAa,UAAUC,MAAA,CAAOF,CAAA,IAAW,MAAM,MACrD7B,CAAA,CAAM8B,YAAA,CAAa,SAAS,KAAK3B,IAAA,GACjCH,CAAA,CAAM8B,YAAA,CAAa,WAAW,OAAO,KAAK3B,IAAA,IAAQ0B,CAAA,IAAW,MAAM,OACnEF,CAAA,CAAQK,OAAA,CAAS/B,CAAA;MACbA,CAAA,CAAO6B,YAAA,CAAa,gBAAgB,KAAKxB,MAAA,GACzCL,CAAA,CAAO6B,YAAA,CAAa,KAAKd,CAAA,CAAOa,CAAA,GAAU,IAAI,KAAKtB,CAAA,EAAG;IAAA,IAE1DN,CAAA,CAAQiB,SAAA,GAAY,uCAEN,KAAKf,IAAA,6BACJ,KAAKC,KAAA,2BACL,KAAKC,KAAA,2BAC8B,MAApCc,UAAA,CAAW,KAAK,0CACjB,MAA0C,MAApCA,UAAA,CAAW,KAAK,iDACf,KAAK,kCAEzBC,CAAA,SAEH;EAAA;AAAA;AAEL,IAAeO,CAAA;EACXM,QAAA,EAAUA,CAACjB,CAAA,GAAO;IACTkB,cAAA,CAAeC,GAAA,CAAInB,CAAA,KACpBkB,cAAA,CAAeE,MAAA,CAAOpB,CAAA,EAAM,cAAchB,CAAA,IAE7C;EAAA;EAELqC,OAAA,EAASrC;AAAA;AAAA,SAAA2B,CAAA,IAAAW,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}