{"ast":null,"code":"//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexport function isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n// unsurprisingly-nasty `typeof date` call\nexport function isDate(d) {\n  return Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf());\n}\nexport function isArray(input) {\n  return Object.prototype.toString.call(input) === '[object Array]';\n}\nexport function isObject(input) {\n  return Object.prototype.toString.call(input) === '[object Object]';\n}\nexport function isBoolean(input) {\n  return Object.prototype.toString.call(input) === '[object Boolean]';\n}\nexport function zeroPad(str, len = 2) {\n  let pad = '0';\n  str = str + '';\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str;\n}\nexport function titleCase(str) {\n  if (!str) {\n    return '';\n  }\n  return str[0].toUpperCase() + str.substr(1);\n}\nexport function ordinal(i) {\n  let j = i % 10;\n  let k = i % 100;\n  if (j === 1 && k !== 11) {\n    return i + 'st';\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd';\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd';\n  }\n  return i + 'th';\n}\n\n//strip 'st' off '1st'..\nexport function toCardinal(str) {\n  str = String(str);\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n  return parseInt(str, 10);\n}\n\n//used mostly for cleanup of unit names, like 'months'\nexport function normalize(str = '') {\n  str = str.toLowerCase().trim();\n  str = str.replace(/ies$/, 'y'); //'centuries'\n  str = str.replace(/s$/, '');\n  str = str.replace(/-/g, '');\n  if (str === 'day' || str === 'days') {\n    return 'date';\n  }\n  if (str === 'min' || str === 'mins') {\n    return 'minute';\n  }\n  return str;\n}\nexport function getEpoch(tmp) {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp;\n  }\n  //suport date objects\n  if (isDate(tmp)) {\n    return tmp.getTime();\n  }\n  if (tmp.epoch) {\n    return tmp.epoch;\n  }\n  return null;\n}\n\n//make sure this input is a spacetime obj\nexport function beADate(d, s) {\n  if (isObject(d) === false) {\n    return s.clone().set(d);\n  }\n  return d;\n}\nexport function formatTimezone(offset, delimiter = '') {\n  const sign = offset > 0 ? '+' : '-';\n  const absOffset = Math.abs(offset);\n  const hours = zeroPad(parseInt('' + absOffset, 10));\n  const minutes = zeroPad(absOffset % 1 * 60);\n  return `${sign}${hours}${delimiter}${minutes}`;\n}","map":{"version":3,"names":["isLeapYear","year","isDate","d","Object","prototype","toString","call","isNaN","valueOf","isArray","input","isObject","isBoolean","zeroPad","str","len","pad","length","Array","join","titleCase","toUpperCase","substr","ordinal","i","j","k","toCardinal","String","replace","parseInt","normalize","toLowerCase","trim","getEpoch","tmp","getTime","epoch","beADate","s","clone","set","formatTimezone","offset","delimiter","sign","absOffset","Math","abs","hours","minutes"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/fns.js"],"sourcesContent":["//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexport function isLeapYear(year) { return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 }\n// unsurprisingly-nasty `typeof date` call\nexport function isDate(d) { return Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf()) }\nexport function isArray(input) { return Object.prototype.toString.call(input) === '[object Array]' }\nexport function isObject(input) { return Object.prototype.toString.call(input) === '[object Object]' }\nexport function isBoolean(input) { return Object.prototype.toString.call(input) === '[object Boolean]' }\n\nexport function zeroPad(str, len = 2) {\n  let pad = '0'\n  str = str + ''\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n}\n\nexport function titleCase(str) {\n  if (!str) {\n    return ''\n  }\n  return str[0].toUpperCase() + str.substr(1)\n}\n\nexport function ordinal(i) {\n  let j = i % 10\n  let k = i % 100\n  if (j === 1 && k !== 11) {\n    return i + 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd'\n  }\n  return i + 'th'\n}\n\n//strip 'st' off '1st'..\nexport function toCardinal(str) {\n  str = String(str)\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1')\n  return parseInt(str, 10)\n}\n\n//used mostly for cleanup of unit names, like 'months'\nexport function normalize(str = '') {\n  str = str.toLowerCase().trim()\n  str = str.replace(/ies$/, 'y') //'centuries'\n  str = str.replace(/s$/, '')\n  str = str.replace(/-/g, '')\n  if (str === 'day' || str === 'days') {\n    return 'date'\n  }\n  if (str === 'min' || str === 'mins') {\n    return 'minute'\n  }\n  return str\n}\n\nexport function getEpoch(tmp) {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp\n  }\n  //suport date objects\n  if (isDate(tmp)) {\n    return tmp.getTime()\n  }\n  if (tmp.epoch) {\n    return tmp.epoch\n  }\n  return null\n}\n\n//make sure this input is a spacetime obj\nexport function beADate(d, s) {\n  if (isObject(d) === false) {\n    return s.clone().set(d)\n  }\n  return d\n}\n\nexport function formatTimezone(offset, delimiter = '') {\n  const sign = offset > 0 ? '+' : '-'\n  const absOffset = Math.abs(offset)\n  const hours = zeroPad(parseInt('' + absOffset, 10))\n  const minutes = zeroPad((absOffset % 1) * 60)\n  return `${sign}${hours}${delimiter}${minutes}`\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}