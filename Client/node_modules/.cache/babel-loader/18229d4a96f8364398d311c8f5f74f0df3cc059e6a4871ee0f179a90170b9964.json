{"ast":null,"code":"import diffOne from './one.js';\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year();\n  // should we decrement it by 1?\n  a = a.year(b.year());\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n  return years;\n};\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function (a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch;\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10);\n\n  //do the year\n  let tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year');\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += diffOne(tmp, b, 'month');\n\n  // there's always 4 quarters in a year...\n  obj.quarters = obj.years * 4;\n  obj.quarters += parseInt(obj.months % 12 / 3, 10);\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += diffOne(tmp, b, 'week');\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += diffOne(tmp, b, 'day');\n  return obj;\n};\nexport default diff;","map":{"version":3,"names":["diffOne","fastYear","a","b","years","year","isAfter","diff","msDiff","epoch","obj","milliseconds","seconds","parseInt","minutes","hours","tmp","clone","add","months","quarters","weeks","days"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/methods/diff/waterfall.js"],"sourcesContent":["import diffOne from './one.js'\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year()\n  // should we decrement it by 1?\n  a = a.year(b.year())\n  if (a.isAfter(b)) {\n    years -= 1\n  }\n  return years\n}\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function (a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  }\n  obj.minutes = parseInt(obj.seconds / 60, 10)\n  obj.hours = parseInt(obj.minutes / 60, 10)\n\n  //do the year\n  let tmp = a.clone()\n  obj.years = fastYear(tmp, b)\n  tmp = a.add(obj.years, 'year')\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12\n  tmp = a.add(obj.months, 'month')\n  obj.months += diffOne(tmp, b, 'month')\n\n  // there's always 4 quarters in a year...\n  obj.quarters = obj.years * 4\n  obj.quarters += parseInt((obj.months % 12) / 3, 10)\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52\n  tmp = a.add(obj.weeks, 'week')\n  obj.weeks += diffOne(tmp, b, 'week')\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7\n  tmp = a.add(obj.days, 'day')\n  obj.days += diffOne(tmp, b, 'day')\n\n  return obj\n}\nexport default diff\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,UAAU;;AAE9B;AACA;AACA;AACA,MAAMC,QAAQ,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACzB,IAAIC,KAAK,GAAGD,CAAC,CAACE,IAAI,CAAC,CAAC,GAAGH,CAAC,CAACG,IAAI,CAAC,CAAC;EAC/B;EACAH,CAAC,GAAGA,CAAC,CAACG,IAAI,CAACF,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;EACpB,IAAIH,CAAC,CAACI,OAAO,CAACH,CAAC,CAAC,EAAE;IAChBC,KAAK,IAAI,CAAC;EACZ;EACA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA,MAAMG,IAAI,GAAG,SAAAA,CAAUL,CAAC,EAAEC,CAAC,EAAE;EAC3B;EACA;EACA,IAAIK,MAAM,GAAGL,CAAC,CAACM,KAAK,GAAGP,CAAC,CAACO,KAAK;EAC9B,IAAIC,GAAG,GAAG;IACRC,YAAY,EAAEH,MAAM;IACpBI,OAAO,EAAEC,QAAQ,CAACL,MAAM,GAAG,IAAI,EAAE,EAAE;EACrC,CAAC;EACDE,GAAG,CAACI,OAAO,GAAGD,QAAQ,CAACH,GAAG,CAACE,OAAO,GAAG,EAAE,EAAE,EAAE,CAAC;EAC5CF,GAAG,CAACK,KAAK,GAAGF,QAAQ,CAACH,GAAG,CAACI,OAAO,GAAG,EAAE,EAAE,EAAE,CAAC;;EAE1C;EACA,IAAIE,GAAG,GAAGd,CAAC,CAACe,KAAK,CAAC,CAAC;EACnBP,GAAG,CAACN,KAAK,GAAGH,QAAQ,CAACe,GAAG,EAAEb,CAAC,CAAC;EAC5Ba,GAAG,GAAGd,CAAC,CAACgB,GAAG,CAACR,GAAG,CAACN,KAAK,EAAE,MAAM,CAAC;;EAE9B;EACAM,GAAG,CAACS,MAAM,GAAGT,GAAG,CAACN,KAAK,GAAG,EAAE;EAC3BY,GAAG,GAAGd,CAAC,CAACgB,GAAG,CAACR,GAAG,CAACS,MAAM,EAAE,OAAO,CAAC;EAChCT,GAAG,CAACS,MAAM,IAAInB,OAAO,CAACgB,GAAG,EAAEb,CAAC,EAAE,OAAO,CAAC;;EAEtC;EACAO,GAAG,CAACU,QAAQ,GAAGV,GAAG,CAACN,KAAK,GAAG,CAAC;EAC5BM,GAAG,CAACU,QAAQ,IAAIP,QAAQ,CAAEH,GAAG,CAACS,MAAM,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,CAAC;;EAEnD;EACA;EACAT,GAAG,CAACW,KAAK,GAAGX,GAAG,CAACN,KAAK,GAAG,EAAE;EAC1BY,GAAG,GAAGd,CAAC,CAACgB,GAAG,CAACR,GAAG,CAACW,KAAK,EAAE,MAAM,CAAC;EAC9BX,GAAG,CAACW,KAAK,IAAIrB,OAAO,CAACgB,GAAG,EAAEb,CAAC,EAAE,MAAM,CAAC;;EAEpC;EACAO,GAAG,CAACY,IAAI,GAAGZ,GAAG,CAACW,KAAK,GAAG,CAAC;EACxBL,GAAG,GAAGd,CAAC,CAACgB,GAAG,CAACR,GAAG,CAACY,IAAI,EAAE,KAAK,CAAC;EAC5BZ,GAAG,CAACY,IAAI,IAAItB,OAAO,CAACgB,GAAG,EAAEb,CAAC,EAAE,KAAK,CAAC;EAElC,OAAOO,GAAG;AACZ,CAAC;AACD,eAAeH,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}