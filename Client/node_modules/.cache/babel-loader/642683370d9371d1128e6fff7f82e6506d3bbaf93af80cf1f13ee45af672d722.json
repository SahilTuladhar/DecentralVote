{"ast":null,"code":"import t from \"../lib/LdrsBaseElement.js\";\nvar e = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{height:var(--uib-size);overflow:visible;transform-origin:center;width:var(--uib-size);will-change:transform}.car{stroke:var(--uib-color);stroke-dasharray:var(--uib-dash),var(--uib-gap);stroke-dashoffset:0;animation:travel var(--uib-speed) linear infinite;will-change:stroke-dasharray,stroke-dashoffset}.car,.track{fill:none;transition:stroke .5s ease}.track{stroke:var(--uib-color);opacity:var(--uib-bg-opacity)}@keyframes travel{0%{stroke-dashoffset:0}to{stroke-dashoffset:-100}}\";\nclass s extends t {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\", \"stroke-length\", \"bg-opacity\"];\n  size;\n  color;\n  speed;\n  stroke;\n  \"stroke-length\";\n  \"bg-opacity\";\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"stroke\", \"stroke-length\", \"speed\", \"bg-opacity\"];\n  }\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 35,\n      color: \"black\",\n      stroke: 5,\n      \"stroke-length\": .25,\n      speed: 1.2,\n      \"bg-opacity\": .1\n    });\n    const t = parseInt(this.size),\n      s = parseInt(this.stroke),\n      i = s / 2,\n      r = Math.max(t - s / 2, 0);\n    this.template.innerHTML = `\\n      <svg\\n        class=\"container\"\\n        viewBox=\"0 0 ${this.size} ${this.size}\"\\n        height=\"${this.size}\"\\n        width=\"${this.size}\"\\n      >\\n        <rect \\n          class=\"track\"\\n          x=\"${i}\" \\n          y=\"${i}\" \\n          fill=\"none\" \\n          stroke-width=\"${this.stroke}px\" \\n          width=\"${r}\" \\n          height=\"${r}\"\\n        />\\n        <rect \\n          class=\"car\"\\n          x=\"${i}\" \\n          y=\"${i}\" \\n          fill=\"none\" \\n          stroke-width=\"${this.stroke}px\" \\n          width=\"${r}\" \\n          height=\"${r}\"\\n          pathlength=\"100\"\\n        />\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-dash: ${100 * parseFloat(this[\"stroke-length\"])};\\n          --uib-gap: ${100 - 100 * parseFloat(this[\"stroke-length\"])};\\n          --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n        }\\n        ${e}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const t = this.shadow.querySelector(\"style\"),\n      s = this.shadow.querySelector(\"svg\"),\n      i = this.shadow.querySelectorAll(\"rect\");\n    if (!t) return;\n    const r = parseInt(this.size),\n      n = parseInt(this.stroke),\n      o = String(n / 2),\n      a = String(Math.max(r - n / 2, 0));\n    s.setAttribute(\"height\", this.size), s.setAttribute(\"width\", this.size), s.setAttribute(\"viewBox\", `0 0 ${this.size} ${this.size}`), i.forEach(t => {\n      t.setAttribute(\"stroke-width\", this.stroke), t.setAttribute(\"width\", a), t.setAttribute(\"height\", a), t.setAttribute(\"x\", o), t.setAttribute(\"y\", o);\n    }), t.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-dash: ${100 * parseFloat(this[\"stroke-length\"])};\\n        --uib-gap: ${100 - 100 * parseFloat(this[\"stroke-length\"])};\\n        --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n      }\\n      ${e}\\n    `;\n  }\n}\nvar i = {\n  register: (t = \"l-square\") => {\n    customElements.get(t) || customElements.define(t, class extends s {});\n  },\n  element: s\n};\nexport { i as default };","map":{"version":3,"names":["s","t","_attributes","size","color","speed","stroke","observedAttributes","constructor","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","parseInt","i","r","Math","max","template","innerHTML","parseFloat","e","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","querySelectorAll","n","o","String","a","setAttribute","forEach","register","customElements","get","define","element","default"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/ldrs/temp-ts-out/elements/square.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './square.scss';\nclass Square extends Base {\n    _attributes = [\n        'size',\n        'color',\n        'speed',\n        'stroke',\n        'stroke-length',\n        'bg-opacity',\n    ];\n    size;\n    color;\n    speed;\n    stroke;\n    'stroke-length';\n    'bg-opacity';\n    static get observedAttributes() {\n        return ['size', 'color', 'stroke', 'stroke-length', 'speed', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 35,\n            color: 'black',\n            stroke: 5,\n            'stroke-length': 0.25,\n            speed: 1.2,\n            'bg-opacity': 0.1,\n        });\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = strokeInt / 2;\n        const strokeAdjustedSize = Math.max(sizeInt - strokeInt / 2, 0);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\"\n        viewBox=\"0 0 ${this.size} ${this.size}\"\n        height=\"${this.size}\"\n        width=\"${this.size}\"\n      >\n        <rect \n          class=\"track\"\n          x=\"${centerPoint}\" \n          y=\"${centerPoint}\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}px\" \n          width=\"${strokeAdjustedSize}\" \n          height=\"${strokeAdjustedSize}\"\n        />\n        <rect \n          class=\"car\"\n          x=\"${centerPoint}\" \n          y=\"${centerPoint}\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}px\" \n          width=\"${strokeAdjustedSize}\" \n          height=\"${strokeAdjustedSize}\"\n          pathlength=\"100\"\n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n          --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const squareEls = this.shadow.querySelectorAll('rect');\n        if (!styleEl)\n            return;\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = String(strokeInt / 2);\n        const strokeAdjustedSize = String(Math.max(sizeInt - strokeInt / 2, 0));\n        svgEl.setAttribute('height', this.size);\n        svgEl.setAttribute('width', this.size);\n        svgEl.setAttribute('viewBox', `0 0 ${this.size} ${this.size}`);\n        squareEls.forEach((squareEl) => {\n            squareEl.setAttribute('stroke-width', this.stroke);\n            squareEl.setAttribute('width', strokeAdjustedSize);\n            squareEl.setAttribute('height', strokeAdjustedSize);\n            squareEl.setAttribute('x', centerPoint);\n            squareEl.setAttribute('y', centerPoint);\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n        --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-square') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Square {\n            });\n        }\n    },\n    element: Square,\n};\n"],"mappings":";;AAEA,MAAMA,CAAA,SAAeC,CAAA;EACjBC,WAAA,GAAc,CACV,QACA,SACA,SACA,UACA,iBACA;EAEJC,IAAA;EACAC,KAAA;EACAC,KAAA;EACAC,MAAA;EACA;EACA;EACW,WAAAC,mBAAA;IACP,OAAO,CAAC,QAAQ,SAAS,UAAU,iBAAiB,SAAS,aAChE;EAAA;EACDC,YAAA;IACI,SACA,KAAKC,mBAAA,CAAoB,KAAKP,WAAA,GAC9B,KAAKQ,OAAA,CAAQ,KAAKR,WAAA,CACrB;EAAA;EACDS,kBAAA;IACI,KAAKC,kBAAA,IACL,KAAKC,iBAAA,CAAkB;MACnBV,IAAA,EAAM;MACNC,KAAA,EAAO;MACPE,MAAA,EAAQ;MACR,iBAAiB;MACjBD,KAAA,EAAO;MACP,cAAc;IAAA;IAElB,MAAMJ,CAAA,GAAUa,QAAA,CAAS,KAAKX,IAAA;MACxBH,CAAA,GAAYc,QAAA,CAAS,KAAKR,MAAA;MAC1BS,CAAA,GAAcf,CAAA,GAAY;MAC1BgB,CAAA,GAAqBC,IAAA,CAAKC,GAAA,CAAIjB,CAAA,GAAUD,CAAA,GAAY,GAAG;IAC7D,KAAKmB,QAAA,CAASC,SAAA,GAAY,iEAGX,KAAKjB,IAAA,IAAQ,KAAKA,IAAA,sBACvB,KAAKA,IAAA,qBACN,KAAKA,IAAA,qEAIPY,CAAA,oBACAA,CAAA,uDAEW,KAAKT,MAAA,0BACZU,CAAA,yBACCA,CAAA,sEAILD,CAAA,oBACAA,CAAA,uDAEW,KAAKT,MAAA,0BACZU,CAAA,yBACCA,CAAA,iHAMI,KAAKb,IAAA,+BACJ,KAAKC,KAAA,6BACL,KAAKC,KAAA,6BAC8B,MAApCgB,UAAA,CAAW,KAAK,4CACjB,MAA0C,MAApCA,UAAA,CAAW,KAAK,mDACf,KAAK,sCAEzBC,CAAA,0BAGF,KAAKC,MAAA,CAAOC,eAAA,CAAgB,KAAKL,QAAA,CAASM,OAAA,CAAQC,SAAA,EAAU,GAC/D;EAAA;EACDC,yBAAA;IACI,MAAM1B,CAAA,GAAU,KAAKsB,MAAA,CAAOK,aAAA,CAAc;MACpC5B,CAAA,GAAQ,KAAKuB,MAAA,CAAOK,aAAA,CAAc;MAClCb,CAAA,GAAY,KAAKQ,MAAA,CAAOM,gBAAA,CAAiB;IAC/C,KAAK5B,CAAA,EACD;IACJ,MAAMe,CAAA,GAAUF,QAAA,CAAS,KAAKX,IAAA;MACxB2B,CAAA,GAAYhB,QAAA,CAAS,KAAKR,MAAA;MAC1ByB,CAAA,GAAcC,MAAA,CAAOF,CAAA,GAAY;MACjCG,CAAA,GAAqBD,MAAA,CAAOf,IAAA,CAAKC,GAAA,CAAIF,CAAA,GAAUc,CAAA,GAAY,GAAG;IACpE9B,CAAA,CAAMkC,YAAA,CAAa,UAAU,KAAK/B,IAAA,GAClCH,CAAA,CAAMkC,YAAA,CAAa,SAAS,KAAK/B,IAAA,GACjCH,CAAA,CAAMkC,YAAA,CAAa,WAAW,OAAO,KAAK/B,IAAA,IAAQ,KAAKA,IAAA,KACvDY,CAAA,CAAUoB,OAAA,CAASlC,CAAA;MACfA,CAAA,CAASiC,YAAA,CAAa,gBAAgB,KAAK5B,MAAA,GAC3CL,CAAA,CAASiC,YAAA,CAAa,SAASD,CAAA,GAC/BhC,CAAA,CAASiC,YAAA,CAAa,UAAUD,CAAA,GAChChC,CAAA,CAASiC,YAAA,CAAa,KAAKH,CAAA,GAC3B9B,CAAA,CAASiC,YAAA,CAAa,KAAKH,CAAA,CAAY;IAAA,IAE3C9B,CAAA,CAAQmB,SAAA,GAAY,uCAEN,KAAKjB,IAAA,6BACJ,KAAKC,KAAA,2BACL,KAAKC,KAAA,2BAC8B,MAApCgB,UAAA,CAAW,KAAK,0CACjB,MAA0C,MAApCA,UAAA,CAAW,KAAK,iDACf,KAAK,kCAEzBC,CAAA,QAEH;EAAA;AAAA;AAEL,IAAeP,CAAA;EACXqB,QAAA,EAAUA,CAACnC,CAAA,GAAO;IACToC,cAAA,CAAeC,GAAA,CAAIrC,CAAA,KACpBoC,cAAA,CAAeE,MAAA,CAAOtC,CAAA,EAAM,cAAcD,CAAA,IAE7C;EAAA;EAELwC,OAAA,EAASxC;AAAA;AAAA,SAAAe,CAAA,IAAA0B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}