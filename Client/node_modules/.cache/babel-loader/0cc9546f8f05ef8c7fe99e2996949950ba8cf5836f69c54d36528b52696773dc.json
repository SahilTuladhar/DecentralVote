{"ast":null,"code":"const isOffset = /(\\-?[0-9]+)h(rs)?/i;\nconst isNumber = /(\\-?[0-9]+)/;\nconst utcOffset = /utc([\\-+]?[0-9]+)/i;\nconst gmtOffset = /gmt([\\-+]?[0-9]+)/i;\nconst toIana = function (num) {\n  num = Number(num);\n  if (num >= -13 && num <= 13) {\n    num = num * -1; //it's opposite!\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n    return 'etc/gmt' + num;\n  }\n  return null;\n};\nconst parseOffset = function (tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset);\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset);\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset);\n  if (m !== null) {\n    let num = Number(m[1]) * -1;\n    return toIana(num);\n  }\n  // '+5'\n  m = tz.match(isNumber);\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n  return null;\n};\nexport default parseOffset;","map":{"version":3,"names":["isOffset","isNumber","utcOffset","gmtOffset","toIana","num","Number","parseOffset","tz","m","match"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/spacetime/src/timezone/parseOffset.js"],"sourcesContent":["const isOffset = /(\\-?[0-9]+)h(rs)?/i\nconst isNumber = /(\\-?[0-9]+)/\nconst utcOffset = /utc([\\-+]?[0-9]+)/i\nconst gmtOffset = /gmt([\\-+]?[0-9]+)/i\n\nconst toIana = function (num) {\n  num = Number(num)\n  if (num >= -13 && num <= 13) {\n    num = num * -1 //it's opposite!\n    num = (num > 0 ? '+' : '') + num //add plus sign\n    return 'etc/gmt' + num\n  }\n  return null\n}\n\nconst parseOffset = function (tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset)\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset)\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset)\n  if (m !== null) {\n    let num = Number(m[1]) * -1\n    return toIana(num)\n  }\n  // '+5'\n  m = tz.match(isNumber)\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  return null\n}\nexport default parseOffset\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,oBAAoB;AACrC,MAAMC,QAAQ,GAAG,aAAa;AAC9B,MAAMC,SAAS,GAAG,oBAAoB;AACtC,MAAMC,SAAS,GAAG,oBAAoB;AAEtC,MAAMC,MAAM,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC5BA,GAAG,GAAGC,MAAM,CAACD,GAAG,CAAC;EACjB,IAAIA,GAAG,IAAI,CAAC,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE;IAC3BA,GAAG,GAAGA,GAAG,GAAG,CAAC,CAAC,EAAC;IACfA,GAAG,GAAG,CAACA,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIA,GAAG,EAAC;IACjC,OAAO,SAAS,GAAGA,GAAG;EACxB;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAME,WAAW,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAChC;EACA,IAAIC,CAAC,GAAGD,EAAE,CAACE,KAAK,CAACV,QAAQ,CAAC;EAC1B,IAAIS,CAAC,KAAK,IAAI,EAAE;IACd,OAAOL,MAAM,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB;EACA;EACAA,CAAC,GAAGD,EAAE,CAACE,KAAK,CAACR,SAAS,CAAC;EACvB,IAAIO,CAAC,KAAK,IAAI,EAAE;IACd,OAAOL,MAAM,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB;EACA;EACAA,CAAC,GAAGD,EAAE,CAACE,KAAK,CAACP,SAAS,CAAC;EACvB,IAAIM,CAAC,KAAK,IAAI,EAAE;IACd,IAAIJ,GAAG,GAAGC,MAAM,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,OAAOL,MAAM,CAACC,GAAG,CAAC;EACpB;EACA;EACAI,CAAC,GAAGD,EAAE,CAACE,KAAK,CAACT,QAAQ,CAAC;EACtB,IAAIQ,CAAC,KAAK,IAAI,EAAE;IACd,OAAOL,MAAM,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}