{"ast":null,"code":"import { beADate, normalize } from '../../fns.js';\nimport waterfall from './waterfall.js';\nconst reverseDiff = function (obj) {\n  Object.keys(obj).forEach(k => {\n    obj[k] *= -1;\n  });\n  return obj;\n};\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function (a, b, unit) {\n  b = beADate(b, a);\n  //reverse values, if necessary\n  let reversed = false;\n  if (a.isAfter(b)) {\n    let tmp = a;\n    a = b;\n    b = tmp;\n    reversed = true;\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b);\n  if (reversed) {\n    obj = reverseDiff(obj);\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = normalize(unit);\n    if (/s$/.test(unit) !== true) {\n      unit += 's';\n    }\n    if (unit === 'dates') {\n      unit = 'days';\n    }\n    return obj[unit];\n  }\n  return obj;\n};\nexport default main;","map":{"version":3,"names":["beADate","normalize","waterfall","reverseDiff","obj","Object","keys","forEach","k","main","a","b","unit","reversed","isAfter","tmp","test"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/src/methods/diff/index.js"],"sourcesContent":["import { beADate, normalize } from '../../fns.js'\nimport waterfall from './waterfall.js'\n\nconst reverseDiff = function (obj) {\n  Object.keys(obj).forEach((k) => {\n    obj[k] *= -1\n  })\n  return obj\n}\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function (a, b, unit) {\n  b = beADate(b, a)\n  //reverse values, if necessary\n  let reversed = false\n  if (a.isAfter(b)) {\n    let tmp = a\n    a = b\n    b = tmp\n    reversed = true\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b)\n  if (reversed) {\n    obj = reverseDiff(obj)\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = normalize(unit)\n    if (/s$/.test(unit) !== true) {\n      unit += 's'\n    }\n    if (unit === 'dates') {\n      unit = 'days'\n    }\n    return obj[unit]\n  }\n  return obj\n}\n\nexport default main\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,SAAS,QAAQ,cAAc;AACjD,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,MAAMC,WAAW,GAAG,SAAAA,CAAUC,GAAG,EAAE;EACjCC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACG,OAAO,CAAEC,CAAC,IAAK;IAC9BJ,GAAG,CAACI,CAAC,CAAC,IAAI,CAAC,CAAC;EACd,CAAC,CAAC;EACF,OAAOJ,GAAG;AACZ,CAAC;;AAED;AACA;AACA;AACA,MAAMK,IAAI,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAEC,IAAI,EAAE;EACjCD,CAAC,GAAGX,OAAO,CAACW,CAAC,EAAED,CAAC,CAAC;EACjB;EACA,IAAIG,QAAQ,GAAG,KAAK;EACpB,IAAIH,CAAC,CAACI,OAAO,CAACH,CAAC,CAAC,EAAE;IAChB,IAAII,GAAG,GAAGL,CAAC;IACXA,CAAC,GAAGC,CAAC;IACLA,CAAC,GAAGI,GAAG;IACPF,QAAQ,GAAG,IAAI;EACjB;EACA;EACA,IAAIT,GAAG,GAAGF,SAAS,CAACQ,CAAC,EAAEC,CAAC,CAAC;EACzB,IAAIE,QAAQ,EAAE;IACZT,GAAG,GAAGD,WAAW,CAACC,GAAG,CAAC;EACxB;EACA;EACA,IAAIQ,IAAI,EAAE;IACR;IACAA,IAAI,GAAGX,SAAS,CAACW,IAAI,CAAC;IACtB,IAAI,IAAI,CAACI,IAAI,CAACJ,IAAI,CAAC,KAAK,IAAI,EAAE;MAC5BA,IAAI,IAAI,GAAG;IACb;IACA,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpBA,IAAI,GAAG,MAAM;IACf;IACA,OAAOR,GAAG,CAACQ,IAAI,CAAC;EAClB;EACA,OAAOR,GAAG;AACZ,CAAC;AAED,eAAeK,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}