{"ast":null,"code":"// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\nimport ms from '../../data/milliseconds.js';\nimport { mapping } from '../../data/months.js';\nimport monthLength from '../../data/monthLengths.js';\nimport walkTo from './walk.js';\nimport { isLeapYear } from '../../fns.js';\nconst validate = n => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10);\n  }\n  return n;\n};\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit);\n  let arr = order.slice(n, order.length);\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]();\n    s[arr[i]](want);\n  }\n  return s;\n};\n\n// allow specifying setter direction\nconst fwdBkwd = function (s, old, goFwd, unit) {\n  if (goFwd === true && s.isBefore(old)) {\n    s = s.add(1, unit);\n  } else if (goFwd === false && s.isAfter(old)) {\n    s = s.minus(1, unit);\n  }\n  return s;\n};\nconst milliseconds = function (s, n) {\n  n = validate(n);\n  let current = s.millisecond();\n  let diff = current - n; //milliseconds to shift by\n  return s.epoch - diff;\n};\nconst seconds = function (s, n, goFwd) {\n  n = validate(n);\n  let old = s.clone();\n  let diff = s.second() - n;\n  let shift = diff * ms.second;\n  s.epoch = s.epoch - shift;\n  s = fwdBkwd(s, old, goFwd, 'minute'); // specify direction\n  return s.epoch;\n};\nconst minutes = function (s, n, goFwd) {\n  n = validate(n);\n  let old = s.clone();\n  let diff = s.minute() - n;\n  let shift = diff * ms.minute;\n  s.epoch -= shift;\n  confirm(s, old, 'second');\n  s = fwdBkwd(s, old, goFwd, 'hour'); // specify direction\n  return s.epoch;\n};\nconst hours = function (s, n, goFwd) {\n  n = validate(n);\n  if (n >= 24) {\n    n = 24;\n  } else if (n < 0) {\n    n = 0;\n  }\n  let old = s.clone();\n  let diff = s.hour() - n;\n  let shift = diff * ms.hour;\n  s.epoch -= shift;\n  // oops, did we change the day?\n  if (s.date() !== old.date()) {\n    s = old.clone();\n    if (diff > 1) {\n      diff -= 1;\n    }\n    if (diff < 1) {\n      diff += 1;\n    }\n    shift = diff * ms.hour;\n    s.epoch -= shift;\n  }\n  walkTo(s, {\n    hour: n\n  });\n  confirm(s, old, 'minute');\n  s = fwdBkwd(s, old, goFwd, 'day'); // specify direction\n  return s.epoch;\n};\nconst time = function (s, str, goFwd) {\n  let m = str.match(/([0-9]{1,2})[:h]([0-9]{1,2})(:[0-9]{1,2})? ?(am|pm)?/);\n  if (!m) {\n    //fallback to support just '2am'\n    m = str.match(/([0-9]{1,2}) ?(am|pm)/);\n    if (!m) {\n      return s.epoch;\n    }\n    m.splice(2, 0, '0'); //add implicit 0 minutes\n    m.splice(3, 0, ''); //add implicit seconds\n  }\n\n  let h24 = false;\n  let hour = parseInt(m[1], 10);\n  let minute = parseInt(m[2], 10);\n  if (minute >= 60) {\n    minute = 59;\n  }\n  if (hour > 12) {\n    h24 = true;\n  }\n  //make the hour into proper 24h time\n  if (h24 === false) {\n    if (m[4] === 'am' && hour === 12) {\n      //12am is midnight\n      hour = 0;\n    }\n    if (m[4] === 'pm' && hour < 12) {\n      //12pm is noon\n      hour += 12;\n    }\n  }\n  // handle seconds\n  m[3] = m[3] || '';\n  m[3] = m[3].replace(/:/, '');\n  let sec = parseInt(m[3], 10) || 0;\n  let old = s.clone();\n  s = s.hour(hour);\n  s = s.minute(minute);\n  s = s.second(sec);\n  s = s.millisecond(0);\n  s = fwdBkwd(s, old, goFwd, 'day'); // specify direction\n  return s.epoch;\n};\nconst date = function (s, n, goFwd) {\n  n = validate(n);\n  //avoid setting february 31st\n  if (n > 28) {\n    let month = s.month();\n    let max = monthLength[month];\n    // support leap day in february\n    if (month === 1 && n === 29 && isLeapYear(s.year())) {\n      max = 29;\n    }\n    if (n > max) {\n      n = max;\n    }\n  }\n  //avoid setting < 0\n  if (n <= 0) {\n    n = 1;\n  }\n  let old = s.clone();\n  walkTo(s, {\n    date: n\n  });\n  s = fwdBkwd(s, old, goFwd, 'month'); // specify direction\n  return s.epoch;\n};\nconst month = function (s, n, goFwd) {\n  if (typeof n === 'string') {\n    if (n === 'sept') {\n      n = 'sep';\n    }\n    n = mapping()[n.toLowerCase()];\n  }\n  n = validate(n);\n  //don't go past december\n  if (n >= 12) {\n    n = 11;\n  }\n  if (n <= 0) {\n    n = 0;\n  }\n  let d = s.date();\n  //there's no 30th of february, etc.\n  if (d > monthLength[n]) {\n    //make it as close as we can..\n    d = monthLength[n];\n  }\n  let old = s.clone();\n  walkTo(s, {\n    month: n,\n    d\n  });\n  s = fwdBkwd(s, old, goFwd, 'year'); // specify direction\n  return s.epoch;\n};\nconst year = function (s, n) {\n  // support '97\n  if (typeof n === 'string' && /^'[0-9]{2}$/.test(n)) {\n    n = n.replace(/'/, '').trim();\n    n = Number(n);\n    // '89 is 1989\n    if (n > 30) {\n      //change this in 10y\n      n = 1900 + n;\n    } else {\n      // '12 is 2012\n      n = 2000 + n;\n    }\n  }\n  n = validate(n);\n  walkTo(s, {\n    year: n\n  });\n  return s.epoch;\n};\nconst week = function (s, n, goFwd) {\n  let old = s.clone();\n  n = validate(n);\n  s = s.month(0);\n  s = s.date(1);\n  s = s.day('monday');\n  //first week starts first Thurs in Jan\n  // so mon dec 28th is 1st week\n  // so mon dec 29th is not the week\n  if (s.monthName() === 'december' && s.date() >= 28) {\n    s = s.add(1, 'week');\n  }\n  n -= 1; //1-based\n  s = s.add(n, 'weeks');\n  s = fwdBkwd(s, old, goFwd, 'year'); // specify direction\n  return s.epoch;\n};\nconst dayOfYear = function (s, n, goFwd) {\n  n = validate(n);\n  let old = s.clone();\n  n -= 1; //days are 1-based\n  if (n <= 0) {\n    n = 0;\n  } else if (n >= 365) {\n    if (isLeapYear(s.year())) {\n      n = 365;\n    } else {\n      n = 364;\n    }\n  }\n  s = s.startOf('year');\n  s = s.add(n, 'day');\n  confirm(s, old, 'hour');\n  s = fwdBkwd(s, old, goFwd, 'year'); // specify direction\n  return s.epoch;\n};\nexport { milliseconds, seconds, minutes, hours, time, date, month, year, week, dayOfYear };","map":{"version":3,"names":["ms","mapping","monthLength","walkTo","isLeapYear","validate","n","parseInt","order","confirm","s","tmp","unit","indexOf","arr","slice","length","i","want","fwdBkwd","old","goFwd","isBefore","add","isAfter","minus","milliseconds","current","millisecond","diff","epoch","seconds","clone","second","shift","minutes","minute","hours","hour","date","time","str","m","match","splice","h24","replace","sec","month","max","year","toLowerCase","d","test","trim","Number","week","day","monthName","dayOfYear","startOf"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/spacetime/src/methods/set/set.js"],"sourcesContent":["// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\nimport ms from '../../data/milliseconds.js'\nimport { mapping } from '../../data/months.js'\nimport monthLength from '../../data/monthLengths.js'\nimport walkTo from './walk.js'\nimport { isLeapYear } from '../../fns.js'\n\nconst validate = (n) => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10)\n  }\n  return n\n}\n\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit)\n  let arr = order.slice(n, order.length)\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]()\n    s[arr[i]](want)\n  }\n  return s\n}\n\n// allow specifying setter direction\nconst fwdBkwd = function (s, old, goFwd, unit) {\n  if (goFwd === true && s.isBefore(old)) {\n    s = s.add(1, unit)\n  } else if (goFwd === false && s.isAfter(old)) {\n    s = s.minus(1, unit)\n  }\n  return s\n}\n\nconst milliseconds = function (s, n) {\n  n = validate(n)\n  let current = s.millisecond()\n  let diff = current - n //milliseconds to shift by\n  return s.epoch - diff\n}\n\nconst seconds = function (s, n, goFwd) {\n  n = validate(n)\n  let old = s.clone()\n  let diff = s.second() - n\n  let shift = diff * ms.second\n  s.epoch = s.epoch - shift\n  s = fwdBkwd(s, old, goFwd, 'minute') // specify direction\n  return s.epoch\n}\n\nconst minutes = function (s, n, goFwd) {\n  n = validate(n)\n  let old = s.clone()\n  let diff = s.minute() - n\n  let shift = diff * ms.minute\n  s.epoch -= shift\n  confirm(s, old, 'second')\n  s = fwdBkwd(s, old, goFwd, 'hour') // specify direction\n  return s.epoch\n}\n\nconst hours = function (s, n, goFwd) {\n  n = validate(n)\n  if (n >= 24) {\n    n = 24\n  } else if (n < 0) {\n    n = 0\n  }\n  let old = s.clone()\n  let diff = s.hour() - n\n  let shift = diff * ms.hour\n  s.epoch -= shift\n  // oops, did we change the day?\n  if (s.date() !== old.date()) {\n    s = old.clone()\n    if (diff > 1) {\n      diff -= 1\n    }\n    if (diff < 1) {\n      diff += 1\n    }\n    shift = diff * ms.hour\n    s.epoch -= shift\n  }\n  walkTo(s, {\n    hour: n\n  })\n  confirm(s, old, 'minute')\n  s = fwdBkwd(s, old, goFwd, 'day') // specify direction\n  return s.epoch\n}\n\nconst time = function (s, str, goFwd) {\n  let m = str.match(/([0-9]{1,2})[:h]([0-9]{1,2})(:[0-9]{1,2})? ?(am|pm)?/)\n  if (!m) {\n    //fallback to support just '2am'\n    m = str.match(/([0-9]{1,2}) ?(am|pm)/)\n    if (!m) {\n      return s.epoch\n    }\n    m.splice(2, 0, '0') //add implicit 0 minutes\n    m.splice(3, 0, '') //add implicit seconds\n  }\n  let h24 = false\n  let hour = parseInt(m[1], 10)\n  let minute = parseInt(m[2], 10)\n  if (minute >= 60) {\n    minute = 59\n  }\n  if (hour > 12) {\n    h24 = true\n  }\n  //make the hour into proper 24h time\n  if (h24 === false) {\n    if (m[4] === 'am' && hour === 12) {\n      //12am is midnight\n      hour = 0\n    }\n    if (m[4] === 'pm' && hour < 12) {\n      //12pm is noon\n      hour += 12\n    }\n  }\n  // handle seconds\n  m[3] = m[3] || ''\n  m[3] = m[3].replace(/:/, '')\n  let sec = parseInt(m[3], 10) || 0\n  let old = s.clone()\n  s = s.hour(hour)\n  s = s.minute(minute)\n  s = s.second(sec)\n  s = s.millisecond(0)\n  s = fwdBkwd(s, old, goFwd, 'day') // specify direction\n  return s.epoch\n}\n\nconst date = function (s, n, goFwd) {\n  n = validate(n)\n  //avoid setting february 31st\n  if (n > 28) {\n    let month = s.month()\n    let max = monthLength[month]\n    // support leap day in february\n    if (month === 1 && n === 29 && isLeapYear(s.year())) {\n      max = 29\n    }\n    if (n > max) {\n      n = max\n    }\n  }\n  //avoid setting < 0\n  if (n <= 0) {\n    n = 1\n  }\n  let old = s.clone()\n  walkTo(s, {\n    date: n\n  })\n  s = fwdBkwd(s, old, goFwd, 'month') // specify direction\n  return s.epoch\n}\n\nconst month = function (s, n, goFwd) {\n  if (typeof n === 'string') {\n    if (n === 'sept') {\n      n = 'sep'\n    }\n    n = mapping()[n.toLowerCase()]\n  }\n  n = validate(n)\n  //don't go past december\n  if (n >= 12) {\n    n = 11\n  }\n  if (n <= 0) {\n    n = 0\n  }\n\n  let d = s.date()\n  //there's no 30th of february, etc.\n  if (d > monthLength[n]) {\n    //make it as close as we can..\n    d = monthLength[n]\n  }\n  let old = s.clone()\n  walkTo(s, {\n    month: n,\n    d\n  })\n  s = fwdBkwd(s, old, goFwd, 'year') // specify direction\n  return s.epoch\n}\n\nconst year = function (s, n) {\n  // support '97\n  if (typeof n === 'string' && /^'[0-9]{2}$/.test(n)) {\n    n = n.replace(/'/, '').trim()\n    n = Number(n)\n    // '89 is 1989\n    if (n > 30) {\n      //change this in 10y\n      n = 1900 + n\n    } else {\n      // '12 is 2012\n      n = 2000 + n\n    }\n  }\n  n = validate(n)\n  walkTo(s, {\n    year: n\n  })\n  return s.epoch\n}\n\nconst week = function (s, n, goFwd) {\n  let old = s.clone()\n  n = validate(n)\n  s = s.month(0)\n  s = s.date(1)\n  s = s.day('monday')\n  //first week starts first Thurs in Jan\n  // so mon dec 28th is 1st week\n  // so mon dec 29th is not the week\n  if (s.monthName() === 'december' && s.date() >= 28) {\n    s = s.add(1, 'week')\n  }\n  n -= 1 //1-based\n  s = s.add(n, 'weeks')\n  s = fwdBkwd(s, old, goFwd, 'year') // specify direction\n  return s.epoch\n}\n\nconst dayOfYear = function (s, n, goFwd) {\n  n = validate(n)\n  let old = s.clone()\n  n -= 1 //days are 1-based\n  if (n <= 0) {\n    n = 0\n  } else if (n >= 365) {\n    if (isLeapYear(s.year())) {\n      n = 365\n    } else {\n      n = 364\n    }\n  }\n  s = s.startOf('year')\n  s = s.add(n, 'day')\n  confirm(s, old, 'hour')\n  s = fwdBkwd(s, old, goFwd, 'year') // specify direction\n  return s.epoch\n}\n\nexport {\n  milliseconds,\n  seconds,\n  minutes,\n  hours,\n  time,\n  date,\n  month,\n  year,\n  week,\n  dayOfYear,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}