{"ast":null,"code":"import e from \"../lib/LdrsBaseElement.js\";\nvar i = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:calc(var(--uib-size)*.9);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{align-items:center;display:flex;height:calc(var(--uib-size)*.9);justify-content:space-between;width:var(--uib-size)}.bar{background-color:var(--uib-color);height:100%;transition:background-color .3s ease;width:var(--uib-stroke)}.bar:first-child{animation:grow var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.45) infinite}.bar:nth-child(2){animation:grow var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.3) infinite}.bar:nth-child(3){animation:grow var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.15) infinite}.bar:nth-child(4){animation:grow var(--uib-speed) ease-in-out infinite}@keyframes grow{0%,to{transform:scaleY(.3)}50%{transform:scaleY(1)}}\";\nclass s extends e {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\"];\n  size;\n  color;\n  speed;\n  stroke;\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\", \"stroke\"];\n  }\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 35,\n      color: \"black\",\n      speed: 1,\n      stroke: 3.5\n    }), this.template.innerHTML = `\\n      <div class=\"container\">\\n        <div class=\"bar\"></div>\\n        <div class=\"bar\"></div>\\n        <div class=\"bar\"></div>\\n        <div class=\"bar\"></div>\\n      </div>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-stroke: ${this.stroke}px;\\n        }\\n        ${i}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const e = this.shadow.querySelector(\"style\");\n    e && (e.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-stroke: ${this.stroke}px;\\n      }\\n      ${i}\\n    `);\n  }\n}\nvar t = {\n  register: (e = \"l-waveform\") => {\n    customElements.get(e) || customElements.define(e, class extends s {});\n  },\n  element: s\n};\nexport { t as default };","map":{"version":3,"names":["s","e","_attributes","size","color","speed","stroke","observedAttributes","constructor","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","template","innerHTML","i","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","t","register","customElements","get","define","element","default"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/ldrs/temp-ts-out/elements/waveform.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './waveform.scss';\nclass Waveform extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke'];\n    size;\n    color;\n    speed;\n    stroke;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 35,\n            color: 'black',\n            speed: 1,\n            stroke: 3.5,\n        });\n        this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n        <div class=\"bar\"></div>\n      </div>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-stroke: ${this.stroke}px;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-stroke: ${this.stroke}px;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-waveform') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Waveform {\n            });\n        }\n    },\n    element: Waveform,\n};\n"],"mappings":";;AAEA,MAAMA,CAAA,SAAiBC,CAAA;EACnBC,WAAA,GAAc,CAAC,QAAQ,SAAS,SAAS;EACzCC,IAAA;EACAC,KAAA;EACAC,KAAA;EACAC,MAAA;EACW,WAAAC,mBAAA;IACP,OAAO,CAAC,QAAQ,SAAS,SAAS,SACrC;EAAA;EACDC,YAAA;IACI,SACA,KAAKC,mBAAA,CAAoB,KAAKP,WAAA,GAC9B,KAAKQ,OAAA,CAAQ,KAAKR,WAAA,CACrB;EAAA;EACDS,kBAAA;IACI,KAAKC,kBAAA,IACL,KAAKC,iBAAA,CAAkB;MACnBV,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,MAAA,EAAQ;IAAA,IAEZ,KAAKQ,QAAA,CAASC,SAAA,GAAY,2OASV,KAAKZ,IAAA,+BACJ,KAAKC,KAAA,6BACL,KAAKC,KAAA,+BACJ,KAAKC,MAAA,2BAErBU,CAAA,0BAGF,KAAKC,MAAA,CAAOC,eAAA,CAAgB,KAAKJ,QAAA,CAASK,OAAA,CAAQC,SAAA,EAAU,GAC/D;EAAA;EACDC,yBAAA;IACI,MAAMpB,CAAA,GAAU,KAAKgB,MAAA,CAAOK,aAAA,CAAc;IACrCrB,CAAA,KAELA,CAAA,CAAQc,SAAA,GAAY,uCAEN,KAAKZ,IAAA,6BACJ,KAAKC,KAAA,2BACL,KAAKC,KAAA,6BACJ,KAAKC,MAAA,uBAErBU,CAAA,SAEH;EAAA;AAAA;AAEL,IAAeO,CAAA;EACXC,QAAA,EAAUA,CAACvB,CAAA,GAAO;IACTwB,cAAA,CAAeC,GAAA,CAAIzB,CAAA,KACpBwB,cAAA,CAAeE,MAAA,CAAO1B,CAAA,EAAM,cAAcD,CAAA,IAE7C;EAAA;EAEL4B,OAAA,EAAS5B;AAAA;AAAA,SAAAuB,CAAA,IAAAM,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}