{"ast":null,"code":"import t from \"../lib/LdrsBaseElement.js\";\nvar e = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{animation:rotate var(--uib-speed) linear infinite;height:var(--uib-size);overflow:visible;transform-origin:center;width:var(--uib-size);will-change:transform}.car{stroke:var(--uib-color);stroke-dasharray:1,200;stroke-dashoffset:0;stroke-linecap:round;animation:stretch calc(var(--uib-speed)*.75) ease-in-out infinite;will-change:stroke-dasharray,stroke-dashoffset}.car,.track{fill:none;transition:stroke .5s ease}.track{stroke:var(--uib-color);opacity:var(--uib-bg-opacity)}@keyframes rotate{to{transform:rotate(1turn)}}@keyframes stretch{0%{stroke-dasharray:0,150;stroke-dashoffset:0}50%{stroke-dasharray:75,150;stroke-dashoffset:-25}to{stroke-dashoffset:-99}}\";\nclass s extends t {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\", \"bg-opacity\"];\n  size;\n  color;\n  speed;\n  stroke;\n  \"bg-opacity\";\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"stroke\", \"speed\", \"bg-opacity\"];\n  }\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 40,\n      color: \"black\",\n      stroke: 5,\n      speed: 2,\n      \"bg-opacity\": 0\n    });\n    const t = parseInt(this.size),\n      s = parseInt(this.stroke),\n      i = t / 2,\n      r = Math.max(0, t / 2 - s / 2);\n    this.template.innerHTML = `\\n      <svg\\n        class=\"container\"\\n        viewBox=\"0 0 ${this.size} ${this.size}\"\\n        height=\"${this.size}\"\\n        width=\"${this.size}\"\\n      >\\n        <circle \\n          class=\"track\"\\n          cx=\"${i}\" \\n          cy=\"${i}\" \\n          r=\"${r}\" \\n          pathlength=\"100\" \\n          stroke-width=\"${this.stroke}px\" \\n          fill=\"none\" \\n        />\\n        <circle \\n          class=\"car\"\\n          cx=\"${i}\" \\n          cy=\"${i}\" \\n          r=\"${r}\" \\n          pathlength=\"100\" \\n          stroke-width=\"${this.stroke}px\" \\n          fill=\"none\" \\n        />\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n        }\\n        ${e}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n  attributeChangedCallback() {\n    const t = this.shadow.querySelector(\"style\"),\n      s = this.shadow.querySelector(\"svg\"),\n      i = this.shadow.querySelectorAll(\"circle\");\n    if (!t) return;\n    const r = parseInt(this.size),\n      o = parseInt(this.stroke),\n      n = String(r / 2),\n      a = String(Math.max(0, r / 2 - o / 2));\n    s.setAttribute(\"height\", this.stroke), s.setAttribute(\"width\", this.stroke), s.setAttribute(\"viewBox\", `0 0 ${r} ${r}`), i.forEach(t => {\n      t.setAttribute(\"cx\", n), t.setAttribute(\"cy\", n), t.setAttribute(\"r\", a), t.setAttribute(\"stroke-width\", this.stroke);\n    }), t.innerHTML = `\\n      :host{\\n        --uib-size: ${r}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n      }\\n      ${e}\\n    `;\n  }\n}\nvar i = {\n  register: (t = \"l-ring\") => {\n    customElements.get(t) || customElements.define(t, class extends s {});\n  },\n  element: s\n};\nexport { i as default };","map":{"version":3,"names":["s","t","_attributes","size","color","speed","stroke","observedAttributes","constructor","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","parseInt","i","r","Math","max","template","innerHTML","e","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","querySelector","querySelectorAll","o","n","String","a","setAttribute","forEach","register","customElements","get","define","element","default"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/ldrs/temp-ts-out/elements/ring.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './ring.scss';\nclass Ring extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke', 'bg-opacity'];\n    size;\n    color;\n    speed;\n    stroke;\n    'bg-opacity';\n    static get observedAttributes() {\n        return ['size', 'color', 'stroke', 'speed', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 40,\n            color: 'black',\n            stroke: 5,\n            speed: 2,\n            'bg-opacity': 0,\n        });\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = sizeInt / 2;\n        const radius = Math.max(0, sizeInt / 2 - strokeInt / 2);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\"\n        viewBox=\"0 0 ${this.size} ${this.size}\"\n        height=\"${this.size}\"\n        width=\"${this.size}\"\n      >\n        <circle \n          class=\"track\"\n          cx=\"${centerPoint}\" \n          cy=\"${centerPoint}\" \n          r=\"${radius}\" \n          pathlength=\"100\" \n          stroke-width=\"${this.stroke}px\" \n          fill=\"none\" \n        />\n        <circle \n          class=\"car\"\n          cx=\"${centerPoint}\" \n          cy=\"${centerPoint}\" \n          r=\"${radius}\" \n          pathlength=\"100\" \n          stroke-width=\"${this.stroke}px\" \n          fill=\"none\" \n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const circleEls = this.shadow.querySelectorAll('circle');\n        if (!styleEl)\n            return;\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = String(sizeInt / 2);\n        const radius = String(Math.max(0, sizeInt / 2 - strokeInt / 2));\n        svgEl.setAttribute('height', this.stroke);\n        svgEl.setAttribute('width', this.stroke);\n        svgEl.setAttribute('viewBox', `0 0 ${sizeInt} ${sizeInt}`);\n        circleEls.forEach((circleEl) => {\n            circleEl.setAttribute('cx', centerPoint);\n            circleEl.setAttribute('cy', centerPoint);\n            circleEl.setAttribute('r', radius);\n            circleEl.setAttribute('stroke-width', this.stroke);\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${sizeInt}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-ring') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Ring {\n            });\n        }\n    },\n    element: Ring,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}