{"ast":null,"code":"import format from './methods/format/index.js';\nimport unixFmt from './methods/format/unixFmt.js';\nimport progress from './methods/progress.js';\nimport nearest from './methods/nearest.js';\nimport diff from './methods/diff/index.js';\nimport since from './methods/since/index.js';\nimport { startOf as _startOf, endOf as _endOf } from './methods/startOf.js';\nimport every from './methods/every.js';\nimport timezone from './timezone/index.js';\nimport findTz from './timezone/find.js';\nimport handleInput from './input/index.js';\nimport { isLeapYear } from './fns.js';\nimport { short, long } from './data/days.js';\nconst units = ['century', 'decade', 'year', 'month', 'date', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function (input, tz) {\n    let s = this.clone();\n    s = handleInput(s, input, null);\n    if (tz) {\n      this.tz = findTz(tz);\n    }\n    return s;\n  },\n  timezone: function () {\n    return timezone(this);\n  },\n  isDST: function () {\n    return timezone(this).current.isDST;\n  },\n  hasDST: function () {\n    return timezone(this).hasDst;\n  },\n  offset: function () {\n    return timezone(this).current.offset * 60;\n  },\n  hemisphere: function () {\n    return timezone(this).hemisphere;\n  },\n  format: function (fmt) {\n    return format(this, fmt);\n  },\n  unixFmt: function (fmt) {\n    return unixFmt(this, fmt);\n  },\n  startOf: function (unit) {\n    return _startOf(this, unit);\n  },\n  endOf: function (unit) {\n    return _endOf(this, unit);\n  },\n  leapYear: function () {\n    let year = this.year();\n    return isLeapYear(year);\n  },\n  progress: function (unit) {\n    return progress(this, unit);\n  },\n  nearest: function (unit) {\n    return nearest(this, unit);\n  },\n  diff: function (d, unit) {\n    return diff(this, d, unit);\n  },\n  since: function (d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n    return since(this, d);\n  },\n  next: function (unit) {\n    let s = this.add(1, unit);\n    return s.startOf(unit);\n  },\n  //the start of the previous year/week/century\n  last: function (unit) {\n    let s = this.subtract(1, unit);\n    return s.startOf(unit);\n  },\n  isValid: function () {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false;\n    }\n    return !isNaN(this.d.getTime());\n  },\n  //travel to this timezone\n  goto: function (tz) {\n    let s = this.clone();\n    s.tz = findTz(tz, s.timezones); //science!\n    return s;\n  },\n  //get each week/month/day between a -> b\n  every: function (unit, to) {\n    // allow swapping these params:\n    if (typeof unit === 'object' && typeof to === 'string') {\n      let tmp = to;\n      to = unit;\n      unit = tmp;\n    }\n    return every(this, unit, to);\n  },\n  isAwake: function () {\n    let hour = this.hour();\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false;\n    }\n    return true;\n  },\n  isAsleep: function () {\n    return !this.isAwake();\n  },\n  daysInMonth: function () {\n    switch (this.month()) {\n      case 0:\n        return 31;\n      case 1:\n        return this.leapYear() ? 29 : 28;\n      case 2:\n        return 31;\n      case 3:\n        return 30;\n      case 4:\n        return 31;\n      case 5:\n        return 30;\n      case 6:\n        return 31;\n      case 7:\n        return 31;\n      case 8:\n        return 30;\n      case 9:\n        return 31;\n      case 10:\n        return 30;\n      case 11:\n        return 31;\n      default:\n        throw new Error('Invalid Month state.');\n    }\n  },\n  //pretty-printing\n  log: function () {\n    console.log('');\n    console.log(format(this, 'nice-short'));\n    return this;\n  },\n  logYear: function () {\n    console.log('');\n    console.log(format(this, 'full-short'));\n    return this;\n  },\n  json: function () {\n    return units.reduce((h, unit) => {\n      h[unit] = this[unit]();\n      return h;\n    }, {});\n  },\n  debug: function () {\n    let tz = this.timezone();\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this;\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function (d) {\n    d = this.clone().set(d);\n    return d.since(this);\n  },\n  fromNow: function () {\n    let d = this.clone().set(Date.now());\n    return d.since(this);\n  },\n  weekStart: function (input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this;\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      let num = short().indexOf(input);\n      if (num === -1) {\n        num = long().indexOf(input);\n      }\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n    return this;\n  }\n};\n// aliases\nmethods.inDST = methods.isDST;\nmethods.round = methods.nearest;\nmethods.each = methods.every;\nexport default methods;","map":{"version":3,"names":["format","unixFmt","progress","nearest","diff","since","startOf","_startOf","endOf","_endOf","every","timezone","findTz","handleInput","isLeapYear","short","long","units","methods","set","input","tz","s","clone","isDST","current","hasDST","hasDst","offset","hemisphere","fmt","unit","leapYear","year","d","next","add","last","subtract","isValid","epoch","isNaN","getTime","goto","timezones","to","tmp","isAwake","hour","isAsleep","daysInMonth","month","Error","log","console","logYear","json","reduce","h","debug","date","name","from","fromNow","Date","now","weekStart","_weekStart","toLowerCase","trim","num","indexOf","warn","inDST","round","each"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/spacetime/src/methods.js"],"sourcesContent":["import format from './methods/format/index.js'\nimport unixFmt from './methods/format/unixFmt.js'\nimport progress from './methods/progress.js'\nimport nearest from './methods/nearest.js'\nimport diff from './methods/diff/index.js'\nimport since from './methods/since/index.js'\nimport { startOf as _startOf, endOf as _endOf } from './methods/startOf.js'\nimport every from './methods/every.js'\nimport timezone from './timezone/index.js'\nimport findTz from './timezone/find.js'\nimport handleInput from './input/index.js'\nimport { isLeapYear } from './fns.js'\nimport { short, long } from './data/days.js'\nconst units = [\n  'century',\n  'decade',\n  'year',\n  'month',\n  'date',\n  'day',\n  'hour',\n  'minute',\n  'second',\n  'millisecond'\n]\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function (input, tz) {\n    let s = this.clone()\n    s = handleInput(s, input, null)\n    if (tz) {\n      this.tz = findTz(tz)\n    }\n    return s\n  },\n  timezone: function () {\n    return timezone(this)\n  },\n  isDST: function () {\n    return timezone(this).current.isDST\n  },\n  hasDST: function () {\n    return timezone(this).hasDst\n  },\n  offset: function () {\n    return timezone(this).current.offset * 60\n  },\n  hemisphere: function () {\n    return timezone(this).hemisphere\n  },\n  format: function (fmt) {\n    return format(this, fmt)\n  },\n  unixFmt: function (fmt) {\n    return unixFmt(this, fmt)\n  },\n  startOf: function (unit) {\n    return _startOf(this, unit)\n  },\n  endOf: function (unit) {\n    return _endOf(this, unit)\n  },\n  leapYear: function () {\n    let year = this.year()\n    return isLeapYear(year)\n  },\n  progress: function (unit) {\n    return progress(this, unit)\n  },\n  nearest: function (unit) {\n    return nearest(this, unit)\n  },\n  diff: function (d, unit) {\n    return diff(this, d, unit)\n  },\n  since: function (d) {\n    if (!d) {\n      d = this.clone().set()\n    }\n    return since(this, d)\n  },\n  next: function (unit) {\n    let s = this.add(1, unit)\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function (unit) {\n    let s = this.subtract(1, unit)\n    return s.startOf(unit)\n  },\n  isValid: function () {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function (tz) {\n    let s = this.clone()\n    s.tz = findTz(tz, s.timezones) //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function (unit, to) {\n    // allow swapping these params:\n    if (typeof unit === 'object' && typeof to === 'string') {\n      let tmp = to\n      to = unit\n      unit = tmp\n    }\n    return every(this, unit, to)\n  },\n  isAwake: function () {\n    let hour = this.hour()\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function () {\n    return !this.isAwake()\n  },\n  daysInMonth: function () {\n    switch (this.month()) {\n      case 0:\n        return 31\n      case 1:\n        return this.leapYear() ? 29 : 28\n      case 2:\n        return 31\n      case 3:\n        return 30\n      case 4:\n        return 31\n      case 5:\n        return 30\n      case 6:\n        return 31\n      case 7:\n        return 31\n      case 8:\n        return 30\n      case 9:\n        return 31\n      case 10:\n        return 30\n      case 11:\n        return 31\n      default:\n        throw new Error('Invalid Month state.')\n    }\n  },\n  //pretty-printing\n  log: function () {\n    console.log('')\n    console.log(format(this, 'nice-short'))\n    return this\n  },\n  logYear: function () {\n    console.log('')\n    console.log(format(this, 'full-short'))\n    return this\n  },\n  json: function () {\n    return units.reduce((h, unit) => {\n      h[unit] = this[unit]()\n      return h\n    }, {})\n  },\n  debug: function () {\n    let tz = this.timezone()\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year()\n    date += '\\n     - ' + this.format('time')\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')')\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function (d) {\n    d = this.clone().set(d)\n    return d.since(this)\n  },\n  fromNow: function () {\n    let d = this.clone().set(Date.now())\n    return d.since(this)\n  },\n  weekStart: function (input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim()\n      let num = short().indexOf(input)\n      if (num === -1) {\n        num = long().indexOf(input)\n      }\n      if (num === -1) {\n        num = 1 //go back to default\n      }\n      this._weekStart = num\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input)\n    }\n    return this\n  }\n}\n// aliases\nmethods.inDST = methods.isDST\nmethods.round = methods.nearest\nmethods.each = methods.every\nexport default methods\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}