{"ast":null,"code":"const BASE = 36;\nconst seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst cache = seq.split('').reduce(function (h, c, i) {\n  h[c] = i;\n  return h;\n}, {});\n\n// 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\nconst toAlphaCode = function (n) {\n  if (seq[n] !== undefined) {\n    return seq[n];\n  }\n  let places = 1;\n  let range = BASE;\n  let s = '';\n  for (; n >= range; n -= range, places++, range *= BASE) {}\n  while (places--) {\n    const d = n % BASE;\n    s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s;\n    n = (n - d) / BASE;\n  }\n  return s;\n};\nconst fromAlphaCode = function (s) {\n  if (cache[s] !== undefined) {\n    return cache[s];\n  }\n  let n = 0;\n  let places = 1;\n  let range = BASE;\n  let pow = 1;\n  for (; places < s.length; n += range, places++, range *= BASE) {}\n  for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n    let d = s.charCodeAt(i) - 48;\n    if (d > 10) {\n      d -= 7;\n    }\n    n += d * pow;\n  }\n  return n;\n};\nvar encoding = {\n  toAlphaCode,\n  fromAlphaCode\n};\nconst symbols = function (t) {\n  //... process these lines\n  const reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)');\n  for (let i = 0; i < t.nodes.length; i++) {\n    const m = reSymbol.exec(t.nodes[i]);\n    if (!m) {\n      t.symCount = i;\n      break;\n    }\n    t.syms[encoding.fromAlphaCode(m[1])] = encoding.fromAlphaCode(m[2]);\n  }\n  //remove from main node list\n  t.nodes = t.nodes.slice(t.symCount, t.nodes.length);\n};\nvar parseSymbols = symbols;\n\n// References are either absolute (symbol) or relative (1 - based)\nconst indexFromRef = function (trie, ref, index) {\n  const dnode = encoding.fromAlphaCode(ref);\n  if (dnode < trie.symCount) {\n    return trie.syms[dnode];\n  }\n  return index + dnode + 1 - trie.symCount;\n};\nconst toArray = function (trie) {\n  const all = [];\n  const crawl = (index, pref) => {\n    let node = trie.nodes[index];\n    if (node[0] === '!') {\n      all.push(pref);\n      node = node.slice(1); //ok, we tried. remove it.\n    }\n\n    const matches = node.split(/([A-Z0-9,]+)/g);\n    for (let i = 0; i < matches.length; i += 2) {\n      const str = matches[i];\n      const ref = matches[i + 1];\n      if (!str) {\n        continue;\n      }\n      const have = pref + str;\n      //branch's end\n      if (ref === ',' || ref === undefined) {\n        all.push(have);\n        continue;\n      }\n      const newIndex = indexFromRef(trie, ref, index);\n      crawl(newIndex, have);\n    }\n  };\n  crawl(0, '');\n  return all;\n};\n\n//PackedTrie - Trie traversal of the Trie packed-string representation.\nconst unpack$2 = function (str) {\n  const trie = {\n    nodes: str.split(';'),\n    syms: [],\n    symCount: 0\n  };\n  //process symbols, if they have them\n  if (str.match(':')) {\n    parseSymbols(trie);\n  }\n  return toArray(trie);\n};\nvar traverse = unpack$2;\nconst unpack = function (str) {\n  if (!str) {\n    return {};\n  }\n  //turn the weird string into a key-value object again\n  const obj = str.split('|').reduce((h, s) => {\n    const arr = s.split('¦');\n    h[arr[0]] = arr[1];\n    return h;\n  }, {});\n  const all = {};\n  Object.keys(obj).forEach(function (cat) {\n    const arr = traverse(obj[cat]);\n    //special case, for botched-boolean\n    if (cat === 'true') {\n      cat = true;\n    }\n    for (let i = 0; i < arr.length; i++) {\n      const k = arr[i];\n      if (all.hasOwnProperty(k) === true) {\n        if (Array.isArray(all[k]) === false) {\n          all[k] = [all[k], cat];\n        } else {\n          all[k].push(cat);\n        }\n      } else {\n        all[k] = cat;\n      }\n    }\n  });\n  return all;\n};\nvar unpack$1 = unpack;\n\n// these are the folk heuristics that timezones use to set their dst change dates\n// for example, the US changes:\n// the second Sunday of March -> first Sunday of November\n// http://www.webexhibits.org/daylightsaving/g.html\nlet patterns = {\n  usa: '2nd-sun-mar-2h|1st-sun-nov-2h',\n  // (From 1987 to 2006)\n  // mexico\n  mex: '1st-sun-apr-2h|last-sun-oct-2h',\n  // European Union zone\n  eu0: 'last-sun-mar-0h|last-sun-oct-1h',\n  eu1: 'last-sun-mar-1h|last-sun-oct-2h',\n  eu2: 'last-sun-mar-2h|last-sun-oct-3h',\n  eu3: 'last-sun-mar-3h|last-sun-oct-4h',\n  //greenland\n  green: 'last-sat-mar-22h|last-sat-oct-23h',\n  // australia\n  aus: '1st-sun-apr-3h|1st-sun-oct-2h',\n  //lord howe australia\n  lhow: '1st-sun-apr-2h|1st-sun-oct-2h',\n  // new zealand\n  chat: '1st-sun-apr-3h|last-sun-sep-2h',\n  //technically 3:45h -> 2:45h\n  // new Zealand, antarctica \n  nz: '1st-sun-apr-3h|last-sun-sep-2h',\n  // casey - antarctica\n  ant: '2nd-sun-mar-0h|1st-sun-oct-0h',\n  // troll - antarctica\n  troll: '3rd-sun-mar-1h|last-sun-oct-3h',\n  //jordan\n  jord: 'last-fri-feb-0h|last-fri-oct-1h',\n  // lebanon\n  leb: 'last-sun-mar-0h|last-sun-oct-0h',\n  // syria\n  syr: 'last-fri-mar-0h|last-fri-oct-0h',\n  //israel\n  // Start: Last Friday before April 2 -> The Sunday between Rosh Hashana and Yom Kippur\n  isr: 'last-fri-mar-2h|last-sun-oct-2h',\n  //palestine\n  pal: 'last-sun-mar-0h|last-fri-oct-1h',\n  // el aaiun\n  //this one seems to be on arabic calendar?\n  saha: 'last-sun-mar-3h|1st-sun-may-2h',\n  // paraguay\n  par: 'last-sun-mar-0h|1st-sun-oct-0h',\n  //cuba\n  cuba: '2nd-sun-mar-0h|1st-sun-nov-1h',\n  //chile\n  chile: '1st-sun-apr-0h|1st-sun-sep-0h',\n  //easter island\n  east: '1st-sat-apr-22h|1st-sat-sep-22h',\n  //fiji\n  fiji: '3rd-sun-jan-3h|2nd-sun-nov-2h'\n};\nvar dstPatterns = patterns;\nvar pcked = {\n  \"Africa\": {\n    \"Abidjan\": [\"true¦a5bouake,coordinated universal4daloa,g1san ped0utc,yamoussouk0zulu;ro;h0mt,reenwich mean2;!a0;!na; ti3;b4frica0tlantic/st_helena;!/0;accra,ba1conakry,dakar,freetown,lo0nouakchott,ouagadougou,timbuktu;me;mako,njul;idjan,obo\", \"Greenwich Mean\", \"n\"],\n    \"Algiers\": [\"true¦a8b6c3dz2or5s1t0;ebessa,iaret;etif,idi bel abbes;!a;e0hlef,onstantine;ntral europe0t;an;a0iskra,lida,oumerdas;b ezzouar,tna;frica,lg0nnaba;eria,iers\", \"Central European\", \"n\"],\n    \"Bissau\": [\"true¦africa,b2coordinated universal1g0utc,zulu;mt,nb,reenwich mean0uinea b1w; time;issau\", \"Greenwich Mean\", \"n\"],\n    \"Cairo\": [\"true¦a6bani suwayf,c5damanhur,e2giza,halw8i1kafr ad dawwar,luxor,new c5port said,qina,s0tanta,zagazig;hibin al kawm,ohag,uez;dku,smail8;astern europe5et,g0;!y0;!pt;airo;frica,l2s0;w0yut;an; 1exandr0;ia;fayyum,m0;a0inya;hallah al kubra,nsurah\", \"Eastern European\", \"n\"],\n    \"Casablanca\": [\"true¦aCcasablanDfBkenitAm6oujda angad,rabat,sa4t1we0;stern europe2t;angier,e0;ma7tou0;an;fi,le0;! al jadida;a1ekn4o0;hammedia,rocco;!r0;!rakesh;ra;es;fri0gadir,l hoceima;ca\", \"Morocco Standard\", \"n\", \"saha\"],\n    \"Ceuta\": [\"true¦africa,brussels,c0europe central,madrid,paris,romance;e0openhagen;ntral european,t,uta0;!melilla\", \"Central European\", \"n\", \"eu2\"],\n    \"El_Aaiun\": [\"true¦afri3casablan3e2laayoune,morocco,we0;stern 0t;european,sahara;h,l_aaiun,sh;ca\", \"Morocco Standard\", \"n\", \"saha\"],\n    \"Johannesburg\": [\"true¦africaIbEcAd9east londBharare,johannesHk7newcastDp6r5s3tembisa,uitenhage,v2w1za0;!f;elkom,itbank;anderbijlpark,ereeniging;ast,o0prings;uth africa,weto;andBichards bay,oodepoort;aarl,ietermaritzAort elizabeth,retoria;lerk0ruger0;sdorp;iepsloot,urb5;a1enturi0;on;pe town,rletonvil0;le;enoni,loemfontein,o1rakp0;an;ks0tshabelo;burg;! southern,/m0;aseru,babane\", \"South Africa\", \"s\"],\n    \"Juba\": [\"true¦a3c2juba,s0winejok;outh sudan,s0;!d;at,entral a0;frica\", \"Central Africa\", \"n\"],\n    \"Khartoum\": [\"true¦a7c6el 5k3ny4omdurm2port sud2s0wad medani;d0inga,ud1;!n;an;ass0hartoum,osti;ala;dae3fasher,obeid;at,entral af1;d damaz1f0l qadarif;rica;in\", \"Central Africa\", \"n\"],\n    \"Lagos\": [\"true¦aVbTcReQgPiLjKkaIlGmDnnewi,oAport harcourt,s9u7w0zar8; c3a2est0; 0ern3;a3c1;rBst,t;entral0; a0;frica;gep,muah0yo;ia;a7hagamu,okoto;kDn1w0yo;er3o;do,itsha;a0in5ubi;idugu0kurdi;ri;agos,ek0;ki;du0no,tsi0;na;imeLos;badan,jebu ode,k1l0seHwo;a orangun,eDor7;eHi8ot ekp0;ene;ombe,usau;bute ikorodu,fon alaaye,nugu;alabar,d,hakwama,o0;d,ngo;auchi,en0;in;b8do7frica1ku0tani;re;! western,/0;b2douala,kinsha1l0malabo,niamey,porto-novo;ibre2uanda;sa;angui,razza0;ville; ekiti;a,eoku1u0;ja;ta\", \"West Africa\", \"n\"],\n    \"Maputo\": [\"true¦africa7beiCc6ma4na2quelimaAwindhoek,z0;imbabwe,w0;!e;ca2m0;ibia,pu1;puto,to0;la;at,entral africa,himoio;! central,/0;b2gaboro1hara4kigali,lu0;bumbashi,saka;ne;lanty1ujumbu0;ra;re\", \"Central Africa\", \"s\"],\n    \"Monrovia\": [\"true¦africa,coordinated universal3g2l0monrov1utc,zulu;br,iber0r;ia;mt,reenwich mean0; time\", \"Greenwich Mean\", \"n\"],\n    \"Nairobi\": [\"true¦africa8e4indian/2kisumu,m1na0thika,yt;irobi,kuru;a1ombasa,yt;antananarivo,comoro,ma0;yotte; 2a0ldoret;st0t; 0ern 0;africa;! eastern,/0;a1d0kampala,mogadishu;ar_es_salaam,jibouti;ddis_ababa,sm0;a0e0;ra\", \"East Africa\", \"n\"],\n    \"Ndjamena\": [\"true¦africaAchad,n8t7w0; c3a2est0; 0ern3;a3c1;st,t;entral0; a0;frica;cd,d;'d0d0;jamena;! western\", \"West Africa\", \"n\"],\n    \"Sao_Tome\": [\"true¦africa,coordinated universal5g4s0utc,zulu;ao1t0;!p; 0_0;to2;mt,reenwich mean0; ti0;me\", \"Greenwich Mean\", \"n\"],\n    \"Tripoli\": [\"true¦a4benghazi,e3l1misrat5t0zawi2;arhuna,ripoli;by,ib0y;ya;astern european,et;frica,l khums,z zawiy0;ah\", \"Eastern European\", \"n\"],\n    \"Tunis\": [\"true¦africa,ce3sfax,t0;n,un0;!is0;!ia;ntral european,t\", \"Central European\", \"n\"],\n    \"Windhoek\": [\"true¦africa3c2na0windhoek;!m0;!ibia;at,entral africa;! central\", \"Central Africa\", \"s\"]\n  },\n  \"America\": {\n    \"Adak\": [\"true¦a1h0nwt,us/aleutian;awaii s3dt,st;dak,leutian0merica/atka;! 0;islands,s0;tandard time\", \"Aleutian Standard\", \"n\", \"usa\"],\n    \"Anchorage\": [\"true¦a0us/alaska;h6k5laska0merica,nchorage;! 1n0;! s1;s0t1;tandard t0;ime;dt,st,t;dt,st\", \"Alaska\", \"n\", \"usa\"],\n    \"Araguaina\": [\"true¦araguaina,br1e0palmas,tocantins; south america s4ast south america;a0t;silia0zil;! 0;s0t1;tandard t0;ime\", \"Brasilia\", \"n\"],\n    \"Argentina/Buenos_Aires\": [\"true¦a0buenos 4;merica/2r0;!g0;!e2;arge1buenos_0;aires;ntina\", \"Argentina\", \"s\"],\n    \"Argentina/Catamarca\": [\"true¦a0c2;merica/0rgentina;argentina/comodrivadavia,c0;atamarca\", \"Argentina\", \"s\"],\n    \"Argentina/Cordoba\": [\"true¦a0c2;merica/0rgentina;c0rosario;ordoba\", \"Argentina\", \"s\"],\n    \"Argentina/Jujuy\": [\"true¦a0j1;merica/j0rgentina;ujuy\", \"Argentina\", \"s\"],\n    \"Argentina/La_Rioja\": [\"true¦ar1b0city of b0la rioja;uenos aires;gentina0st,t;! 0;standard t0t0;ime\", \"Argentina\", \"s\"],\n    \"Argentina/Mendoza\": [\"true¦a0m1;merica/m0rgentina;endoza\", \"Argentina\", \"s\"],\n    \"Argentina/Rio_Gallegos\": [\"true¦ar1b0city of b0rio_gallegos;uenos aires;gentina0st,t;! 0;standard t0t0;ime\", \"Argentina\", \"s\"],\n    \"Argentina/Salta\": [\"true¦ar1b0city of b0salta;uenos aires;gentina0st,t;! 0;standard t0t0;ime\", \"Argentina\", \"s\"],\n    \"Argentina/San_Juan\": [\"true¦ar1b0city of b0san juan;uenos aires;gentina0st,t;! time\", \"Argentina\", \"s\"],\n    \"Argentina/San_Luis\": [\"true¦ar1b0city of b0san luis;uenos aires;gentina0st,t;! time\", \"Argentina\", \"s\"],\n    \"Argentina/Tucuman\": [\"true¦ar1b0city of b0tucuman;uenos aires;gentina0st,t;! time\", \"Argentina\", \"s\"],\n    \"Argentina/Ushuaia\": [\"true¦ar1b0city of b0ushuaia;uenos aires;gentina0st,t;! time\", \"Argentina\", \"s\"],\n    \"Asuncion\": [\"true¦asuncion,c3p0san lorenzo;araguay1ry,y0;!st,t;! time;apiata,iudad del este\", \"Paraguay\", \"s\", \"par\"],\n    \"Bahia\": [\"true¦b2camacari,e1feira de santa0itabu0salvador,vitoria da conquista;na; south america s5ast south america;ahia,r0;a0t;silia0zil;! 0;s0t1;tandard t0;ime\", \"Brasilia\", \"n\"],\n    \"Bahia_Banderas\": [\"true¦bah7c2guadalajara,m0;exico0onterrey;! city;entral 0st;mexic0standard 2;an,o0;! 0;time;ia_0ía de 0;banderas\", \"Central Mexico\", \"n\", \"mex\"],\n    \"Barbados\": [\"true¦a1b0;arbados,b,rb;st,tlantic standard time\", \"Atlantic\", \"n\"],\n    \"Belem\": [\"true¦ananindeua,b2e1macapa,par0;auapebas,á east amapá; south america s5ast south america;elem,r0;a0t;silia0zil;! 0;s0t1;tandard t0;ime\", \"Brasilia\", \"n\"],\n    \"Belize\": [\"true¦b1c0;entral standard time,st;elize,lz,z\", \"Central\", \"n\"],\n    \"Boa_Vista\": [\"true¦am3boa vista,c0roraima;entral brazil0uiaba;!ian0;! s3;azon0t;! 0;s0t1;tandard t0;ime\", \"Amazon\", \"n\"],\n    \"Bogota\": [\"true¦armenGbBc7dosquebradas,floridablanca,i6m5neiva,p3s1v0;alledupar,illavicencio;anta marCincelejo,o0;acha,ledad;a0erei9opayan;lmi8sto;anizales,edellin,onterA;bague,taguei;a2o0ucu6;!l0st,t;!omb6;li,rtagena;arran3ello,ogo2u0;caramanga,enaventu0;ra;ta;cabermeja,quilla;ia\", \"Colombia\", \"n\"],\n    \"Boise\": [\"true¦america4boise,idaho,m0;ountain0pt,st,t;! 0;id,standard t0t0;ime;! mountain\", \"Mountain\", \"n\", \"usa\"],\n    \"Cambridge_Bay\": [\"true¦america4cambridge bay,m0;ddt,ountain0st,t;! 0;standard t0t0;ime;! mountain\", \"Mountain\", \"n\", \"usa\"],\n    \"Campo_Grande\": [\"true¦am0brazil,campo grande,mato grosso do sul;azon standard time,t\", \"Amazon\", \"s\"],\n    \"Cancun\": [\"true¦cancun,e0mexico,quintana roo;astern standard time,st\", \"Eastern\", \"n\"],\n    \"Caracas\": [\"true¦alto barinKbarJcDguaBm8p7san6turmeFv0;alencia,e0;!n0t;!ezuela0;! 0n;standard t0t0;ime; cristobal,ta teresa del tuy;eta4uerto la cruz;a0ucumpiz;raca0turin;ibo,y;ren8ti0;re;a4iudad 2o1u0;a,m2;ro;bolivar,guay0;ana;bim1rac1;in0quisimeto,uta;as\", \"Venezuela\", \"n\"],\n    \"Cayenne\": [\"true¦cayenne,french guiana3g0;f1u0;f,iana;!t;! time\", \"French Guiana\", \"n\"],\n    \"Chicago\": [\"true¦aWbTcRdQfort worth,gPhOiMk00lJmCn8o7plano,s4t2us1wi0;chiGsconsW;/02a;ex0ulsa;!as;a0hreveport,ou4t 1;int 0n antonio;louGpaul;klahoXmaha,verland park;ashLe1or0;th dako7;braska,w 0;orleans,south me6;adisMe5i1o0;biHntgomery;lwaukee,nne1ss0;issippi,ouri;apol6so0;ta;mph4;aredo,i0ouisiana,ubb1;ncoln,ttle r0;ock;llino0owa,rving;is;oustAunts5;arland,rand prairie;allAes moines;dt,entral0hicago,orpus christi,st,t;! time;aton rouge,rowns0;vil0;le;laba8m5r1ust0;in;k1lingt0;on;ans0;as;arillo,erica0;! 0;central;ma\", \"Central\", \"n\", \"usa\"],\n    \"Chihuahua\": [\"true¦chihuahua,h5la paz,m0;azatlan,exic1ountain 0;mexico,standard time (mexico);an pacific1o0;! pacific;! time;ep0np0p0;mx\", \"Mexican Pacific\", \"n\", \"mex\"],\n    \"Costa_Rica\": [\"true¦c0sjmt;entral standard time,osta rica,r0st;!i\", \"Central\", \"n\"],\n    \"Cuiaba\": [\"true¦am0brazil,cuiaba,mato grosso,varzea grande;azon standard time,t\", \"Amazon\", \"s\"],\n    \"Danmarkshavn\": [\"true¦coordinated universal2d1g0utc,zulu;mt,reenwich mean1;anmarkshavn,enmark; time\", \"Greenwich Mean\", \"n\"],\n    \"Dawson\": [\"true¦canada,dawson,m2y0;d0pt,wt;dt,t;ountain standard time,st\", \"Mountain\", \"n\"],\n    \"Dawson_Creek\": [\"true¦canada,dawson creek,m1p0;pt,wt;ountain standard time,st,t\", \"Mountain\", \"n\"],\n    \"Denver\": [\"true¦a5colorado springs,denver,el paso,m1navajo,salt lake,us0;/6a;dt,ountain0st,t;! 0;standard t0t0;ime;lbuquerque,merica0urora;! 0/shiprock;mountain\", \"Mountain\", \"n\", \"usa\"],\n    \"Detroit\": [\"true¦america4detroit,e0grand rapids,us/michigan;astern0pt,st,t,wt;! 0;mi,standard t0t0;ime;! eastern\", \"Eastern\", \"n\", \"usa\"],\n    \"Edmonton\": [\"true¦a6ca4edmonton,m0;ountain0st,t;! 0;standard t0t0;ime;lgary,nada0;!/1;lberta,merica 0;mountain\", \"Mountain\", \"n\", \"usa\"],\n    \"Eirunepe\": [\"true¦a0brazil,eirunepe;c0mazonas west;re0t;! 0;standard t0t0;ime\", \"Acre\", \"n\"],\n    \"El_Salvador\": [\"true¦c2el1s0;an0lv,oyapango,v; salvador;entral standard time,st\", \"Central\", \"n\"],\n    \"Fort_Nelson\": [\"true¦british columbia,canada,fort nelson,m0;ountain standard time,st,t\", \"Mountain\", \"n\"],\n    \"Fortaleza\": [\"true¦br5ca4e3fortaleza,imperatriz,j2m0natal,sao luis,teresina;a0ossoro;picernpb,racanau;oao pessoa,uazeiro do norte; south america s5ast south america;mpina grande,ucaia;a0t;silia0zil;! 0;s0t1;tandard t0;ime\", \"Brasilia\", \"s\"],\n    \"Glace_Bay\": [\"true¦a1ca0glace_bay;nada,pe breton;st,t0;!lantic0;! 0;standard t0t0;ime\", \"Atlantic\", \"n\", \"usa\"],\n    \"Goose_Bay\": [\"true¦a0canada,goose_bay,labrador,npt;st,t0;!lantic0;! 0;standard t0t0;ime\", \"Atlantic\", \"n\", \"usa\"],\n    \"Grand_Turk\": [\"true¦america eastern,e2grand turk,kmt,t0;c0urks and caicos;!a;astern0st,t;! 0;standard t0t0;ime\", \"Eastern\", \"n\", \"usa\"],\n    \"Guatemala\": [\"true¦c2g0mixco,villa nueva;t0uatemala;!m;entral standard time,st\", \"Central\", \"n\"],\n    \"Guayaquil\": [\"true¦cuenca,ec2guayaquil,ma1q0santo domingo de los colorados;mt,uito;chala,nta;!t,u0;!ador0;! 0;mainland,time\", \"Ecuador\", \"n\"],\n    \"Guyana\": [\"true¦g0;eorgetown,uy1y0;!t;!ana0;! time\", \"Guyana\", \"n\"],\n    \"Halifax\": [\"true¦a4ca2halifax,n1p0;ei,rince edward island;ew brunswick,ova scotia;!nada0;!/atlantic;dt,st,t0;!lantic0;! 0;ns,standard t0t0;ime\", \"Atlantic\", \"n\", \"usa\"],\n    \"Havana\": [\"true¦arroyo naranjo,bBc3diez de octubre,guantanDh1las tunas,pinar del rio,sant0;a clara,iago de cuba;avana,cu,e0n0olguin;cu;amaguey,i5u0;!b0;!a0;! 0;standard t0t0;ime;e0udad camilo cie0;nfueg1;ay1oyer0;os;amo\", \"Cuba\", \"n\", \"cuba\"],\n    \"Hermosillo\": [\"true¦ciudad obregon,h1mexic0nogales,sonora;an pacific standard time,o;ermosillo,npmx\", \"Mexican Pacific\", \"n\"],\n    \"Indiana/Indianapolis\": [\"true¦america2crawford,dadukmn,eastern in,i4p0star1us/east-indiana;erry,i0ulaski;ke;!/0;fort_wayne,i0;ndiana0;!polis\", \"Eastern\", \"n\", \"usa\"],\n    \"Indiana/Knox\": [\"true¦america1c0indiana,knox,us/indiana-starke;entral standard time,st;!/knox_in\", \"Central\", \"n\", \"usa\"],\n    \"Indiana/Marengo\": [\"true¦america,e0indiana,marengo;astern standard time,st\", \"Eastern\", \"n\", \"usa\"],\n    \"Indiana/Petersburg\": [\"true¦america,e0indiana,petersburg;astern standard time,st\", \"Eastern\", \"n\", \"usa\"],\n    \"Indiana/Tell_City\": [\"true¦america,c0indiana,tell_city;entral standard time,st\", \"Central\", \"n\", \"usa\"],\n    \"Indiana/Vevay\": [\"true¦america,e0indiana,vevay;astern standard time,st\", \"Eastern\", \"n\", \"usa\"],\n    \"Indiana/Vincennes\": [\"true¦america,e0indiana,vincennes;astern standard time,st\", \"Eastern\", \"n\", \"usa\"],\n    \"Indiana/Winamac\": [\"true¦america,e0indiana,winamac;astern standard time,st\", \"Eastern\", \"n\", \"usa\"],\n    \"Inuvik\": [\"true¦america mountain,canada,inuvik,m0pddt;ountain0st,t;! 0;standard t0t0;ime\", \"Mountain\", \"n\", \"usa\"],\n    \"Iqaluit\": [\"true¦america eastern,canada,e0iqaluit;astern0ddt,st,t;! 0;standard t0t0;ime\", \"Eastern\", \"n\", \"usa\"],\n    \"Jamaica\": [\"true¦e3j1k0new k0;ingston;am0m;!aica;astern standard time,st\", \"Eastern\", \"n\"],\n    \"Juneau\": [\"true¦a0juneau;k5laska0merica;! 1n0;! s1;juneau area,s0t1;tandard t0;ime;st,t\", \"Alaska\", \"n\", \"usa\"],\n    \"Kentucky/Louisville\": [\"true¦america0eastern 4k3l2wayne;!/0;k1l0;ouisville;entuc0;ky\", \"Eastern\", \"n\", \"usa\"],\n    \"Kentucky/Monticello\": [\"true¦america,e0kentucky,monticello;astern standard time,st\", \"Eastern\", \"n\", \"usa\"],\n    \"La_Paz\": [\"true¦bo1cochabamba,la paz,oruro,s0;anta cruz de la sierra,ucre;!l0t;!ivia0;! time\", \"Bolivia\", \"s\"],\n    \"Lima\": [\"true¦arequiDc9huancCi8juliaca,lima,p2sant1t0;acna,rujillo;a anita   los ficus,iago de sur8;e0iura,ucallA;!r0t;!u0;! 0;standard t0t0;ime;ca,quitos;allao,hi1us0;co;cl0mbote;ayo;pa\", \"Peru\", \"s\"],\n    \"Los_Angeles\": [\"true¦a05ba03c00fWgarden grove,hTirviSlMmoJnIoFp9r8s1tacoma,us0washington state;/06a;a1eattle,f,p0tocktTunrise manor;okaPringH;cramenHn0; 1ta 0;aTclariV;bernardiRdiego,fran0jo4;!cisco;ancho cucamonga,ePiver7;a0dt,ort7st,t;cific1radi0;se;! 0;standard t0t0;ime;ak1cean0regFxnard;side;land;evada,orth las8;des1reno0; valley;to;a3o0;ng6s0; 0_0;angeles;!s0; vegas;ne;enders1untington0; beach;on;onta2re0;mont,s0;no;na;ali1hula vis0;ta;!f1;ja calif0kersfield;ornia;merica0naheim;! 0;pacific\", \"Pacific\", \"n\", \"usa\"],\n    \"Maceio\": [\"true¦a6br1e0maceio; south america s3ast south america;asilia0t;! 0;s0t1;tandard t0;ime;lagoassergipe,racaju\", \"Brasilia\", \"n\"],\n    \"Managua\": [\"true¦c3man2ni0;!c0;!ar0;agua;entral standard time,st\", \"Central\", \"n\"],\n    \"Manaus\": [\"true¦am4brazil3c0manaus;entral brazil0uiaba;!ian0;! s5;!/we2;azon0t;! 1as ea0;st;s0t1;tandard t0;ime\", \"Amazon\", \"s\"],\n    \"Martinique\": [\"true¦a3f1m0;a1q,tq;fmt,ort de france,rench ma0;rtinique;st,tlantic standard time\", \"Atlantic\", \"n\"],\n    \"Matamoros\": [\"true¦america central,c2heroica ma1m0nuevo laredo,reynosa;a0exico;tamoros;entral0st,t;! 0;standard t0t0;ime\", \"Central\", \"n\", \"usa\"],\n    \"Mazatlan\": [\"true¦cAh8l7m0tep4;azatlAexic1ountain 0;mexico,standard time (mexico);an pacific 2o0;! pacif0/bajasur;ic;standard t0t0;ime;a paz,os mochis;np0p0;mx;hihuahua,uliac0;an\", \"Mexican Pacific\", \"n\", \"mex\"],\n    \"Menominee\": [\"true¦america4c0menominee,wisconsin;entral0st,t;! 0;standard t0t0;ime;! central\", \"Central\", \"n\", \"usa\"],\n    \"Merida\": [\"true¦c3guadalajara,m0;e0onterrey;rida,xico0;! city;ampeche4entral 0st;mexic0standard 2;an,o0;! 0;time;!yucatán\", \"Central Mexico\", \"n\", \"mex\"],\n    \"Metlakatla\": [\"true¦a0metlakatla;k5laska0merica;! 1n0;! s1;annette island,s0t1;tandard t0;ime;st,t\", \"Alaska\", \"n\", \"usa\"],\n    \"Mexico_City\": [\"true¦a0Lb0JcYduran0Cecatepec de morel0AguThSiQjalis0Nleon de los alda06mInHoGpEqDs9t4uruap04v2x1yucat04za0;catec0Cpop03;alapa de enriqu0Pi0Lochimil0L;e0illahermosa;nustiano carranza,racruz;a3e7la1o0uxt03;luUna02;huac,l0quepaque,xca01;nepant00pW;bas0Emaulip04pachuZ;an0oledad de graciano sanch0H; luis potosi,t0;a maria chimal0iago de q1;huQ;ueretaG;achuca de soIoza rica de7ue0;bSrto vallar04;axaJjo de agua;aucalpan07icolas romeCuevo le06;agdalena contrerUex4i2o0x;nterrey,rel0;ia,os;choHguel0; h5;!ico0;! 0/general,_0;city;rap5xtapalu9zta0;cUpalapa;idalJ;a1erre0stavo adolfo made0;ro;dalajara,naj0;ua0;to;ampeche,eFhiCiudad Ao3st,u0wt;au1ernava0;ca;htemoc,titlan izcalli;a4l2yo0;ac0;an;i0onia del valle;ma;cEhui0tzacoalc2;la;lopez mate0nezahualcoyotl;os;ap1lpancin0;go;as;laya,ntral 0;mexic0standard 2;an,o0;! 0;time;enito6uenavis0;ta;capulco3guascalientes,lvaro obreg2zcapotz0;al0;co;on; de0; juar0;ez\", \"Central Mexico\", \"n\", \"mex\"],\n    \"Miquelon\": [\"true¦hBmAp8s0;aint pierre2pm,t pierre 0;& miquelon 0a5;s2t3;! 0;a2s0;tandard t0;ime;nd1;ierre0m; m0;iquelon;npm,pm\", \"St. Pierre & Miquelon\", \"n\", \"usa\"],\n    \"Moncton\": [\"true¦a0canada,hepm,moncton,new brunswick;st,t0;!lantic0;! 0;standard t0t0;ime\", \"Atlantic\", \"n\", \"usa\"],\n    \"Monterrey\": [\"true¦c8g6m3sa1t0victoria de durango;ampico,orreon;ltillo,n0; nicolas de los garza,ta catarina;exico1on0;clova,terrey;! city;omez palacio,uadal0;ajara,upe;entral 1iudad 0st;apodaca,general escobedo,madero,victoria;mexic0standard 2;an,o0;! 0;time\", \"Central Mexico\", \"n\", \"mex\"],\n    \"Montevideo\": [\"true¦montevideo5u0;r1y0;!st,t;uguay0y;! 0;s1t2;! s0;tandard t0;ime\", \"Uruguay\", \"s\"],\n    \"New_York\": [\"true¦a0Rb0Oc0Hd0Ge0Bf07g05hialeah,i02j00kZlexingtonYmUnMoKpIquHrDsAt7u5v3w0yonkers;ashington1est 0inston salem,orcD;raEvirgin04;! dc;ermont,irginia0;! beach;nited states,s0;!/0Ma;a0enne1he bronx,oleD;llaha0mpa;ssee;outh 1t0; petersburg,aten3;bo0CcC;a2hode1ichmo06och0;ester; is03;lei2;eens,intana roo;ennsylvanNhiladelphNittsbur0rovidence;gh;hio,rlan0;do;ew3or1y0;!c;folk,th c0;aroliE; 1_yo0a0port news;rk;hampshiXje8york0;! staT;a1eads,i0;ami,chig1;ine,nhatt0ryMssachusetts;an;! fayetO;entucky,nox9;acks2e0;rsey;ndia1r0;on5;na;eorg0reensboro;ia;ayette1l0ort lauderda2;!orida;vil0;le;ast0dt,st,t; flatbush,ern0;! 0;standard t0t0;ime;elawa9urham;ape coral,h3incinnati,leve1o0;lumbus,nnecticut;la0;nd;a0esapeake;rlot0ttanooga;te;altimo1o0rooklyn,uffalo;st4;re;kr2merica0tlanta;! 0;eastern;on\", \"Eastern\", \"n\", \"usa\"],\n    \"Nipigon\": [\"true¦america eastern,canada,e0nipigon;astern0st,t;! 0;standard t0t0;ime\", \"Eastern\", \"n\", \"usa\"],\n    \"Nome\": [\"true¦a0no5;k5laska0merica;! 1n0;! s1;s0ti1west;tandard ti0;me;st,t\", \"Alaska\", \"n\", \"usa\"],\n    \"Noronha\": [\"true¦atlantic islands,brazil3f0n4;ernando de noronha 0nt;standard t0t0;ime;!/den0;oronha\", \"Fernando de Noronha\", \"n\"],\n    \"North_Dakota/Beulah\": [\"true¦america,beulah,c0north dakota;entral standard time,st\", \"Central\", \"n\", \"usa\"],\n    \"North_Dakota/Center\": [\"true¦america,c1merc0north dakota,oliv0;er;ent0st;er,ral standard time\", \"Central\", \"n\", \"usa\"],\n    \"North_Dakota/New_Salem\": [\"true¦america,c1n0;ew_salem,orth dakota;entral standard time,st\", \"Central\", \"n\", \"usa\"],\n    \"Nuuk\": [\"true¦america3g1nuuk,wg0;st,t;l,r0;eenland,l;!/godthab\", \"West Greenland\", \"n\", \"green\"],\n    \"Ojinaga\": [\"true¦america5c4m0ojinaga;ountain0st,t;! 0;standard t0t0;ime;hihuahua,iudad juarez;! mountain\", \"Mountain\", \"n\", \"usa\"],\n    \"Panama\": [\"true¦a3coral h,e2pa0san miguelito;!n0;!ama;astern standard time,st;merica/0t2;at1c0;aym1oral_harbour;ikok0;an\", \"Eastern\", \"n\"],\n    \"Pangnirtung\": [\"true¦a4baffin island,canada,e0nunavit,pangnirtung;astern0st,t;! 0;standard t0t0;ime;ddt,merica eastern\", \"Eastern\", \"n\", \"usa\"],\n    \"Paramaribo\": [\"true¦paramaribo,s0;r2ur0;!iname0;! time;!t\", \"Suriname\", \"n\"],\n    \"Phoenix\": [\"true¦aAc8g6idaho,m4n3phoenix,s2t1u0wyoming;s/arAtah;empe,ucsC;cottsd4inaloa,onora;ayarit,ew mexico;aryv2esa,o0st,t,wt;nta6untain standard time;ilbert,lend0;ale;h0olorado;andler,ihuahua;merica2r0;izo0;na;!/crest0;on\", \"Mountain\", \"n\"],\n    \"Port-au-Prince\": [\"true¦america eastern,cAe6h4p0;etionville,ort0; 0-au-1;au 0de paix;prince;aiti,t0;!i;astern0st,t;! 0;standard t0t0;ime;arrefour,roix des bouquets\", \"Eastern\", \"n\", \"usa\"],\n    \"Porto_Velho\": [\"true¦am5brazil,c2porto0rondônia; 0_0;velho;entral brazil0uiaba;!ian0;! s3;azon0t;! 0;s0t1;tandard t0;ime\", \"Amazon\", \"n\"],\n    \"Puerto_Rico\": [\"true¦a2bayam9p0;r0uerto rico;!i;merica0st,tlantic standard time;!/0;a5blanc-sabl4curacao,dominica,g3kralendijk,lower_princes,m2port_of_spa1st_0torto7virg1;barthelemy,kitts,lucia,thomas,vincent;in;arigot,ontserrat;renada,uadeloupe;on;n0ruba;guil0tigua;la\", \"Atlantic\", \"n\"],\n    \"Punta_Arenas\": [\"true¦c0punta arenas,region of magallanes;hile0lt;! standard time\", \"Chile\", \"s\"],\n    \"Rainy_River\": [\"true¦america4c0ft frances,rainy river;entral0st,t;! 0;standard t0t0;ime;! central\", \"Central\", \"n\", \"usa\"],\n    \"Rankin_Inlet\": [\"true¦america4c0rankin inlet;ddt,entral0st,t;! 0;standard t0t0;ime;! central\", \"Central\", \"n\", \"usa\"],\n    \"Recife\": [\"true¦aAbr4caruaru,e3jaboatao2olinda,p0;aulista,e0;rnambuco,trolina;! dos guararapes; south america s4ast south a6;a0t;silia0zil;! 0;s0t1;tandard t0;ime;merica\", \"Brasilia\", \"n\"],\n    \"Regina\": [\"true¦c2regina,s0;askat0k;c2oon;anada0entral standard time,st;!/saskatc0;hewan\", \"Central\", \"n\"],\n    \"Resolute\": [\"true¦america4c0resolute;entral0st,t;! 0;standard t0t0;ime;! central\", \"Central\", \"n\", \"usa\"],\n    \"Rio_Branco\": [\"true¦a1brazil0rio branco;!/1;c1merica/porto_0;acre;re0t;! 0;standard t0t0;ime\", \"Acre\", \"s\"],\n    \"Santarem\": [\"true¦br1e0pará west,santarem; south america s4ast south america;a0t;silia0zil;! 0;s0t1;tandard t0;ime\", \"Brasilia\", \"n\"],\n    \"Santiago\": [\"true¦aAc4iquique,la pintana,puente alto,rancagua,san3t1v0;alparaiso,ina del mar;alca0emuco;!huano; bernardo,tiago;h1l0oncepcion;!st,t;ile0l;! 0/continental;standard t0t0;ime;ntofagasta,rica\", \"Chile\", \"s\", \"chile\"],\n    \"Santo_Domingo\": [\"true¦a8bella vista,do6la romana,s0;an0dmt; pedro de macoris,t0;iago de los caballeros,o domingo0;! 0;e0oe0;ste;!m0;!inican republic;st,tlantic standard time\", \"Atlantic\", \"n\"],\n    \"Sao_Paulo\": [\"true¦a16b0Tc0Md0Je0Hf0Fg0Ahortol09i05j02l01mXnVosasco,pLriFs4ta3uber2v0;i0olta redon1A;amao,la velha,tor16;a0Ml06;boao da ser00uba10;a2e1oroNu0;maLzano;rXte lago0L;nt4o 0;bernardo do campo,carl03jo0leopolLpaulo,vicE;ao de meriti,se0;! do0; rio p8s camp00;a 1o0; andDs;barbara d'oes0Pluz0Tmar0T;beirao 3o0;! 0;cla0de janei0g6ver7;ro;das nev07p0;reto;asso fun8e7iraci6lanalti0Oo4r0;aia g1esidente prud0;en0G;ran0;de;nta grossa,rto aleg0;re;caW;lotYtro0F;do;iteroi,ov0;aJo hamburgo;a1o0;gi das cruzSntes clarD;ri0ua;l07n6;imei2ondri08;acarei,oinville,u0;iz de fo0ndi9;ra;ndaia2patin1ta0;bor6pevi,quaquece1;ga;tuG;andY;o3ravat2uaru0;ja,lh0;os;ai;iSvernador valadarC;loria5oz do0ran2; iguacu; south america sHast south ameri0mbu;ca;i0uque de caxi8;adema,vi0;noN;a1o0uriti2;ntagem,tK;choeiro de itapemirDmp1no3rapicui0scavel,xias do sul;ba;in1os dos goytacaz0;es;as;aBe7lumenau,r0;!a0st,t;!silia1zil0;!/east;! 0;s0t1;tandard t0;ime;l1t0;im;ford roxo,o horizon0;te;rueri,uru;lvora4merica3na2parecida de goi0;an0;ia;polis;na;da\", \"Brasilia\", \"s\"],\n    \"Scoresbysund\": [\"true¦e3greenland2h0ittoqqortoormiit,scoresbysund;e0neg;eg,g;! eastern;ast greenland1g0;st,t;! 0;standard t0t0;ime\", \"East Greenland\", \"n\", \"eu0\"],\n    \"Sitka\": [\"true¦a0sitka;k6laska0merica;! 1n0;! st2;s0t2;itka area,t0;andard t0;ime;st,t\", \"Alaska\", \"n\", \"usa\"],\n    \"St_Johns\": [\"true¦canada7h5n0st johns;d3ewfoundland0st,t;! 0;labrador,standard t0t0;ime;dt,t;e0n0tn;tn;!/newfoundland\", \"Newfoundland\", \"n\", \"usa\"],\n    \"Swift_Current\": [\"true¦c1s0;askatchewan,wift current;anada,entral standard time,st\", \"Central\", \"n\"],\n    \"Tegucigalpa\": [\"true¦c2h0san pedro sula,tegucigalpa;n0onduras;!d;entral standard time,st\", \"Central\", \"n\"],\n    \"Thule\": [\"true¦a0pituffik,thule;st,t0;!lantic0;! 0;standard t0t0;ime\", \"Atlantic\", \"n\", \"usa\"],\n    \"Thunder_Bay\": [\"true¦canada,e0thunder bay;astern0st,t;! time\", \"Eastern\", \"n\", \"usa\"],\n    \"Tijuana\": [\"true¦america8baja california,eAh6mexic4p0tijuana;acific0st,t;! 0;standard t0t0;ime;ali,o0;!/bajanorte;e0n0;nomx; pacific,/0;e0santa_isabel;nsenada\", \"Pacific\", \"n\", \"usa\"],\n    \"Toronto\": [\"true¦americaGbEcaBe7gatineIhamilFkitchener,l4m3nepe2o0quebec,richmond hill,toronto,vaugh2windsor;n5sh0tt0;awa;an;arkham,ississauga,oF;avFon0;don on0gueuil;tario;astern0st,t;! 0;standard t0t0;ime;!n0;!ada0;!/7;arrie,ramp0;ton; 4/0;mo1nass0;au;ntre0;al;eastern\", \"Eastern\", \"n\", \"usa\"],\n    \"Vancouver\": [\"true¦america 9b7ca5ladn4okanagan,p1surrey,v0yukon;ancouv3ictor7;acific0st,t;! 0;bc,standard time;er;!nada0;!/2;ritish columb0urnaby;ia;pacific\", \"Pacific\", \"n\", \"usa\"],\n    \"Whitehorse\": [\"true¦canada1m0whitehorse,yst;ountain standard time,st;!/yukon\", \"Mountain\", \"n\"],\n    \"Winnipeg\": [\"true¦america 7c2m1w0;est m0innipeg;anitoba;anada3entral0st,t;! 0;standard t0t0;ime;!/0;central\", \"Central\", \"n\", \"usa\"],\n    \"Yakutat\": [\"true¦a0y4;k6laska0merica;! 1n0;! s2;s1t2y0;akutat;tandard t0;ime;st,t\", \"Alaska\", \"n\", \"usa\"],\n    \"Yellowknife\": [\"true¦america mountain,canada,m0yellowknife;ountain0st,t;! 0;standard t0t0;ime\", \"Mountain\", \"n\", \"usa\"]\n  },\n  \"Antarctica\": {\n    \"Casey\": [\"true¦antarctica,cas0;ey,t\", \"Casey\", \"s\", \"ant\"],\n    \"Davis\": [\"true¦a1dav0;is,t;ntarctica,q,ta\", \"Davis\", \"s\"],\n    \"Macquarie\": [\"true¦a2canberra,eastern australia6m0sydney;acquarie0elbourne;! island;e4ntarctica,us0; east0tralia eastern;!ern0;! standard0; time;st,t\", \"Eastern Australia\", \"s\", \"aus\"],\n    \"Mawson\": [\"true¦antarctica,maw0;son,t\", \"Mawson\", \"s\"],\n    \"Rothera\": [\"true¦a1b0city of b0rothera;uenos aires;ntarctica1r0;gentina,st,t;!/palmer\", \"Argentina\", \"s\"],\n    \"Troll\": [\"true¦antarctica,g2troll0;! 0;research station,t1;mt,reenwich mean t0;ime\", \"Troll\", \"s\", \"troll\"],\n    \"Vostok\": [\"true¦antarctica,vost0;!ok\", \"Vostok\", \"s\"]\n  },\n  \"Asia\": {\n    \"Almaty\": [\"true¦a6central asia,east kazakhstan time,k2nur sultan,p1s0taraz,ust kamenogorsk;emey,hymkent;avlodar,etropavl;a0z;ragandy,z0;!akhstan0;! eastern;lm1s0;ia,tana;a0t; ata,ty\", \"East Kazakhstan\", \"n\"],\n    \"Amman\": [\"true¦a2eet,irbid,jo0russeifa,wadi as sir,zarqa;!r0;!d1;mm0sia;an\", \"Eastern European\", \"n\", \"jord\"],\n    \"Anadyr\": [\"true¦a0petropavlovsk kamchatsky;na0sia;dyr0t;! time\", \"Anadyr\", \"n\"],\n    \"Aqtau\": [\"true¦a1kazakhstan western,mangghystaū/mankis3tashkent,west 0;asia,kazakhstan5;lm2q1s0;hgabat,ia;tau;a0t; ata,-ata0; time\", \"West Kazakhstan\", \"n\"],\n    \"Aqtobe\": [\"true¦a1kazakhstan western,tashkent,west 0;asia,kazakhstan5;kto5lm2qt1s0;hgabat,ia;o3ö3;a0t; ata,-ata0; time;be\", \"West Kazakhstan\", \"n\"],\n    \"Ashgabat\": [\"true¦as4t0;km,m2urkmen0;a4istan0;! time;!st,t;hga1ia0;!/ashkhabad;bat\", \"Turkmenistan\", \"n\"],\n    \"Atyrau\": [\"true¦a1gur'yev,kazakhstan western,tashkent,west 0;asia,kazakhstan6;lm3s2t0;irau,yra0;u,ū;hgabat,ia;a0t; ata,-ata0; time\", \"West Kazakhstan\", \"n\"],\n    \"Baghdad\": [\"true¦a6ba5dihok,erbil,i3k2mosul,na1r0;amadi,iyadh;jaf,sirC;arbala,irkuk,uwait;q,r0;aq,q;ghdad,sr9;bu ghurayb,d diw6l 5rab1s0; sulaym5ia,t;!i0;a0c;!n0;! time;amar2basrah al qadim2falluj2hill2kut,mawsil al jadid2;an0;iy0;ah\", \"Arabian\", \"n\"],\n    \"Baku\": [\"true¦a0baku,ganja,lankaran,sumqayit;sia,z0;!e0t;!rbaijan0;! time\", \"Azerbaijan\", \"n\"],\n    \"Bangkok\": [\"true¦asiaAbangkok,ch7h5i3jakarta,mueang nontha8na2pak kret,s0udon thani;amut prakan,e0i racha,outh east0; asia;khon ratchasima,m di9;ct,ndochina0;! time;a0ue;iphong,noi,t y2;iang m1on 0;buri;ai;!/0;phnom_pe0vientiane;nh\", \"Indochina\", \"n\"],\n    \"Barnaul\": [\"true¦a3b2kra0north a3;snoyarsk0t;! time;arnaul,iysk;sia\", \"Krasnoyarsk\", \"n\"],\n    \"Beirut\": [\"true¦asia,bei3e2l0ra's bay3;b0ebanon;!n;astern european time,et,urope eastern;rut\", \"Eastern European\", \"n\", \"leb\"],\n    \"Bishkek\": [\"true¦asia,bishkek,k0osh;g2yrgy0;stan,zstan0;! time;!t,z\", \"Kyrgyzstan\", \"n\"],\n    \"Brunei\": [\"true¦asia,b0;dt,n2r0;n,unei0;! darussalam time;!t\", \"Brunei Darussalam\", \"n\"],\n    \"Chita\": [\"true¦asia,chita,yak0;t,utsk0;! time\", \"Yakutsk\", \"n\"],\n    \"Choibalsan\": [\"true¦as2choibalsan,dornodsükhbaatar,mongol2ula0;anbaatar0t;! time;ia\", \"Ulaanbaatar\", \"n\"],\n    \"Colombo\": [\"true¦as6c4dehiwala mount lavin6i2kolkata,lk1m0new delhi,sri lanka;oratuwa,umb4;!a;ndia0st;! time,n;henn0olombo;ai;ia\", \"India\", \"n\"],\n    \"Damascus\": [\"true¦a4d3eet,h2latak5sy0;!r0;!ia;am3oms;amascus,eir ez zor;leppo,r raqq1s0;ia;ah\", \"Eastern European\", \"n\", \"syr\"],\n    \"Dhaka\": [\"true¦asiaGbDcBd9jess8khul7mymensingh,na4pa3ra2s1t0;angail,ungi;aid8hib4ylhet;jshahi,ng7;b3ltan,r naogaon;gar5r0t3;ayan0singdi;ganj;na;ore;haka,inaj0;pur;hattogram,o0;milla,x's bazar;a0d,gd,ogra,st;gerhat,ngladesh0rishal;! time;!/dacca\", \"Bangladesh\", \"n\"],\n    \"Dili\": [\"true¦asia,dili,east timor1tl0;!s,t;! time\", \"East Timor\", \"s\"],\n    \"Dubai\": [\"true¦a5dubai,g3mus1om0ras al khaim2sharj2;!an,n;aff0c5;ah;st,ulf0;! time;bu dhabi,jm2rabi2sia0;!/musc0;at;an\", \"Gulf\", \"n\"],\n    \"Dushanbe\": [\"true¦asia,dushanbe,t0;ajikistan1j0;!k,t;! time\", \"Tajikistan\", \"n\"],\n    \"Famagusta\": [\"true¦asia,e0famagusta,northern cyprus;astern european time,et,urope eastern\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Gaza\": [\"true¦asia,eet,gaza2p0;alestine,s0;!e;! strip\", \"Eastern European\", \"n\", \"pal\"],\n    \"Hebron\": [\"true¦asia,e0hebron,west bank;ast jerusalem,et\", \"Eastern European\", \"n\", \"pal\"],\n    \"Ho_Chi_Minh\": [\"true¦asia7bien hoa,can tho,da 5ho3nha tr6qui nh8rach gia,sa dec,thi xa phu my,v0;ietnam1n0ung tau;!m;! south; chi 0_chi_0;minh;lat,n0;ang;!/saig0;on\", \"Indochina\", \"n\"],\n    \"Hong_Kong\": [\"true¦asia,h0kowloon,tsuen wan;k3ong0; kong1_k0k0;ong;! time;!g,st,t\", \"Hong Kong\", \"n\"],\n    \"Hovd\": [\"true¦as4bayan-ölgiigovi-altaihovduvszavkhan,hov2west0; 0ern 0;mongol2;d0t;! time;ia\", \"Hovd\", \"n\"],\n    \"Irkutsk\": [\"true¦a2brat3irk0north asia east,ulan ude;t,utsk0;! time;ngar0sia;sk\", \"Irkutsk\", \"n\"],\n    \"Jakarta\": [\"true¦aZbTcRdepQiNjKkediri,lJmGpArengasdengklQs4t2w0yogyakM;est0ib; indoneXern indonesia time;a0egal;n4sikmal3;ema4itubondo,outh tan3u0;kabumi,medaSra0;b0kF;aya;ge0;raO;a4e1robolinggo,urw0;akAokerto;ka1ma0rcut;laKtangsiantar;long2nbaru;daIl3mulaIruI;a1ed0;an;diun,laF;embaE;a0ember;k0mbi,vasumatra;arta;d1ndonesia0;! western;!n;ok;i0urug;ampea,bino5leungsir,mahi,putat,rebon;a1e0injai,ogor;kasi,ngkulu;nd0tam;a0u1; aceh,r lampu0;ng;sia\", \"Western Indonesia\", \"s\"],\n    \"Jayapura\": [\"true¦a2east1indonesia eastern,jayapura,m0new guinea,wit;alukus,oluccas; indones1ern indonesia time;mbon,s0;ia\", \"Eastern Indonesia\", \"s\"],\n    \"Jerusalem\": [\"true¦as7beersheba,haifa,i2j0petah tiqwa,rishon leziyyon,tel 9west je1;e0mt;rusalem;d3l,s0;r0t;!ael0;! time;dt,t;hdod,ia0;!/tel_0;aviv\", \"Israel\", \"n\", \"isr\"],\n    \"Kabul\": [\"true¦a1herat,jalalabad,ka0mazar e sharif;bul,ndahar;f0sia;!g0t;!hanistan0;! time\", \"Afghanistan\", \"n\"],\n    \"Kamchatka\": [\"true¦a2kamchatka,pet0;ropavlovsk0t; kamchatsky,-kamchatski time;nadyr,sia\", \"Petropavlovsk-Kamchatski\", \"n\"],\n    \"Karachi\": [\"true¦asia,bLchiniKdera ghaziIfaisalHgujraGhyderHislamHjhang sadr,kElaDm8nawabshah,okaBp4quetta,ra3s0;a1h0ialkJukkN;ahkIekhupu9;ddiqEhiwal,rgodha;him yarEwalpindi;ak1eshawar,k0;!t;!istan0;! time;a3i1u0;lt9zaffar7;ngo0rpur khas;ra;lir cantonment,rd6;hore,rkana;a0otli;moke,rachi,s8;n5t;abad; kh0;an;ot;a1himber,ure0;wala;hawalp0ttagram;ur\", \"Pakistan\", \"n\"],\n    \"Kathmandu\": [\"true¦asia3biratnagar,kath4n1p0;atan,okhara;epal,p0;!l,t;!/kat0;mandu\", \"Nepal\", \"n\"],\n    \"Khandyga\": [\"true¦asia,khandyga,yak0;t,utsk0;! time\", \"Yakutsk\", \"n\"],\n    \"Kolkata\": [\"true¦0:3D;1:3L;2:2D;3:3M;4:3J;a35b2Dc24d1We1Uf1Sg1Fh1Ci18j13k0Pl0Km0Cn05odis3KpVquthbull3DrNsFt9u8v5warang2Myamun1P;a6el1Ui5;jayawa2Vsakha0HzianagC;doda2Orana11;daip0jja23lhasn1ttar pradesh;a8eXh7iru5umk0;chirap0Mnelve2p5vottiy0;a39p0;ane,iruvananthapur0Noothuku2Yriss0;mb5njo1X;ar0L;aBecunder4h9i8lst,o7r1Fu5;jan37r5;at,endr1C;l2Znip2N;k3liguKngrau2rJ;ahj1Zi5ri2Oya0L;mo1Mvaji07;har1Xlem,mbh24ng2t04ug0Y;a6e0Eoh5;iItak;ebare2i9j7m5nc1Gtl0Aurke37;ag5g5p0;und08;a5kot;hmund26sth2A;ch0p0;a9imp8roddat0u5;ducher23n5rn17;a5e;sa;ri;li,n7rbha6t5;ia2Vna;ni;chku2Ti5;ha2Gp21;a7e6izam4o5;i1Vwrang2B;l0Sw del0Y;di2Kg7i0Ejaf2Fn5re2Oshik,vi mumb15;ded,g5;i,loi j1V;ercoil,p0;a8eerut,irz25o7u5yso0Y;lugu,mb10rwa1Izaffar5;n1p0;nghyr,rad4;chili7d6harasht1Fleg07n5thu1Fu;ga0Iip0;hya,ur0V;patnG;a7u5;cknow,dhia5;na;l bahadur5t0; n1;aDhaBo8u5;kat6lt5rno1P;a2i;pal2;l5rWta,zhikode;h1Nka1Kl5;am;nd5ragp0;wa;kina13l8marOnp0r5shmir,tih3;i6na5ol ba18;l,tV;mn1;lakuric03y11;a6han5odNunagadh;si;b0Rip0l6m5;mu,n1shedp0;andh3gGna;chalkaranji,mph0In5st;!d5;!ia5o00;! time,n;a6is3ospet,u5;b2g2;o0Hp0ridw3;aChazi4o9reater noi0Mu6wali5y04;or;jar0OlbarQnt0rg6wa5;ha12;aon;rak6sa5;ba;hp0;juw8n5ya;dh6g5;an1;in1;aka;ar5iroz4;id4rukh4;l5taw0M;loF;aAe8h6indigul,ombOurg5;!ap0;anb0Uul5;ia;hra dun,l5was;hi;rbhan5vange8;ga;a09h8o5uttack;ch6imbato5;re;in;a6enn5;ai;nd5pL;a5i0C;!nn1;aNeKhBi9or7rahm04u5;landshahr,rh5;anp0;iv2;li;d3har sharif,jZkan07l5;asp0imoC;aAi7op6u5;baneshw3sav5;al;l6wan5;di,i;ai,wa6;g6ratp0tpa5vn1yand3;ra;alp0;l5ngaluru;gaum,la5;ry;hAli,r6thin5;da;a6ddham5eilly;an;n1s5;at;a6rai5;gh;ramp0;gQhmLizawl,jmKkoRlHmDnantCrrBs6urang4va5;di;ans8ia5;!/ca5;lcut5;ta;ol;ah;ap0;arnath,batt0r5;ava5its3o9;ti;ur;appuz6i5lah4w3;garh;ha;er;adn1ed4;ab5;ad;ag3;ar;arta5ra;la\", \"India\", \"n\"],\n    \"Krasnoyarsk\": [\"true¦a2kra0north a2;snoyarsk0t;! time;sia\", \"Krasnoyarsk\", \"n\"],\n    \"Kuala_Lumpur\": [\"true¦aHbukit mertajGgeorge town,ipoh,johor bahFk8m4petali3s0taipiE;e1hah alFu0;ba1ngai petani;paBremb7;ng jaya;ala1y0;!s,t;cca,ysia0;! time;ampung baru suba5la5ota bha6ua0;la1nt0;an; 0_l1;l0terengganu;umpur;ng;ru;am;lor setar,sia\", \"Malaysia\", \"s\"],\n    \"Kuching\": [\"true¦asia,k4m2s0tawau;a0ibu;bahsarawak,ndakan;alaysia0iri,yt;! time;ota kinabalu,uching\", \"Malaysia\", \"n\"],\n    \"Macau\": [\"true¦asia6beiji5c2hong ko5m0urumqi;ac0o;!au;h0st;ina0ongqi1;! time;ng;!/macao\", \"China\", \"n\"],\n    \"Magadan\": [\"true¦asia,mag0;adan0t;! time\", \"Magadan\", \"n\"],\n    \"Makassar\": [\"true¦asiaBba8c5denpa4indonesia central,k3l2ma1palu,s0wita;amarinda,ulawesi;kas2nado,taram;abuan bajo,oa jan7;endari,up8;sar;e0ity of bal3;lebesbalinusa,ntral indonesia0;! time;l0njarmasin;ikpap0;an;!/ujung_pand0;ang\", \"Central Indonesia\", \"s\"],\n    \"Manila\": [\"true¦a04bWcRdaPgeneral santOiMlJmCnaBoAp4quezIsan1ta0zamboanga;clobZguig,rlac,ytE; 1t0;a ro2ol;fernando,jose del monte,pab02;a3h1uerto prince0;sa;!ilippine0l,st,t; time,s;gadiRnalanoy,s0;ay,ig;longapo,rmoc;ga,votQ;a0eycauayN;balacat,gugpo poblaci4kati,l3n0;da1ila,silingLtamp0;ay;luyong,ue;ingDol6;on;a1egaspi,i0ucena;bertad,pa;pu lapu,s p4;l0mus;igCoiI;os;smar0v5;inB;a0ebu,otabato;b1gayan de oro,in5l0;amba,ooc6;anatu5uy0;ao;a4inan2u0;d0tu2;ta;!gon0;an;co1guio,tang0;as;lod,or;n0sia;geles,tipo0;lo\", \"Philippine\", \"n\"],\n    \"Nicosia\": [\"true¦a5cy3e0n2;astern european time,et,urope0; eastern,/n0;ico2;!p0;!rus;sia\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Novokuznetsk\": [\"true¦a5k2no0prokop'yev1;rth a4vokuznet0;sk;emerovo,ra0;snoyarsk0t;! time;sia\", \"Krasnoyarsk\", \"n\"],\n    \"Novosibirsk\": [\"true¦as3no0siber3;rth central as2v0;osibirsk0t;! time;ia\", \"Novosibirsk\", \"n\"],\n    \"Omsk\": [\"true¦asia,oms0;k0t;! time\", \"Omsk\", \"n\"],\n    \"Oral\": [\"true¦a2kazakhstan western,oral,tashkent,west 0;asia,kazakhstan0;! 4;lm1s0;hgabat,ia;a0t; ata,-ata 0;time\", \"West Kazakhstan\", \"n\"],\n    \"Pontianak\": [\"true¦asia,b2indonesia western,pontianak,tanjung pinang,w0;est0ib; b0ern indonesia time;orneo\", \"Western Indonesia\", \"n\"],\n    \"Pyongyang\": [\"true¦asia,chongjin,h7k4n3p2s0won8;ariw0eoul,inuiAunch'0;on;rk,yongya7;amp'o,orth korea;a1orea0p,st;!n time;eso3nggye;a1ungnam,ye0;san;e1mhu0;ng;ju\", \"Korean\", \"n\"],\n    \"Qatar\": [\"true¦a2doha,kuwait,qa0riyadh;!t0;!ar;r2s0;ia0t;!/bahrain; rayyan,ab0;!i0;a0c;!n0;! time\", \"Arabian\", \"n\"],\n    \"Qostanay\": [\"true¦a2central asia,east kazakhstan time,k0qo1;azakhstan eastern,o0;stanay;lmt,s0;ia,tana\", \"East Kazakhstan\", \"n\"],\n    \"Qyzylorda\": [\"true¦a4k1qy2tashkent,west 0;asia,kazakhstan7;azakhstan western,y0zyl-1;zyl0;orda;lm1s0;hgabat,ia;a0t; ata,-ata0; time\", \"West Kazakhstan\", \"n\"],\n    \"Riyadh\": [\"true¦a9burayd8dammam,ha7jedd8k6me5najran,riyadh,s4ta3y0;anbu,e0;!m0;!en;'if,buk;ultan3yot;cca,dina;hamis mush6uw6;'il,far al batin;ah;bha,l 8ntarctica/syowa,rab4s0;ia0t;!/0;aden,kuw0;ait;!i0;a0c;!n0;! time;hufuf,jubayl,kharj,mubarraz\", \"Arabian\", \"n\"],\n    \"Sakhalin\": [\"true¦asia,sak0yuzhno sakhalinsk;halin0t;! 0;island,time\", \"Sakhalin\", \"n\"],\n    \"Samarkand\": [\"true¦asia,bukhara,nukus,qarshi,samarkand,uz0;bekistan0t;! 0;time,west\", \"Uzbekistan\", \"n\"],\n    \"Seoul\": [\"true¦aPbuMchHdaeGgChwaseoRiBjeAk7m6pohaFrok,s2u1wonJy0;aCeosu;ijeongbuQlsL;e1outh korea,u0;nEwH;joAo0;ngnamMul;asGokpo;imhae,or0r,st,wangmyo7;!ea0;!n time;ju,on8;cCksBn6;angneu2oyaEu1wa0;ng5;mi,ns8riD;ng;gu,je4;angw3eon2in1un0;che2;ju;an,gju7;on;c1s0;an;heon3;n0sia;san1ya0;ng0; si\", \"Korean\", \"n\"],\n    \"Shanghai\": [\"true¦0:3J;1:36;2:34;3:37;4:3D;a3Cb31c2Nd2He30f2Cg26h1Qji1Ek1Bl0Ym0Wn0Tordos,p0Pq0Lrizh10s08t01u3FwSxLyEz5;aoCh6i5ouc3unyi;bo,go0;a7en6ouk2u5; c3h31maWzh2;g2Vj1Izh2;b1Vng5o3E;jiakou5zh2;! shi xuanhua qu;ya0z27;an9i7u5;ci,e18n5;c3fu;b4c9n5ya0;cZgk2;c3g5ji,t2Q;j17qu1sh16zh2;i6uc5;ha0;a6n5uyi0;di,gt2Lh1Gi0pu,t2Lx13ya0;m17n5;!g5ni0t0Eya0;t1ya0;aBe9u5;h6so0w1Cx5zh2;i,ue;a5u;i,n;i0Hn5;sh1zh2;fang5nxi1;di1;a8i6ong5;chuans0XhDli02sh1;an5eli0;j4sh10;i6ng5;gu,sh1;an,hec1Wyu1zh2;anmi0hAi8u5;i5zh2;h5zh2;ua;c5pi0;hu1;a7en6i5uangya14;jiaz15qi,y1;gli,ya0zh0G;n6o5s0I;gu1xi0;g5t2;h1Pqiu,rKyu;i5uan1J;aFn5o14qih1Y;g5huangdH;dGh1L;an0Ting7rc,u5;ti1yang5;! H;ding0QxZ;an5eijYingbo;ch5ji0ni0to0ya0;a0o0;entoug2ianRuda5;njU;aEi8u5;anc3o6qi5;ao;he,ya0;a7jPn5upansh02;fTxia 5yi;chengguanI;n0Do5;c3y5;a0u1;i0Wn5ohek2;g5zh2;fa0;ai6un5;mi0sh1;fe0yu1;'1aAe9l4n6u5xi;jCt0U;an,c3g5i0zh2;de5li0zh2;zhE;ya0;musi,n8o5xi0;j6z5;uo;ia0;g5shG;m7xi;aGeCkt,oBu5;a6i0Dlan ergi,m5n1;en;i7ng5y4;ga0s5;hi;'1b9n1;hhot,ng ko0;bi,f7ga0ng5ze;sh5ya0;ui;ei;i7n5rb4;d1g5;u,zh2;c3k2l0F;a9u5;an6i5li;l4ya0zh2;g5k2;do0yu1zh2;nsu,opi0;en7o6u5;ji1shQx4zh2;sh1;d2g5;hua0;a6eNong5;gu1hR;d6lian5ndo0qi0to0;!g;o5uk2;nghN;angHh5n,st,t;aAen7i5n,oZuG;fe0na5;! time;g5zh2;d5zho0;e,u;ng6o5;ya0zh2;ch7de,sh6zh5;i,ou;a,u;un;zh2;a9e5;i6n5;gbu,xi;'1h5ji0;ai;i7o5yan nur;di0t2;ou;c3sh1y4;an;he0;nDsia5;!/5;ch8harb4kashg6u5;rumqi;ar;in;o5ungki0;ng5;qi0;da,qi0sh5ya0;an,un;ng\", \"China\", \"n\"],\n    \"Singapore\": [\"true¦asia,kuala lumpur,s0woodlands;g0ingapore;!p,t\", \"Singapore\", \"s\"],\n    \"Srednekolymsk\": [\"true¦asia,chokurdakh,sre0;dnekolymsk,t\", \"Srednekolymsk\", \"n\"],\n    \"Taipei\": [\"true¦asia,banqiao,cst,h7k5roc,t0;a1w0;!n;i0oyu1;ch2n0pei,w0;an;aohsi0eel0;ung;sinchu,ualien\", \"Taipei\", \"n\"],\n    \"Tashkent\": [\"true¦a3namangan,qo`q4tashkent,uz0;!b0t;!ekistan0;! east;ndij0sia;on\", \"Uzbekistan\", \"n\"],\n    \"Tbilisi\": [\"true¦asia,ge1kuta0tbil0;isi;!o0t;!rgia0;!n\", \"Georgia\", \"n\"],\n    \"Tehran\": [\"true¦aQbMgorgWhamViKkCmaBn8orumiy7pasragad branch,q4rasht,s2t1varam6yazd,za0;hedVnjV;abHehrU;a0hirRirjT;bzevar,nandEri,v3;a0om;rchak,zv0;in;eh;a0eyshabur;jaf0zar0;ab4;layer,shh3;a4erman3ho0;meyni sDrram0wy;ab0sC;ad;!shah;h1r0;aj;riz;r0sfahB;!an,dt,n,st;a2irjand,o0uk9;jnu0ruje0;rd;b3ndar abbas;b4hv3m2r1sia,zads0;hahr;ak,dabil;ol;az;ad0;an\", \"Iran\", \"n\"],\n    \"Thimphu\": [\"true¦asia2b0thimphu;hutan,t0;!n;!/thimbu\", \"Bhutan\", \"n\"],\n    \"Tokyo\": [\"true¦0:11;1:1A;2:10;a18ch16fu0Zgifu14h0Oi0Ij0FkZmTnMoKsFt9u8waka05y3;a6o3;k3no;kaic1Co3;ha2su0;maKo;ji,tsun0F;aka7o3sukuba;k5makom05y3;a2o3;hOna0ta;oro03us0Qyo;m0Jrazu0sa1tsu1;a5end00hi4o0u3;i10zu0;monose1zuo0;ita2k3ppoLsebo;ai,u06;dawa05i0Wka3sa0t0E;ya2za1;a6eyaga0Qi3umazu;i4shi3; tokyo0Inomiya ha2;ga0R;g3ha,ra0G;a3oX;no,o0sa1;a5i3orio0;na3to,yaza1;mirinkOto;chiDeb4tsu3;do,m8ya2;as0J;aBi9o7u3y6;mam5r4shi3;ro;ashi1e,ume;oto;be,c0Dfu,ri3shigaK;ya2;shiwa3takyushu;da;gosVkogawacho honmKmirenjaku,na8s5wa3;g3sa1;oe,uc07;hi01u3;g3kabe;ai;zaY;ap4dt,oetJp3st;!n;an;bara1chi4ta3wa1zu3;mi;ha5n3;omi3;ya;ra;a8i3oncho;meBr4t3;acR;a4os3;a1hi2;kaNtsu0;chi5kodate,mam3;at3;su;nohe,o3;ji;ji8ku3;i6o0s3ya2;hi2;ma;ka; sD;!sa7;i3ofu;ba,g6;geoshimo,k7mag5njo,omori,s3tsugi;ahika3ia;wa;asa1;ki;as4i3;ta;hi\", \"Japan\", \"n\"],\n    \"Tomsk\": [\"true¦asia,oms0tomsk;k,t\", \"Omsk\", \"n\"],\n    \"Ulaanbaatar\": [\"true¦asia3m1ula0;anbaatar,n 3t;n0ongolia;!g;!/ulan_0;bator\", \"Ulaanbaatar\", \"n\"],\n    \"Ust-Nera\": [\"true¦asia,ust-nera,vla0;divostok,t\", \"Vladivostok\", \"n\"],\n    \"Vladivostok\": [\"true¦asia,k1vla0;divostok,t;habarovsk0omsomolsk on amur;! vtoroy\", \"Vladivostok\", \"n\"],\n    \"Yakutsk\": [\"true¦asia,blagoveshchen1yak0;t,ut0;sk\", \"Yakutsk\", \"n\"],\n    \"Yangon\": [\"true¦asia4b3kyain seikgyi township,m0nay pyi taw,pathein,sittwe,yang5;a1eiktila,m0onywa;!r,t;ndalay,wlamyine;ago,urma;!/rango0;on\", \"Myanmar\", \"n\"],\n    \"Yekaterinburg\": [\"true¦asia,chelyabin7eka5k4magnitogor7nizhn3or2perm,s1tyumen,ufa,yek0zlatoust;a4t;terlitamak,urgut;e3sk;evartov3y tagil;amensk ural'skiy,urgan;teri0;nburg;sk\", \"Yekaterinburg\", \"n\"],\n    \"Yerevan\": [\"true¦a0caucasus,yerevan;m2rm0s1;!en0;ia;!t\", \"Armenia\", \"n\"]\n  },\n  \"Atlantic\": {\n    \"Azores\": [\"true¦a0hmt;tlantic,zo0;res,st,t\", \"Azores\", \"n\", \"eu0\"],\n    \"Bermuda\": [\"true¦a2b0;ermuda,m0;!u;st,t0;!lantic\", \"Atlantic\", \"n\", \"usa\"],\n    \"Canary\": [\"true¦atlantic,canary1europe western,las palmas de gran canaria,santa cruz de tenerife,we0;stern european,t;! islands\", \"Western European\", \"n\", \"eu1\"],\n    \"Cape_Verde\": [\"true¦atlantic,c0;a1pv,v0;!t;bo verde0pe verde;! is\", \"Cape Verde\", \"n\"],\n    \"Faroe\": [\"true¦atlantic2f0;aroe0o,ro;! islands;!/faeroe\", \"Western European\", \"n\", \"eu1\"],\n    \"Madeira\": [\"true¦atlantic,europe western,madeira1we0;stern european,t;! islands\", \"Western European\", \"n\", \"eu1\"],\n    \"Reykjavik\": [\"true¦atlantic,coordinated universal3g2i0reykjavik,utc,zulu;celand,s0;!l;mt,reenwich mean0; time\", \"Greenwich Mean\", \"n\"],\n    \"South_Georgia\": [\"true¦atlantic,gs1s0;gs,outh georgia;!t\", \"South Georgia\", \"n\"],\n    \"Stanley\": [\"true¦atlantic,f0stanley;alkland1k0lk;!st,t;! island0;!s\", \"Falkland Islands\", \"s\"]\n  },\n  \"Australia\": {\n    \"Adelaide\": [\"true¦a2cen0south 1; 0tral 0;australia;c2delaide,ustralia0;! 0/south,n 0;central;dt,st,t\", \"Central Australia\", \"s\", \"aus\"],\n    \"Brisbane\": [\"true¦a1brisbane0gold coast,logan,q4townsville;! time;e3ustralia0;!/q1n east0;!ern;ueensland;dt,st\", \"Brisbane\", \"s\"],\n    \"Broken_Hill\": [\"true¦a1broken_hill,cen0y3; australia standard time,tral australia;c2delaide,ustralia0;! central,/y0;ancowinna;st,t\", \"Central Australia\", \"s\", \"aus\"],\n    \"Darwin\": [\"true¦a0darwin,northern territory;cst,ustralia0;!/north,n central\", \"Australian Central\", \"s\"],\n    \"Eucla\": [\"true¦a0cw4eucla;cw4us0; central w1tralia0;!n central western;!e0;st;dt,st,t\", \"Australian Central Western\", \"s\"],\n    \"Hobart\": [\"true¦a0canberra,eastern austral5hobart,king island,melbourne,sydney,t4;e8us0; east5tralia0;! 3/0n 3;currie,t0;asman0;ia;easte1;!e0;rn;st,t\", \"Eastern Australia\", \"s\", \"aus\"],\n    \"Lindeman\": [\"true¦a0brisbane time,lindeman,whitsunday islands;est,ustralia0;!n eastern\", \"Brisbane\", \"s\"],\n    \"Lord_Howe\": [\"true¦australia3l0;h1ord howe0;! island;dt,st,t;!/lhi\", \"Lord Howe\", \"s\", \"lhow\"],\n    \"Melbourne\": [\"true¦a0canberra,eastern austral4geelong,melbourne,sydney,v3;e7us0; east4tralia0;! 2/v0n 2;ictor0;ia;easte1;!e0;rn;st,t\", \"Eastern Australia\", \"s\", \"aus\"],\n    \"Perth\": [\"true¦a4perth,w0; 2est0; 1ern australia0;! time;australia;ustralia1w0;dt,st,t;! weste1/west,n west0;!e0;rn\", \"Western Australia\", \"s\"],\n    \"Sydney\": [\"true¦a0c5eastern australia time,melbourne,new south wales,sydney,wollongong;e8u0;!s0;! east4tralia0;! 2/0n 2;act,c0nsw;anberra;easte1;!e0;rn;st,t\", \"Eastern Australia\", \"s\", \"aus\"]\n  },\n  \"Etc\": {\n    \"GMT\": [\"true¦coordinated universal3etc2g0utc,zulu;mt,reenwich0;! mean1;!/greenwich; time\", \"Greenwich Mean\", \"n\"],\n    \"UTC\": [\"true¦coordinated universal7etc2g1u0z4;ct,n5tc;mt,reenwich mean5;!/0;u1z0;ulu;ct,n0;iversal; time\", \"Greenwich Mean\", \"n\"]\n  },\n  \"Europe\": {\n    \"Amsterdam\": [\"true¦a9brussels,c6e4groning7madrid,n2paris,ro1t0utrecht;he hague,ilburg;mance,t9;etherlands,l0;!d;indhov2urope0;! central;e1openhag0;en;ntral european,st,t;lmere stad,m0;s0t;terdam\", \"Central European\", \"n\", \"eu2\"],\n    \"Andorra\": [\"true¦a3brussels,c1europe0madrid,paris,romance;! central;e0openhagen;ntral european,st,t;d,nd0;!orra\", \"Central European\", \"n\", \"eu2\"],\n    \"Astrakhan\": [\"true¦astrakh1europe,m0russi1st petersburg,volgograd time;oscow,sk;an\", \"Moscow\", \"n\"],\n    \"Athens\": [\"true¦athens,e1gr0thessaloniki;!c,eece;astern european,et,urope0;! eastern\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Belgrade\": [\"true¦b9c7europe3madrid,n2p1romance,s0;i,lovenia,vn;aris,risti4;is,ovi sad;! central,/0;ljublja1podgorica,s0zagreb;arajevo,kopje;na;e0openhagen;ntral european,st,t;elgrade,russels\", \"Central European\", \"n\", \"eu2\"],\n    \"Brussels\": [\"true¦antwerp6b3c1europe0gent,liege,madrid,paris,romance;! central;e0harleroi,openhag4;ntral european,st,t;e0mt,russels;!l0;!gium;en\", \"Central European\", \"n\", \"eu2\"],\n    \"Bucharest\": [\"true¦b5c4e2gala1iasi,oradea,ploies1ro0timisoara;!mania,u;ti;astern european,et,urope0;! eastern;luj napoca,onstanta,raiova;ra0ucharest;ila,sov\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Budapest\": [\"true¦b6c3debrec4europe2hu0madrid,paris,romance;!n0;!gary;! central;e1openhag0;en;ntral european,st,t;russels,udapest\", \"Central European\", \"n\", \"eu2\"],\n    \"Busingen\": [\"true¦b5c3de2europe1germa0madrid,paris,romance,saxo0;ny;! central,/berlin;!u;e0openhag3;ntral european,st,t;avaria,r0using1;em0ussels;en\", \"Central European\", \"n\", \"eu2\"],\n    \"Chisinau\": [\"true¦chisinau,e2m0;d0oldova;!a;astern european,et,urope0;! eastern,/tiraspol\", \"Eastern European\", \"n\", \"eu2\"],\n    \"Copenhagen\": [\"true¦arhus,brussels,c2d1europe0madrid,paris,romance;! central;enmark,k,nk;e0mt,openhagen;ntral european,st,t\", \"Central European\", \"n\", \"eu2\"],\n    \"Dublin\": [\"true¦ace,british8cork,d7e6g5i3l0tse,waterford;i0ond1;merick,sb0;on;e,r0st;eland,l;alway,mt,reenwich mean2;dinburgh,ire,urope;mt,ublin; time\", \"Irish\", \"n\", \"eu1\"],\n    \"Gibraltar\": [\"true¦b5c3europe2gi0madrid,paris,romance;!b0;!raltar;! central;e0openhagen;ntral european,st,t;dst,russels,st\", \"Central European\", \"n\", \"eu2\"],\n    \"Helsinki\": [\"true¦e3fi1helsinki,t0vantaa;ampere,urku;!n0;!land;astern european,et,spoo,urope0;! eastern,/mariehamn\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Istanbul\": [\"true¦aYbScQdOeKgJiHkFmBosmAs4t1u0v07zeytinburnu;eskuedWmr9;arsus,r1ur0;!kZ;!abzon,t;a3i1ultan0;beyJgazi;sIv0;as,erek;msun,n0;cakteBliurfa;aniye;a1er0uratpaH;kezefendi,sin;l0niF;atQte6;a0irikkale,onPutahP;hramanmaras,rabaglGyseS;sJzmi0;r,t;aziantep,ebze;lazig,rzurum,s1uro0;pe;en0kiC;l8yurt;eniz0iyarbakB;li;ankaEor0;lu,um;a1ur0;sa;gcil2hcelievl1likes5sak4t0;ikent,mB;er;ar;d7n4rnavutko3sia/is2ta0;seh0;ir;tanbul;ey;kara,ta0;k0l0;ya;a1iyam0;an;na,paza0;ri\", \"Turkey\", \"n\"],\n    \"Kaliningrad\": [\"true¦e0kaliningrad;astern european,et,urope\", \"Eastern European\", \"n\"],\n    \"Kiev\": [\"true¦bila tserkLcherIdGeDhorlCivano frankivHk8l7m5odessa,poltaLriv4sumy,ternopil,u2vinnyts1z0;aporizhzh0hytomyr;ya;a,kr0;!ai0;ne;a0ykolayE;ki5riu8;ut9vC;amyanske,h1iev,r0yB;emenchuk,opyv1yvyy rih;ark9erson,mel0;nytskyy;ivka;astern european,et,urope0;! eastern,/simfero0;pol;nipro,onet0;sk;kasy,ni0;h0vtsi;iv;va\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Kirov\": [\"true¦europe,kirov,m0russian,st petersburg,volgograd time;oscow,sk\", \"Moscow\", \"n\"],\n    \"Lisbon\": [\"true¦amadora,europe5lisbon,p2we0;st0t;! europe,ern european;ort0rt,t;o,ugal0;! mainland;! western\", \"Western European\", \"n\", \"eu1\"],\n    \"London\": [\"true¦a0Ob0Ac07d03eXgThRiOj00kingston upon hull,lJmHnBoxSp9reading,s1w0yF;arwick0Aig00olverha7;heffield,o3t2u1w0;an4iH;ffolk,nderland,rr0IsYttL;afNoke on tre0C;meZuth0;a1end on 0;sea;mptG;ly0orts0restF;mouth;ew4o0;r0ttinghamT;th0wC; y0amptonR;orkV;castle upon tyne,port;ancheQi0;dlan4lton keynes;ancaRdn,e2i1o0ut5;nd4;ncolnPsb3verW;e0icesterJ;ds;psw1slingt0;on;ich;ampJert0;fordI;b2l1mt0reenwich mean M;! standard L;asgow,oucesterF;!-eF;dinburgh,s4urope0;!/0;belNguernsMisle_of_m1j0;ersL;an;sex;erby2o1u0;blin,dlH;rset;!sh5;a1ity of westmin0oventry,rawlE;ster;mbridge1rdiff;eAir9lack7r2st,uckingham0;sh0;ire;adford,e3i0;st4tish0;! 0;time;nt;po0;ol;kenhead,mingham;l1xl0;ey;fast;berdeen,rchway\", \"British\", \"n\", \"eu1\"],\n    \"Luxembourg\": [\"true¦brussels,c3europe2lu0madrid,paris,romance;!x0;!embourg;! central;e0openhagen;ntral european,st,t\", \"Central European\", \"n\", \"eu2\"],\n    \"Madrid\": [\"true¦aRbOcJeGfuenDgCjerez de la frontera,lBm8ovieFp6romance,s1terrassa,v0wemt,zaragoza;alladol9igo;a1evilla,pain0;! mainland;badell,n0; sebastiHt0; marti,ander,s montjuic;a0uente de vallecas;lma,mpIris;a0ostolLurcK;dr0laga;id;atiJeganI;asteiz/vitorGijon,ran1;carral el par1labr0;ada;do;ixample,lche,s1urope0;! centr2;!p;a3e1iudad line0openhagen;al;ntral europe0st,t;an;rabanchel,stello de la pla7;a0ilbao,russels,urgos;da0rce0sque;lo4; coru3l0;cala de henar1icante,mer0;ia;es;na\", \"Central European\", \"n\", \"eu2\"],\n    \"Malta\": [\"true¦brussels,c3europe2m0paris,romance;a0lt,t;drid,lta;! central;e0openhagen;ntral european,st,t\", \"Central European\", \"n\", \"eu2\"],\n    \"Minsk\": [\"true¦b4europe,h3m1russian,st petersburg,v0;iteb4olgograd time;ahily0in3osc0sk;ow;omyel,rodna;abruy0elarus,lr,rest,y;sk\", \"Moscow\", \"n\"],\n    \"Monaco\": [\"true¦brussels,c3europe2m0paris,romance;adrid,c0onaco;!o;! central;e0openhagen;ntral european,st,t\", \"Central European\", \"n\", \"eu2\"],\n    \"Moscow\": [\"true¦ar0Db0Ac07dzerzh06europe,fet,grozn05ivano04kYlipet0FmRnNorel,pKrFs8t6v2w-su,y0zelenograd;a0oshkar oW;roslavl,sene02;asyl'evsky ostrIelikiMladi2o0ykhino zhulebT;l0ronezh;gograd Pogda;kavkaz,m08;a0uQver;ganrog,mbD;a4ever3hakhty,molen06ochi,t0yktyvkR; 4a0;ryy osk0vrop0;ol;nSodvT;int 0rX;petersburg;ostov na donu,u1y0;azLbP;!s0;!sia0;!n;e1odolUsk0;ov;nza,trozavodS;a2izhn0ovorossiyR;ekamQi0;y novM;berezhnyye chelny,l'chik;a3dst,oscow1s0urmJ;d,k;! 0;time;khachka1r'0;ino;la;a2himki,ostroma,rasno0urG;d0gvargeisky;ar;l1z0;an;ininsk5uga;vo;yy;in8;entraln1he0;boksary,repovets;iy;el1ry0;an3;gorod;khangel'1mav0;ir;sk\", \"Moscow\", \"n\"],\n    \"Oslo\": [\"true¦a6b5c3europe2madrid,oslo,paris,romance,s0;j0valbard and jan 6;!m;! central;e0openhag4;ntral european,st,t;erg2russels;rctic/longyearby1tlantic/jan_0;may0;en\", \"Central European\", \"n\", \"eu2\"],\n    \"Paris\": [\"true¦bIcFeuropeEfrBl9m7n5paris,r3s0toulouH;aint 1t0; 0rasbourg;etienne;e0oman9;ims,nn1;ant0i7ormandy;es;a0et,ontpellier;drid,rsei1;e havre,i0yon;lle;!a0;!n0;ce;! central;e0openhagen;ntral european,rgy pontoi0st,t;se;ordeaux,russels\", \"Central European\", \"n\", \"eu2\"],\n    \"Prague\": [\"true¦br6c4europe2madrid,ostr3p1romance,s0;k,lovakia,vk;aris,mt,rague;! central,/bratisl0;ava;e0openhagen;ntral european,st,t;no,ussels\", \"Central European\", \"n\", \"eu2\"],\n    \"Riga\": [\"true¦e2kalt,l0riga;atvia,st,v0;!a;ast2e1urope0;! eastern;st,t; europe,ern european\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Rome\": [\"true¦bIcEeuropeCfloreBgenoa,mAnaples,p7r5sicily,t3v0;a0eroK;!t0;!ican city;aran4rieste,u0;rin,scany;mt,om0;a4e;a1ra0;to;dova,lermo,ris;adrid,essiAil6;nce;! central,/0;san_marino,vatic3;atan5e1o0;penhagen,rsica;ntral europe0st,t;an;ari,olog2r0;esc0ussels;ia;na\", \"Central European\", \"n\", \"eu2\"],\n    \"Samara\": [\"true¦europe,izhevsk,s0togliatti on the volga;am0yzran;ara,t\", \"Samara\", \"n\"],\n    \"Saratov\": [\"true¦balakovo,europe,izhevsk,sa0;m0ratov;ara,t\", \"Samara\", \"n\"],\n    \"Sofia\": [\"true¦b2e0imt,plovdiv,sof4varna;astern european,et,urope0;! eastern;g2u0;lgar0rgas;ia;!r\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Stockholm\": [\"true¦brussels,c5europe4goeteborg,ma3paris,romance,s0;e1tockholm,we0;!d4;!t;drid,lmoe;! central;e1openhag0;en;ntral european,st,t\", \"Central European\", \"n\", \"eu2\"],\n    \"Tallinn\": [\"true¦e0tallinn;astern european,e2st1urope0;! eastern;!onia;!t\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Tirane\": [\"true¦al4brussels,c2europe1madrid,paris,romance,tiran0;a,e;! central;e0openhagen;ntral european,st,t;!b0;!ania\", \"Central European\", \"n\", \"eu2\"],\n    \"Ulyanovsk\": [\"true¦europe,m0russian,st petersburg,ulyanovsk,volgograd 2;oscow0sk;! 0;time\", \"Moscow\", \"n\"],\n    \"Uzhgorod\": [\"true¦e0ruthenia,uzhgorod;astern european,et,urope0;! eastern\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Vienna\": [\"true¦a4brussels,c1donaustadt,europe0favorit2graz,linz,madrid,paris,romance,vienna;! central;e1openhag0;en;ntral european,st,t;t,u0;stria,t\", \"Central European\", \"n\", \"eu2\"],\n    \"Vilnius\": [\"true¦e3k2l0vilnius;ithuania,t0;!u;aunas,laipeda;astern european,et,urope0;! eastern\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Volgograd\": [\"true¦europe,m2russian,st petersburg,vol0;gograd0t,zhskiy;! time;oscow,sk\", \"Moscow\", \"n\"],\n    \"Warsaw\": [\"true¦bKcHeuropeGgCkAl8m7p4r3s2torun,w0zabrze;ars0rocl0;aw;osnowiec,zczec6;adIomanA;aris,l,o0raga poludnie;l0znD;!and;adrid,okot3;odz,ubl0;in;ato2iel3rak0;ow;d2li0;wi0;ce;ansk,ynia;! central;e0openhagen,zestochowa;ntral europe0st,t;an;i2russels,y0;dgoszcz,t0;om;alystok,elsko biala\", \"Central European\", \"n\", \"eu2\"],\n    \"Zaporozhye\": [\"true¦e3luhansk2sevastopol,zapor0;izhia lugansk,ozh0;'ye,ye;! east;astern european,et,urope0;! eastern\", \"Eastern European\", \"n\", \"eu3\"],\n    \"Zurich\": [\"true¦brussels,c4europe2geneve,li0madrid,paris,romance,swiss time,zurich;!e0;!chtenstein;! central,/0;busin1vaduz;e1openha0;gen;ntral european,st,t\", \"Central European\", \"n\", \"eu2\"]\n  },\n  \"Indian\": {\n    \"Chagos\": [\"true¦british indian ocean territory,c4i0;ndian1o0;!t;! 0;c0ocean;hagos\", \"Indian Ocean\", \"n\"],\n    \"Christmas\": [\"true¦c0indian;hristmas1x0;!r,t;! island\", \"Christmas Island\", \"s\"],\n    \"Cocos\": [\"true¦c0indian;c2ocos0;! island0;!s;!k,t\", \"Cocos Islands\", \"n\"],\n    \"Kerguelen\": [\"true¦a5french southern2indian,kerguelen1tf0;!t;!st paul4;! 0;& antarctic time,and antarctic0;! lands;msterdam0tf; island\", \"French Southern & Antarctic\", \"s\"],\n    \"Mahe\": [\"true¦indian,mahe,s0;c0eychelles,yc;!t\", \"Seychelles\", \"n\"],\n    \"Maldives\": [\"true¦indian,m0;aldives,dv,v0;!t\", \"Maldives\", \"n\"],\n    \"Mauritius\": [\"true¦indian,m0port louis;auritius,u0;!s,t\", \"Mauritius\", \"n\"],\n    \"Reunion\": [\"true¦indian,r0;e0éu1;t,u0;nion\", \"Réunion\", \"s\"]\n  },\n  \"Pacific\": {\n    \"Apia\": [\"true¦apia,pacific,s2w0;est s1s0;!m,t;amoa\", \"West Samoa\", \"s\"],\n    \"Auckland\": [\"true¦a2christchurch,manukau,n0pacific,wellington;ew zea2orth shore,z0;!dt,l,mt,st,t;ntarctica/1uck0;land;mcmurdo,south_pole\", \"New Zealand\", \"s\", \"nz\"],\n    \"Bougainville\": [\"true¦bougainville,guinea2p0;a0gt;cific,pua new guinea;!n\", \"Papua New Guinea\", \"s\"],\n    \"Chatham\": [\"true¦cha0nz-chat,pacific;dt,st,t0;!ham0;! 0;islands,time\", \"Chatham\", \"s\", \"chat\"],\n    \"Chuuk\": [\"true¦chu2pacific0;!/0;truk,y2;t,uk0;!/truky0;ap\", \"Chuuk\", \"n\"],\n    \"Easter\": [\"true¦chile/easter4e0pacific;as0mt;st,t0;!er0;! 0;island\", \"Easter Island\", \"s\", \"east\"],\n    \"Efate\": [\"true¦efate,pacific,v0;anuatu,u0;!t\", \"Vanuatu\", \"n\"],\n    \"Fakaofo\": [\"true¦fakaofo,pacific,t0;k0okelau;!l,t\", \"Tokelau\", \"n\"],\n    \"Fiji\": [\"true¦f0pacific;iji,j0;!i,st,t\", \"Fiji\", \"s\", \"fiji\"],\n    \"Funafuti\": [\"true¦funafuti,pacific,t0;uv1v0;!t;!alu\", \"Tuvalu\", \"n\"],\n    \"Galapagos\": [\"true¦co1gal0pacific;apagos,t,ápagos islands;lombia,st,t\", \"Colombia\", \"n\"],\n    \"Gambier\": [\"true¦gam0pacific;bier0t;! islands\", \"Gambier\", \"n\"],\n    \"Guadalcanal\": [\"true¦guadalcanal,pacific,s0;b1lb,olomon0;! islands;!t\", \"Solomon Islands\", \"n\"],\n    \"Guam\": [\"true¦ch5guam,m4northern mariana islands,p2west0; 0ern 0;pacific;acific0ort moresby;!/saipan;np,p;amorro,st\", \"Chamorro\", \"n\"],\n    \"Honolulu\": [\"true¦aleutian4h1pacific0us/hawaii;!/johnston;a0onolulu,st;dt,st,t,waii0;! aleutian;! islands\", \"Hawaii-Aleutian\", \"n\"],\n    \"Kanton\": [\"true¦kanton,p0;acific1ho0;enix islands,t;!/enderbury\", \"Phoenix Islands\", \"n\"],\n    \"Kiritimati\": [\"true¦ki1lin0pacific;e islands,t;!r0;!i0;bati,timati0;! island\", \"Line Islands\", \"n\"],\n    \"Kosrae\": [\"true¦kos0pacific;rae,t\", \"Kosrae\", \"n\"],\n    \"Kwajalein\": [\"true¦kwajalein,m0pacific;arshall islands,ht\", \"Marshall Islands\", \"n\"],\n    \"Majuro\": [\"true¦m0pacific;a1h0;!l,t;juro,rshall islands\", \"Marshall Islands\", \"n\"],\n    \"Marquesas\": [\"true¦mar0pacific;quesas0t;! islands\", \"Marquesas\", \"n\"],\n    \"Nauru\": [\"true¦n0pacific;auru,r0;!t,u\", \"Nauru\", \"n\"],\n    \"Niue\": [\"true¦n0pacific;iu1u0;!t;!e\", \"Niue\", \"n\"],\n    \"Norfolk\": [\"true¦n0pacific;f1orfolk0;! island;!dt,k,t\", \"Norfolk Island\", \"n\", \"aus\"],\n    \"Noumea\": [\"true¦n0pacific;c0ew caledonia,oumea;!l,t\", \"New Caledonia\", \"n\"],\n    \"Pago_Pago\": [\"true¦m5pa1s0us/sa4;a3st;cific0go_pago;!/0;m1sa0;moa;idway\", \"Samoa\", \"n\"],\n    \"Palau\": [\"true¦p0;a1lw,w0;!t;cific,lau\", \"Palau\", \"n\"],\n    \"Pitcairn\": [\"true¦p0;acific,cn,itcairn,n,st\", \"Pitcairn\", \"n\"],\n    \"Pohnpei\": [\"true¦french polynesia,p0;acific1f,o0yf;hnpei0nt;!/ponape\", \"Ponape\", \"n\"],\n    \"Port_Moresby\": [\"true¦antarctica/dumontd6dumont-d'6guinea5p0;a3g2ng,ort0; 0_0;moresby;!t;cific,pua new guinea;!n;urville\", \"Papua New Guinea\", \"s\"],\n    \"Rarotonga\": [\"true¦c0pacific,rarotonga;k2o0;k,ok0;! islands;!t\", \"Cook Islands\", \"n\"],\n    \"Tahiti\": [\"true¦pacific,society islands,tah0;iti,t\", \"Tahiti\", \"n\"],\n    \"Tarawa\": [\"true¦gil0pacific,tarawa;bert islands,t\", \"Gilbert Islands\", \"n\"],\n    \"Tongatapu\": [\"true¦nuku'alofa,pacific,to0;!n0t;!ga0;!tapu\", \"Tonga\", \"s\"],\n    \"Wake\": [\"true¦pacific,u2wak0;e0t;! island;m0s minor outlying islands;!i\", \"Wake Island\", \"n\"],\n    \"Wallis\": [\"true¦pacific,w0;allis1f0lf;!t;! 0;&0and0; futuna\", \"Wallis & Futuna\", \"n\"]\n  }\n};\n\n// strings that don't pack properly\nvar misc = {\n  'gmt+0': ['Etc/GMT'],\n  'gmt-0': ['Etc/GMT'],\n  gmt0: ['Etc/GMT'],\n  'etc/gmt+0': ['Etc/GMT'],\n  'etc/gmt-0': ['Etc/GMT'],\n  'etc/gmt0': ['Etc/GMT'],\n  'msk+00': ['Europe/Moscow'],\n  'msk-01 - kaliningrad': ['Europe/Kaliningrad'],\n  'msk+00 - moscow area': ['Europe/Moscow'],\n  'msk+00 - crimea': ['Europe/Kiev'],\n  'msk+00 - volgograd': ['Europe/Volgograd'],\n  'msk+00 - kirov': ['Europe/Kirov'],\n  'msk+01 - astrakhan': ['Europe/Astrakhan'],\n  'msk+01 - saratov': ['Europe/Saratov'],\n  'msk+01 - ulyanovsk': ['Europe/Ulyanovsk'],\n  'msk+01 - samaraudmurtia': ['Europe/Samara'],\n  'msk+02 - urals': ['Asia/Yekaterinburg'],\n  'msk+03': ['Asia/Omsk'],\n  'msk+04 - novosibirsk': ['Asia/Novosibirsk'],\n  'msk+04 - altai': ['Asia/Barnaul'],\n  'msk+04': ['Asia/Tomsk'],\n  'msk+04 - kemerovo': ['Asia/Novokuznetsk'],\n  'msk+04 - krasnoyarsk area': ['Asia/Krasnoyarsk'],\n  'msk+05 - irkutskburyatia': ['Asia/Irkutsk'],\n  'msk+06 - zabaykalsky': ['Asia/Chita'],\n  'msk+06 - lena river': ['Asia/Yakutsk'],\n  'msk+06 - tomponskyust-maysky': ['Asia/Khandyga'],\n  'msk+07 - amur river': ['Asia/Vladivostok'],\n  'msk+07 - oymyakonsky': ['Asia/Ust-Nera'],\n  'msk+08 - magadan': ['Asia/Magadan'],\n  'msk+08 - sakhalin island': ['Asia/Sakhalin'],\n  'msk+08 - sakha (e) north kuril is': ['Asia/Srednekolymsk'],\n  'msk+09': ['Asia/Kamchatka'],\n  'msk+09 - bering sea': ['Asia/Anadyr'],\n  \"russia time zone 11\": [\"Asia/Anadyr\"],\n  \"russia time zone 10\": [\"Asia/Srednekolymsk\"],\n  \"russia time zone 3\": [\"Europe/Samara\"],\n  \"coordinated universal time-09\": [\"Pacific/Gambier\"],\n  \"utc-09\": [\"Pacific/Gambier\"],\n  \"coordinated universal time-08\": [\"Pacific/Pitcairn\"]\n};\nconst addEtc = function (zones) {\n  for (let i = 0; i <= 14; i += 1) {\n    zones[`Etc/GMT-${i}`] = {\n      offset: i,\n      meta: `gmt-${i}`,\n      hem: 'n' //sorry\n    };\n\n    zones[`Etc/GMT+${i}`] = {\n      offset: i * -1,\n      meta: `gmt+${i}`,\n      hem: 'n' //sorry\n    };\n  }\n};\n\nvar addUTC = addEtc;\n\n// unpack our lexicon of words\nlet zones = {};\nlet lexicon = Object.assign({}, misc);\nObject.keys(pcked).forEach(top => {\n  Object.keys(pcked[top]).forEach(name => {\n    let [words, meta, hem, dst] = pcked[top][name];\n    let id = `${top}/${name}`;\n    zones[id] = {\n      meta,\n      hem\n    };\n    let keys = Object.keys(unpack$1(words));\n    keys.forEach(k => {\n      lexicon[k] = lexicon[k] || [];\n      lexicon[k].push(id);\n      // use iana aliases\n      if (k.match(/\\//)) {\n        let arr = k.split(/\\//);\n        let last = arr[arr.length - 1].toLowerCase();\n        lexicon[last] = lexicon[last] || [];\n        lexicon[last].push(id);\n      }\n    });\n    zones[id].wordCount = keys.length;\n    if (dst) {\n      zones[id].dst = dstPatterns[dst].split(/\\|/);\n    }\n  });\n});\naddUTC(zones);\nconst unique = function (arr) {\n  let obj = {};\n  for (let i = 0; i < arr.length; i += 1) {\n    obj[arr[i]] = true;\n  }\n  return Object.keys(obj);\n};\n\n// sort by num of aliases\nObject.keys(lexicon).forEach(k => {\n  if (lexicon[k].length > 1) {\n    lexicon[k] = unique(lexicon[k]);\n    lexicon[k] = lexicon[k].sort((a, b) => {\n      if (zones[a].wordCount > zones[b].wordCount) {\n        return -1;\n      } else if (zones[a].wordCount < zones[b].wordCount) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n});\n\n// console.log(zones['Etc/GMT+4'])\n\n//try to match these against iana form\nconst one = str => {\n  str = str.toLowerCase();\n  str = str.replace(/^in /g, '');\n  str = str.replace(/ time/g, '');\n  str = str.replace(/ (standard|daylight|summer)/g, '');\n  str = str.replace(/ - .*/g, ''); //`Eastern Time - US & Canada`\n  str = str.replace(/, .*/g, ''); //`mumbai, india`\n  str = str.replace(/\\./g, ''); //st. petersberg\n  return str.trim();\n};\n\n//some more aggressive transformations\nconst two = function (str) {\n  str = str.replace(/\\b(east|west|north|south)ern/g, '$1');\n  str = str.replace(/\\b(africa|america|australia)n/g, '$1');\n  str = str.replace(/\\beuropean/g, 'europe');\n  str = str.replace(/\\islands/g, 'island');\n  str = str.replace(/.*\\//g, '');\n  return str.trim();\n};\n// even-more agressive\nconst three = function (str) {\n  str = str.replace(/\\(.*\\)/, ''); //anything in brackets\n  str = str.replace(/  +/g, ' '); //extra spaces\n  return str.trim();\n};\nvar normalize = {\n  one,\n  two,\n  three\n};\nconst isOffset = /^([-+]?[0-9]+)h(r?s)?$/i;\nconst isNumber = /^([-+]?[0-9]+)$/;\nconst utcOffset = /utc([\\-+]?[0-9]+)$/i;\nconst gmtOffset = /gmt([\\-+]?[0-9]+)$/i;\nconst toIana = function (num) {\n  num = Number(num);\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n    return 'Etc/GMT' + num;\n  }\n  return null;\n};\nconst parseOffset = function (tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset);\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset);\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset);\n  if (m !== null) {\n    let num = Number(m[1]) * -1;\n    return toIana(num);\n  }\n  // '+5'\n  m = tz.match(isNumber);\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n  return null;\n};\nvar parseOffset$1 = parseOffset;\n\n// match some text to an iana code\nconst find = function (str) {\n  // perfect id match\n  if (zones.hasOwnProperty(str)) {\n    return str;\n  }\n  // lookup known word\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str];\n  }\n  // -8hrs\n  if (/[0-9]/.test(str)) {\n    let etc = parseOffset$1(str);\n    if (etc) {\n      return [etc];\n    }\n  }\n  // try a sequence of normalization steps\n  str = normalize.one(str);\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str];\n  }\n  str = normalize.two(str);\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str];\n  }\n  str = normalize.three(str);\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str];\n  }\n  return null;\n};\nvar find$1 = find;\nvar metas = {\n  \"India\": {\n    \"std\": [\"IST\", 5.5],\n    \"long\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\"\n  },\n  \"China\": {\n    \"std\": [\"CST\", 8],\n    \"long\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"\n  },\n  \"Central European\": {\n    \"std\": [\"CET\", 1],\n    \"dst\": [\"CEST\", 2, \"Central European Summer Time\"],\n    \"long\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\"\n  },\n  \"Atlantic\": {\n    \"dupe\": true,\n    \"std\": [\"AST\", -4],\n    \"dst\": [\"ADT\", -3],\n    \"long\": \"(UTC-04:00) Atlantic Time (Canada)\"\n  },\n  \"Greenwich Mean\": {\n    \"std\": [\"GMT\", 0],\n    \"long\": \"(UTC) Coordinated Universal Time\"\n  },\n  \"Eastern European\": {\n    \"std\": [\"EET\", 2],\n    \"dst\": [\"EEST\", 3, \"Eastern European Summer Time\"]\n  },\n  \"Central\": {\n    \"dupe\": true,\n    \"std\": [\"CST\", -6],\n    \"dst\": [\"CDT\", -5],\n    \"long\": \"(UTC-06:00) Central Time (US & Canada)\"\n  },\n  \"Eastern\": {\n    \"std\": [\"EST\", -5],\n    \"dst\": [\"EDT\", -4],\n    \"long\": \"(UTC-05:00) Eastern Time (US & Canada)\"\n  },\n  \"Argentina\": {\n    \"std\": [\"ART\", -3],\n    \"long\": \"(UTC-03:00) City of Buenos Aires\"\n  },\n  \"East Africa\": {\n    \"std\": [\"EAT\", 3],\n    \"long\": \"(UTC+03:00) Nairobi\"\n  },\n  \"West Africa\": {\n    \"std\": [\"WAT\", 1],\n    \"long\": \"(UTC+01:00) West Central Africa\"\n  },\n  \"Moscow\": {\n    \"std\": [\"MSK\", 3],\n    \"long\": \"(UTC+03:00) Moscow, St. Petersburg\"\n  },\n  \"Brasilia\": {\n    \"std\": [\"BRT\", -3],\n    \"long\": \"(UTC-03:00) Brasilia\"\n  },\n  \"Mountain\": {\n    \"std\": [\"MST\", -7],\n    \"dst\": [\"MDT\", -6],\n    \"long\": \"(UTC-07:00) Mountain Time (US & Canada)\"\n  },\n  \"Central Africa\": {\n    \"std\": [\"CAT\", 2],\n    \"long\": \"(UTC+02:00) Windhoek\"\n  },\n  \"Arabian\": {\n    \"std\": [\"AST\", 3],\n    \"long\": \"(UTC+03:00) Kuwait, Riyadh\"\n  },\n  \"Alaska\": {\n    \"std\": [\"AKST\", -9],\n    \"dst\": [\"AKDT\", -8],\n    \"long\": \"(UTC-09:00) Alaska\"\n  },\n  \"British\": {\n    \"std\": [\"GMT\", 0],\n    \"dst\": [\"BST\", 1, \"British Summer Time\"],\n    \"long\": \"(UTC+00:00) Dublin, Edinburgh, Lisbon, London\"\n  },\n  \"Irish\": {\n    \"std\": [\"GMT\", 0],\n    \"dst\": [\"IST\", 1, \"Irish Standard Time\"]\n  },\n  \"West Kazakhstan\": {\n    \"std\": [\"ALMT\", 5],\n    \"long\": \"(UTC+05:00) Ashgabat, Tashkent\"\n  },\n  \"Eastern Australia\": {\n    \"std\": [\"AEST\", 10],\n    \"dst\": [\"AEDT\", 11, \"Australian Eastern Daylight Time\"],\n    \"long\": \"(UTC+10:00) Canberra, Melbourne, Sydney\"\n  },\n  \"Western European\": {\n    \"std\": [\"WET\", 0],\n    \"dst\": [\"WEST\", 1, \"Western European Summer Time\"]\n  },\n  \"Indochina\": {\n    \"std\": [\"ICT\", 7],\n    \"long\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\"\n  },\n  \"Central Mexico\": {\n    \"long\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n    \"std\": [\"CST\", -6],\n    \"dst\": [\"CDT\", -5, \"Central Daylight Time\"]\n  },\n  \"South Africa\": {\n    \"std\": [\"SAST\", 2],\n    \"long\": \"(UTC+02:00) Harare, Pretoria\"\n  },\n  \"Krasnoyarsk\": {\n    \"std\": [\"KRAT\", 7],\n    \"long\": \"(UTC+07:00) Krasnoyarsk\"\n  },\n  \"Yakutsk\": {\n    \"std\": [\"YAKT\", 9],\n    \"long\": \"(UTC+09:00) Yakutsk\"\n  },\n  \"Pacific\": {\n    \"std\": [\"PST\", -8],\n    \"dst\": [\"PDT\", -7],\n    \"long\": \"(UTC-08:00) Pacific Time (US & Canada)\"\n  },\n  \"Amazon\": {\n    \"std\": [\"AMT\", -4],\n    \"long\": \"(UTC-04:00) Cuiaba\"\n  },\n  \"Morocco Standard\": {\n    \"offset\": 1,\n    \"long\": \"(UTC+00:00) Casablanca\",\n    \"std\": [\"WET\", 1],\n    \"dst\": [\"WEST\", 0, \"Western European Summer Time\"]\n  },\n  \"Gulf\": {\n    \"std\": [\"GST\", 4],\n    \"long\": \"(UTC+04:00) Abu Dhabi, Muscat\"\n  },\n  \"Samara\": {\n    \"std\": [\"SAMT\", 4],\n    \"long\": \"(UTC+04:00) Izhevsk, Samara\"\n  },\n  \"Uzbekistan\": {\n    \"std\": [\"UZT\", 5]\n  },\n  \"East Kazakhstan\": {\n    \"std\": [\"ALMT\", 6],\n    \"long\": \"(UTC+06:00) Astana\"\n  },\n  \"Omsk\": {\n    \"std\": [\"OMST\", 6],\n    \"long\": \"(UTC+06:00) Omsk\"\n  },\n  \"Western Indonesia\": {\n    \"std\": [\"WIB\", 7]\n  },\n  \"Ulaanbaatar\": {\n    \"std\": [\"ULAT\", 8],\n    \"long\": \"(UTC+08:00) Ulaanbaatar\"\n  },\n  \"Malaysia\": {\n    \"std\": [\"MYT\", 8]\n  },\n  \"Korean\": {\n    \"std\": [\"KST\", 9],\n    \"long\": \"(UTC+09:00) Seoul\"\n  },\n  \"Central Australia\": {\n    \"std\": [\"ACST\", 9.5],\n    \"dst\": [\"ACDT\", 10.5, \"Australian Central Daylight Time\"],\n    \"long\": \"(UTC+09:30) Adelaide\"\n  },\n  \"Brisbane\": {\n    \"dupe\": true,\n    \"std\": [\"AEST\", 10]\n  },\n  \"Vladivostok\": {\n    \"std\": [\"VLAT\", 10],\n    \"long\": \"(UTC+10:00) Vladivostok\"\n  },\n  \"Chamorro\": {\n    \"std\": [\"ChST\", 10],\n    \"long\": \"(UTC+10:00) Guam, Port Moresby\"\n  },\n  \"Papua New Guinea\": {\n    \"std\": [\"PGT\", 11]\n  },\n  \"New Zealand\": {\n    \"std\": [\"NZST\", 12],\n    \"dst\": [\"NZDT\", 13],\n    \"long\": \"(UTC+12:00) Auckland, Wellington\"\n  },\n  \"Marshall Islands\": {\n    \"std\": [\"MHT\", 12]\n  },\n  \"Samoa\": {\n    \"std\": [\"SST\", -11],\n    \"long\": \"(UTC+13:00) Samoa\"\n  },\n  \"Hawaii-Aleutian\": {\n    \"std\": [\"HAST\", -9],\n    \"dst\": [\"HADT\", -8],\n    \"long\": \"(UTC-09:00) Aleutian Islands\"\n  },\n  \"Mexican Pacific\": {\n    \"std\": [\"HNPMX\", -7],\n    \"dst\": [\"HEPMX\", -6],\n    \"long\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\"\n  },\n  \"Colombia\": {\n    \"std\": [\"COT\", -5]\n  },\n  \"Acre\": {\n    \"std\": [\"ACT\", -5]\n  },\n  \"Chile\": {\n    \"dupe\": true,\n    \"std\": [\"CLT\", -3],\n    \"dst\": [\"CLST\", -4, \"Chile Summer Time\"]\n  },\n  \"Troll\": {\n    \"dupe\": true,\n    \"std\": [\"GMT\", 0]\n  },\n  \"East Greenland\": {\n    \"std\": [\"HNEG\", 0],\n    \"dst\": [\"HEEG\", 1, \"East Greenland Summer Time\"]\n  },\n  \"Israel\": {\n    \"std\": [\"IST\", 2],\n    \"dst\": [\"IDT\", 3],\n    \"long\": \"(UTC+02:00) Jerusalem\"\n  },\n  \"Syowa\": {\n    \"std\": [\"SYOT\", 3]\n  },\n  \"Turkey\": {\n    \"std\": [\"TRT\", 3],\n    \"long\": \"(UTC+03:00) Istanbul\"\n  },\n  \"Iran\": {\n    \"std\": [\"IRST\", 3.5],\n    \"dst\": [\"IRDT\", 4.5],\n    \"long\": \"(UTC+03:30) Tehran\"\n  },\n  \"Azerbaijan\": {\n    \"std\": [\"AZT\", 4],\n    \"long\": \"(UTC+04:00) Baku\"\n  },\n  \"Georgia\": {\n    \"std\": [\"GET\", 4],\n    \"long\": \"(UTC+04:00) Tbilisi\"\n  },\n  \"Armenia\": {\n    \"std\": [\"AMT\", 4],\n    \"long\": \"(UTC+04:00) Yerevan\"\n  },\n  \"Seychelles\": {\n    \"std\": [\"SCT\", 4]\n  },\n  \"Mauritius\": {\n    \"std\": [\"MUT\", 4],\n    \"long\": \"(UTC+04:00) Port Louis\"\n  },\n  \"Réunion\": {\n    \"std\": [\"RET\", 4]\n  },\n  \"Afghanistan\": {\n    \"std\": [\"AFT\", 4.5],\n    \"long\": \"(UTC+04:30) Kabul\"\n  },\n  \"Mawson\": {\n    \"std\": [\"MAWT\", 5]\n  },\n  \"Turkmenistan\": {\n    \"std\": [\"TMT\", 5]\n  },\n  \"Tajikistan\": {\n    \"std\": [\"TJT\", 5]\n  },\n  \"Pakistan\": {\n    \"std\": [\"PKT\", 5],\n    \"long\": \"(UTC+05:00) Islamabad, Karachi\"\n  },\n  \"Yekaterinburg\": {\n    \"std\": [\"YEKT\", 5],\n    \"long\": \"(UTC+05:00) Ekaterinburg\"\n  },\n  \"French Southern & Antarctic\": {\n    \"std\": [\"TFT\", 5]\n  },\n  \"Maldives\": {\n    \"std\": [\"MVT\", 5]\n  },\n  \"Nepal\": {\n    \"std\": [\"NPT\", 5.75],\n    \"long\": \"(UTC+05:45) Kathmandu\"\n  },\n  \"Vostok\": {\n    \"std\": [\"MSK+4\", 6]\n  },\n  \"Kyrgyzstan\": {\n    \"std\": [\"KGT\", 6]\n  },\n  \"Bangladesh\": {\n    \"std\": [\"BST\", 6],\n    \"long\": \"(UTC+06:00) Dhaka\"\n  },\n  \"Bhutan\": {\n    \"std\": [\"BT\", 6]\n  },\n  \"Indian Ocean\": {\n    \"std\": [\"IOT\", 6]\n  },\n  \"Myanmar\": {\n    \"std\": [\"MMT\", 6.5],\n    \"long\": \"(UTC+06:30) Yangon (Rangoon)\"\n  },\n  \"Cocos Islands\": {\n    \"std\": [\"CCT\", 6.5]\n  },\n  \"Davis\": {\n    \"std\": [\"DAVT\", 7]\n  },\n  \"Hovd\": {\n    \"std\": [\"HOVT\", 7],\n    \"long\": \"(UTC+07:00) Hovd\"\n  },\n  \"Novosibirsk\": {\n    \"std\": [\"NOVT\", 7],\n    \"long\": \"(UTC+07:00) Novosibirsk\"\n  },\n  \"Christmas Island\": {\n    \"std\": [\"CXT\", 7]\n  },\n  \"Brunei Darussalam\": {\n    \"std\": [\"BNT\", 8]\n  },\n  \"Hong Kong\": {\n    \"std\": [\"HKT\", 8]\n  },\n  \"Irkutsk\": {\n    \"std\": [\"IRKT\", 8],\n    \"long\": \"(UTC+08:00) Irkutsk\"\n  },\n  \"Central Indonesia\": {\n    \"std\": [\"WITA\", 8]\n  },\n  \"Philippine\": {\n    \"std\": [\"PHST\", 8]\n  },\n  \"Singapore\": {\n    \"std\": [\"SGT\", 8],\n    \"long\": \"(UTC+08:00) Kuala Lumpur, Singapore\"\n  },\n  \"Taipei\": {\n    \"std\": [\"CST\", 8],\n    \"long\": \"(UTC+08:00) Taipei\"\n  },\n  \"Western Australia\": {\n    \"std\": [\"AWST\", 8],\n    \"long\": \"(UTC+08:00) Perth\"\n  },\n  \"Australian Central Western\": {\n    \"std\": [\"ACWST\", 8.75],\n    \"long\": \"(UTC+08:45) Eucla\"\n  },\n  \"East Timor\": {\n    \"std\": [\"TLT\", 9]\n  },\n  \"Eastern Indonesia\": {\n    \"std\": [\"WIT\", 9]\n  },\n  \"Japan\": {\n    \"std\": [\"JST\", 9],\n    \"long\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\"\n  },\n  \"Palau\": {\n    \"std\": [\"PWT\", 9]\n  },\n  \"Australian Central\": {\n    \"dupe\": true,\n    \"std\": [\"ACST\", 9.5]\n  },\n  \"Dumont-d’Urville\": {\n    \"std\": [\"CLST\", 10]\n  },\n  \"Chuuk\": {\n    \"std\": [\"CHUT\", 10]\n  },\n  \"Lord Howe\": {\n    \"std\": [\"LHST\", 10.5],\n    \"dst\": [\"LHDT\", 11.5],\n    \"long\": \"(UTC+10:30) Lord Howe Island\"\n  },\n  \"Casey\": {\n    \"std\": [\"CAST\", 11],\n    \"dst\": [\"CAST\", 8, \"Casey Summer Time\"]\n  },\n  \"Magadan\": {\n    \"std\": [\"MAGT\", 11],\n    \"long\": \"(UTC+11:00) Magadan\"\n  },\n  \"Sakhalin\": {\n    \"std\": [\"SAKT\", 11],\n    \"long\": \"(UTC+11:00) Sakhalin\"\n  },\n  \"Srednekolymsk\": {\n    \"std\": [\"SRET\", 11],\n    \"long\": \"(UTC+11:00) Chokurdakh\"\n  },\n  \"Vanuatu\": {\n    \"std\": [\"VUT\", 11]\n  },\n  \"Solomon Islands\": {\n    \"std\": [\"SBT\", 11]\n  },\n  \"Kosrae\": {\n    \"std\": [\"KOST\", 11]\n  },\n  \"New Caledonia\": {\n    \"std\": [\"NCT\", 11]\n  },\n  \"Ponape\": {\n    \"std\": [\"PONT\", 11]\n  },\n  \"Anadyr\": {\n    \"std\": [\"ANAT\", 12],\n    \"long\": \"(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky\"\n  },\n  \"Petropavlovsk-Kamchatski\": {\n    \"std\": [\"PETT\", 12],\n    \"long\": \"(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky\"\n  },\n  \"Fiji\": {\n    \"std\": [\"FJT\", 12],\n    \"dst\": [\"FJT\", 13, \"Fiji Summer Time\"],\n    \"long\": \"(UTC+12:00) Fiji\"\n  },\n  \"Tuvalu\": {\n    \"std\": [\"TVT\", 12]\n  },\n  \"Nauru\": {\n    \"std\": [\"NRT\", 12]\n  },\n  \"Norfolk Island\": {\n    \"std\": [\"NFT\", 12],\n    \"dst\": [\"NFDT\", 11],\n    \"long\": \"(UTC+11:00) Norfolk Island\"\n  },\n  \"Gilbert Islands\": {\n    \"std\": [\"GILT\", 12]\n  },\n  \"Wake Island\": {\n    \"std\": [\"WAKT\", 12]\n  },\n  \"Wallis & Futuna\": {\n    \"std\": [\"WFT\", 12]\n  },\n  \"Chatham\": {\n    \"std\": [\"CHAST\", 12.75],\n    \"dst\": [\"CHADT\", 13.75],\n    \"long\": \"(UTC+12:45) Chatham Islands\"\n  },\n  \"West Samoa\": {\n    \"std\": [\"WST\", 13],\n    \"dst\": [\"WST\", 14, \"West Samoa Summer Time\"]\n  },\n  \"Phoenix Islands\": {\n    \"std\": [\"PHOT\", 13]\n  },\n  \"Tokelau\": {\n    \"std\": [\"TKT\", 13]\n  },\n  \"Tonga\": {\n    \"std\": [\"TOT\", 13],\n    \"long\": \"(UTC+13:00) Nuku'alofa\"\n  },\n  \"Line Islands\": {\n    \"std\": [\"LINT\", 14],\n    \"long\": \"(UTC+14:00) Kiritimati Island\"\n  },\n  \"Niue\": {\n    \"std\": [\"NUT\", -11]\n  },\n  \"Cook Islands\": {\n    \"std\": [\"CKT\", -10]\n  },\n  \"Tahiti\": {\n    \"std\": [\"TAHT\", -10]\n  },\n  \"Marquesas\": {\n    \"std\": [\"MART\", -9.5],\n    \"long\": \"(UTC-09:30) Marquesas Islands\"\n  },\n  \"Aleutian Standard\": {\n    \"iso\": \"(UTC-10:00) Aleutian Islands\",\n    \"std\": [\"HST\", -10],\n    \"dst\": [\"HDT\", -9, \"Hawaii Daylight Time\"]\n  },\n  \"Gambier\": {\n    \"std\": [\"GAMT\", -9],\n    \"long\": \"(UTC-09:00) Coordinated Universal Time-09\"\n  },\n  \"Pitcairn\": {\n    \"std\": [\"PST\", -8],\n    \"long\": \"(UTC-08:00) Coordinated Universal Time-08\"\n  },\n  \"Northwest Mexico\": {\n    \"std\": [\"HNNOMX\", -6],\n    \"dst\": [\"HENOMX\", -5],\n    \"long\": \"(UTC-08:00) Baja California\"\n  },\n  \"Easter Island\": {\n    \"std\": [\"EAST\", -6],\n    \"dst\": [\"EASST\", -5, \"Easter Island Summer Time\"],\n    \"long\": \"(UTC-06:00) Easter Island\"\n  },\n  \"Ecuador\": {\n    \"std\": [\"ECT\", -5]\n  },\n  \"Cuba\": {\n    \"std\": [\"HNCU\", -5],\n    \"dst\": [\"HECU\", -4],\n    \"long\": \"(UTC-05:00) Havana\"\n  },\n  \"Peru\": {\n    \"std\": [\"PET\", -5]\n  },\n  \"Paraguay\": {\n    \"std\": [\"PYT\", -4],\n    \"dst\": [\"PYST\", -3, \"Paraguay Summer Time\"],\n    \"long\": \"(UTC-04:00) Asuncion\"\n  },\n  \"Venezuela\": {\n    \"std\": [\"VET\", -4],\n    \"long\": \"(UTC-04:00) Caracas\"\n  },\n  \"Guyana\": {\n    \"std\": [\"GYT\", -4]\n  },\n  \"Bolivia\": {\n    \"std\": [\"BOT\", -4]\n  },\n  \"Newfoundland\": {\n    \"std\": [\"HNTN\", -3.5],\n    \"dst\": [\"HETN\", -2.5],\n    \"long\": \"(UTC-03:30) Newfoundland\"\n  },\n  \"French Guiana\": {\n    \"std\": [\"GFT\", -3]\n  },\n  \"West Greenland\": {\n    \"std\": [\"WGT\", -3],\n    \"dst\": [\"WGST\", -2, \"West Greenland Summer Time\"],\n    \"long\": \"(UTC-03:00) Greenland\"\n  },\n  \"St. Pierre & Miquelon\": {\n    \"std\": [\"HNPM\", -3],\n    \"dst\": [\"HEPM\", -2],\n    \"long\": \"(UTC-03:00) Saint Pierre and Miquelon\"\n  },\n  \"Uruguay\": {\n    \"std\": [\"UYT\", -3],\n    \"long\": \"(UTC-03:00) Montevideo\"\n  },\n  \"Suriname\": {\n    \"std\": [\"SRT\", -3]\n  },\n  \"Falkland Islands\": {\n    \"std\": [\"FKST\", -3]\n  },\n  \"Fernando de Noronha\": {\n    \"std\": [\"FNT\", -2]\n  },\n  \"South Georgia\": {\n    \"std\": [\"GST\", -2]\n  },\n  \"Azores\": {\n    \"std\": [\"AZOT\", -1],\n    \"dst\": [\"AZOST\", 0, \"Azores Summer Time\"],\n    \"long\": \"(UTC-01:00) Azores\"\n  },\n  \"Cape Verde\": {\n    \"std\": [\"CVT\", -1],\n    \"long\": \"(UTC-01:00) Cabo Verde Is.\"\n  }\n};\n\n// const metas = require('../../data/05-metazones')\n// import offsets from './offsets.js'\n\nfor (let i = 0; i <= 14; i += 1) {\n  metas[`gmt-${i}`] = {\n    name: `Etc/GMT-${i}`,\n    std: [`GMT-${i}`, i],\n    long: `(UTC-${i}:00) Coordinated Universal Time`\n  };\n  metas[`gmt+${i}`] = {\n    name: `Etc/GMT+${i}`,\n    std: [`GMT+${i}`, -i],\n    long: `(UTC+${i}:00) Coordinated Universal Time`\n  };\n}\nconst display = function (id) {\n  if (!id) {\n    return null;\n  }\n  if (!zones[id]) {\n    console.error(`missing id ${id}`);\n    return null;\n  }\n  let metaName = zones[id].meta;\n  if (!metas[metaName]) {\n    console.error(`missing tz-meta ${metaName}`);\n  }\n  let meta = metas[metaName] || {};\n  let dst = null;\n  if (zones[id].dst && meta.dst) {\n    let [abbr, offset, name] = meta.dst;\n    name = name || `${metaName} Daylight Time`;\n    let [start, end] = zones[id].dst || [];\n    dst = {\n      abbr,\n      offset,\n      name,\n      start,\n      end\n    };\n  }\n  let [abbr, offset] = meta.std;\n  let name = meta.name || `${metaName} Time`;\n  let long = meta.long || `(UTC+${offset}:00) ${name}`;\n  return {\n    name: name,\n    iana: id,\n    standard: {\n      abbr,\n      offset,\n      name: meta.name || `${metaName} Standard Time`\n    },\n    daylight: dst || null,\n    long: long\n  };\n};\nvar display$1 = display;\nvar version = '1.5.1';\nconst soft = function (str) {\n  let ids = find$1(str) || [];\n  if (typeof ids === 'string') {\n    ids = [ids];\n  }\n  ids = ids.map(id => display$1(id));\n  return ids;\n};\nsoft.prototype.version = version;\n// export { find, display, version }\n\nexport { soft as default };","map":{"version":3,"names":["BASE","seq","cache","split","reduce","h","c","i","toAlphaCode","n","undefined","places","range","s","d","String","fromCharCode","fromAlphaCode","pow","length","charCodeAt","encoding","symbols","t","reSymbol","RegExp","nodes","m","exec","symCount","syms","slice","parseSymbols","indexFromRef","trie","ref","index","dnode","toArray","all","crawl","pref","node","push","matches","str","have","newIndex","unpack$2","match","traverse","unpack","obj","arr","Object","keys","forEach","cat","k","hasOwnProperty","Array","isArray","unpack$1","patterns","usa","mex","eu0","eu1","eu2","eu3","green","aus","lhow","chat","nz","ant","troll","jord","leb","syr","isr","pal","saha","par","cuba","chile","east","fiji","dstPatterns","pcked","misc","gmt0","addEtc","zones","offset","meta","hem","addUTC","lexicon","assign","top","name","words","dst","id","last","toLowerCase","wordCount","unique","sort","a","b","one","replace","trim","two","three","normalize","isOffset","isNumber","utcOffset","gmtOffset","toIana","num","Number","parseOffset","tz","parseOffset$1","find","test","etc","find$1","metas","std","long","display","console","error","metaName","abbr","start","end","iana","standard","daylight","display$1","version","soft","ids","map","prototype","default"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/timezone-soft/builds/timezone-soft.mjs"],"sourcesContent":["const BASE = 36;\nconst seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst cache = seq.split('').reduce(function (h, c, i) {\n  h[c] = i;\n  return h\n}, {});\n\n// 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\nconst toAlphaCode = function (n) {\n  if (seq[n] !== undefined) {\n    return seq[n]\n  }\n  let places = 1;\n  let range = BASE;\n  let s = '';\n  for (; n >= range; n -= range, places++, range *= BASE) {}\n  while (places--) {\n    const d = n % BASE;\n    s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s;\n    n = (n - d) / BASE;\n  }\n  return s\n};\n\nconst fromAlphaCode = function (s) {\n  if (cache[s] !== undefined) {\n    return cache[s]\n  }\n  let n = 0;\n  let places = 1;\n  let range = BASE;\n  let pow = 1;\n  for (; places < s.length; n += range, places++, range *= BASE) {}\n  for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n    let d = s.charCodeAt(i) - 48;\n    if (d > 10) {\n      d -= 7;\n    }\n    n += d * pow;\n  }\n  return n\n};\n\nvar encoding = {\n  toAlphaCode,\n  fromAlphaCode\n};\n\nconst symbols = function (t) {\n  //... process these lines\n  const reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)');\n  for (let i = 0; i < t.nodes.length; i++) {\n    const m = reSymbol.exec(t.nodes[i]);\n    if (!m) {\n      t.symCount = i;\n      break\n    }\n    t.syms[encoding.fromAlphaCode(m[1])] = encoding.fromAlphaCode(m[2]);\n  }\n  //remove from main node list\n  t.nodes = t.nodes.slice(t.symCount, t.nodes.length);\n};\nvar parseSymbols = symbols;\n\n// References are either absolute (symbol) or relative (1 - based)\nconst indexFromRef = function (trie, ref, index) {\n  const dnode = encoding.fromAlphaCode(ref);\n  if (dnode < trie.symCount) {\n    return trie.syms[dnode]\n  }\n  return index + dnode + 1 - trie.symCount\n};\n\nconst toArray = function (trie) {\n  const all = [];\n  const crawl = (index, pref) => {\n    let node = trie.nodes[index];\n    if (node[0] === '!') {\n      all.push(pref);\n      node = node.slice(1); //ok, we tried. remove it.\n    }\n    const matches = node.split(/([A-Z0-9,]+)/g);\n    for (let i = 0; i < matches.length; i += 2) {\n      const str = matches[i];\n      const ref = matches[i + 1];\n      if (!str) {\n        continue\n      }\n      const have = pref + str;\n      //branch's end\n      if (ref === ',' || ref === undefined) {\n        all.push(have);\n        continue\n      }\n      const newIndex = indexFromRef(trie, ref, index);\n      crawl(newIndex, have);\n    }\n  };\n  crawl(0, '');\n  return all\n};\n\n//PackedTrie - Trie traversal of the Trie packed-string representation.\nconst unpack$2 = function (str) {\n  const trie = {\n    nodes: str.split(';'),\n    syms: [],\n    symCount: 0\n  };\n  //process symbols, if they have them\n  if (str.match(':')) {\n    parseSymbols(trie);\n  }\n  return toArray(trie)\n};\n\nvar traverse = unpack$2;\n\nconst unpack = function (str) {\n  if (!str) {\n    return {}\n  }\n  //turn the weird string into a key-value object again\n  const obj = str.split('|').reduce((h, s) => {\n    const arr = s.split('¦');\n    h[arr[0]] = arr[1];\n    return h\n  }, {});\n  const all = {};\n  Object.keys(obj).forEach(function (cat) {\n    const arr = traverse(obj[cat]);\n    //special case, for botched-boolean\n    if (cat === 'true') {\n      cat = true;\n    }\n    for (let i = 0; i < arr.length; i++) {\n      const k = arr[i];\n      if (all.hasOwnProperty(k) === true) {\n        if (Array.isArray(all[k]) === false) {\n          all[k] = [all[k], cat];\n        } else {\n          all[k].push(cat);\n        }\n      } else {\n        all[k] = cat;\n      }\n    }\n  });\n  return all\n};\n\nvar unpack$1 = unpack;\n\n// these are the folk heuristics that timezones use to set their dst change dates\n// for example, the US changes:\n// the second Sunday of March -> first Sunday of November\n// http://www.webexhibits.org/daylightsaving/g.html\nlet patterns = {\n  usa: '2nd-sun-mar-2h|1st-sun-nov-2h',// (From 1987 to 2006)\n  // mexico\n  mex: '1st-sun-apr-2h|last-sun-oct-2h',\n\n  // European Union zone\n  eu0: 'last-sun-mar-0h|last-sun-oct-1h',\n  eu1: 'last-sun-mar-1h|last-sun-oct-2h',\n  eu2: 'last-sun-mar-2h|last-sun-oct-3h',\n  eu3: 'last-sun-mar-3h|last-sun-oct-4h',\n  //greenland\n  green: 'last-sat-mar-22h|last-sat-oct-23h',\n\n  // australia\n  aus: '1st-sun-apr-3h|1st-sun-oct-2h',\n  //lord howe australia\n  lhow: '1st-sun-apr-2h|1st-sun-oct-2h',\n  // new zealand\n  chat: '1st-sun-apr-3h|last-sun-sep-2h', //technically 3:45h -> 2:45h\n  // new Zealand, antarctica \n  nz: '1st-sun-apr-3h|last-sun-sep-2h',\n  // casey - antarctica\n  ant: '2nd-sun-mar-0h|1st-sun-oct-0h',\n  // troll - antarctica\n  troll: '3rd-sun-mar-1h|last-sun-oct-3h',\n\n  //jordan\n  jord: 'last-fri-feb-0h|last-fri-oct-1h',\n  // lebanon\n  leb: 'last-sun-mar-0h|last-sun-oct-0h',\n  // syria\n  syr: 'last-fri-mar-0h|last-fri-oct-0h',\n  //israel\n  // Start: Last Friday before April 2 -> The Sunday between Rosh Hashana and Yom Kippur\n  isr: 'last-fri-mar-2h|last-sun-oct-2h',\n  //palestine\n  pal: 'last-sun-mar-0h|last-fri-oct-1h',\n\n  // el aaiun\n  //this one seems to be on arabic calendar?\n  saha: 'last-sun-mar-3h|1st-sun-may-2h',\n\n  // paraguay\n  par: 'last-sun-mar-0h|1st-sun-oct-0h',\n  //cuba\n  cuba: '2nd-sun-mar-0h|1st-sun-nov-1h',\n  //chile\n  chile: '1st-sun-apr-0h|1st-sun-sep-0h',\n  //easter island\n  east: '1st-sat-apr-22h|1st-sat-sep-22h',\n  //fiji\n  fiji: '3rd-sun-jan-3h|2nd-sun-nov-2h',\n};\n\nvar dstPatterns = patterns;\n\nvar pcked = {\"Africa\":{\"Abidjan\":[\"true¦a5bouake,coordinated universal4daloa,g1san ped0utc,yamoussouk0zulu;ro;h0mt,reenwich mean2;!a0;!na; ti3;b4frica0tlantic/st_helena;!/0;accra,ba1conakry,dakar,freetown,lo0nouakchott,ouagadougou,timbuktu;me;mako,njul;idjan,obo\",\"Greenwich Mean\",\"n\"],\"Algiers\":[\"true¦a8b6c3dz2or5s1t0;ebessa,iaret;etif,idi bel abbes;!a;e0hlef,onstantine;ntral europe0t;an;a0iskra,lida,oumerdas;b ezzouar,tna;frica,lg0nnaba;eria,iers\",\"Central European\",\"n\"],\"Bissau\":[\"true¦africa,b2coordinated universal1g0utc,zulu;mt,nb,reenwich mean0uinea b1w; time;issau\",\"Greenwich Mean\",\"n\"],\"Cairo\":[\"true¦a6bani suwayf,c5damanhur,e2giza,halw8i1kafr ad dawwar,luxor,new c5port said,qina,s0tanta,zagazig;hibin al kawm,ohag,uez;dku,smail8;astern europe5et,g0;!y0;!pt;airo;frica,l2s0;w0yut;an; 1exandr0;ia;fayyum,m0;a0inya;hallah al kubra,nsurah\",\"Eastern European\",\"n\"],\"Casablanca\":[\"true¦aCcasablanDfBkenitAm6oujda angad,rabat,sa4t1we0;stern europe2t;angier,e0;ma7tou0;an;fi,le0;! al jadida;a1ekn4o0;hammedia,rocco;!r0;!rakesh;ra;es;fri0gadir,l hoceima;ca\",\"Morocco Standard\",\"n\",\"saha\"],\"Ceuta\":[\"true¦africa,brussels,c0europe central,madrid,paris,romance;e0openhagen;ntral european,t,uta0;!melilla\",\"Central European\",\"n\",\"eu2\"],\"El_Aaiun\":[\"true¦afri3casablan3e2laayoune,morocco,we0;stern 0t;european,sahara;h,l_aaiun,sh;ca\",\"Morocco Standard\",\"n\",\"saha\"],\"Johannesburg\":[\"true¦africaIbEcAd9east londBharare,johannesHk7newcastDp6r5s3tembisa,uitenhage,v2w1za0;!f;elkom,itbank;anderbijlpark,ereeniging;ast,o0prings;uth africa,weto;andBichards bay,oodepoort;aarl,ietermaritzAort elizabeth,retoria;lerk0ruger0;sdorp;iepsloot,urb5;a1enturi0;on;pe town,rletonvil0;le;enoni,loemfontein,o1rakp0;an;ks0tshabelo;burg;! southern,/m0;aseru,babane\",\"South Africa\",\"s\"],\"Juba\":[\"true¦a3c2juba,s0winejok;outh sudan,s0;!d;at,entral a0;frica\",\"Central Africa\",\"n\"],\"Khartoum\":[\"true¦a7c6el 5k3ny4omdurm2port sud2s0wad medani;d0inga,ud1;!n;an;ass0hartoum,osti;ala;dae3fasher,obeid;at,entral af1;d damaz1f0l qadarif;rica;in\",\"Central Africa\",\"n\"],\"Lagos\":[\"true¦aVbTcReQgPiLjKkaIlGmDnnewi,oAport harcourt,s9u7w0zar8; c3a2est0; 0ern3;a3c1;rBst,t;entral0; a0;frica;gep,muah0yo;ia;a7hagamu,okoto;kDn1w0yo;er3o;do,itsha;a0in5ubi;idugu0kurdi;ri;agos,ek0;ki;du0no,tsi0;na;imeLos;badan,jebu ode,k1l0seHwo;a orangun,eDor7;eHi8ot ekp0;ene;ombe,usau;bute ikorodu,fon alaaye,nugu;alabar,d,hakwama,o0;d,ngo;auchi,en0;in;b8do7frica1ku0tani;re;! western,/0;b2douala,kinsha1l0malabo,niamey,porto-novo;ibre2uanda;sa;angui,razza0;ville; ekiti;a,eoku1u0;ja;ta\",\"West Africa\",\"n\"],\"Maputo\":[\"true¦africa7beiCc6ma4na2quelimaAwindhoek,z0;imbabwe,w0;!e;ca2m0;ibia,pu1;puto,to0;la;at,entral africa,himoio;! central,/0;b2gaboro1hara4kigali,lu0;bumbashi,saka;ne;lanty1ujumbu0;ra;re\",\"Central Africa\",\"s\"],\"Monrovia\":[\"true¦africa,coordinated universal3g2l0monrov1utc,zulu;br,iber0r;ia;mt,reenwich mean0; time\",\"Greenwich Mean\",\"n\"],\"Nairobi\":[\"true¦africa8e4indian/2kisumu,m1na0thika,yt;irobi,kuru;a1ombasa,yt;antananarivo,comoro,ma0;yotte; 2a0ldoret;st0t; 0ern 0;africa;! eastern,/0;a1d0kampala,mogadishu;ar_es_salaam,jibouti;ddis_ababa,sm0;a0e0;ra\",\"East Africa\",\"n\"],\"Ndjamena\":[\"true¦africaAchad,n8t7w0; c3a2est0; 0ern3;a3c1;st,t;entral0; a0;frica;cd,d;'d0d0;jamena;! western\",\"West Africa\",\"n\"],\"Sao_Tome\":[\"true¦africa,coordinated universal5g4s0utc,zulu;ao1t0;!p; 0_0;to2;mt,reenwich mean0; ti0;me\",\"Greenwich Mean\",\"n\"],\"Tripoli\":[\"true¦a4benghazi,e3l1misrat5t0zawi2;arhuna,ripoli;by,ib0y;ya;astern european,et;frica,l khums,z zawiy0;ah\",\"Eastern European\",\"n\"],\"Tunis\":[\"true¦africa,ce3sfax,t0;n,un0;!is0;!ia;ntral european,t\",\"Central European\",\"n\"],\"Windhoek\":[\"true¦africa3c2na0windhoek;!m0;!ibia;at,entral africa;! central\",\"Central Africa\",\"s\"]},\"America\":{\"Adak\":[\"true¦a1h0nwt,us/aleutian;awaii s3dt,st;dak,leutian0merica/atka;! 0;islands,s0;tandard time\",\"Aleutian Standard\",\"n\",\"usa\"],\"Anchorage\":[\"true¦a0us/alaska;h6k5laska0merica,nchorage;! 1n0;! s1;s0t1;tandard t0;ime;dt,st,t;dt,st\",\"Alaska\",\"n\",\"usa\"],\"Araguaina\":[\"true¦araguaina,br1e0palmas,tocantins; south america s4ast south america;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Argentina/Buenos_Aires\":[\"true¦a0buenos 4;merica/2r0;!g0;!e2;arge1buenos_0;aires;ntina\",\"Argentina\",\"s\"],\"Argentina/Catamarca\":[\"true¦a0c2;merica/0rgentina;argentina/comodrivadavia,c0;atamarca\",\"Argentina\",\"s\"],\"Argentina/Cordoba\":[\"true¦a0c2;merica/0rgentina;c0rosario;ordoba\",\"Argentina\",\"s\"],\"Argentina/Jujuy\":[\"true¦a0j1;merica/j0rgentina;ujuy\",\"Argentina\",\"s\"],\"Argentina/La_Rioja\":[\"true¦ar1b0city of b0la rioja;uenos aires;gentina0st,t;! 0;standard t0t0;ime\",\"Argentina\",\"s\"],\"Argentina/Mendoza\":[\"true¦a0m1;merica/m0rgentina;endoza\",\"Argentina\",\"s\"],\"Argentina/Rio_Gallegos\":[\"true¦ar1b0city of b0rio_gallegos;uenos aires;gentina0st,t;! 0;standard t0t0;ime\",\"Argentina\",\"s\"],\"Argentina/Salta\":[\"true¦ar1b0city of b0salta;uenos aires;gentina0st,t;! 0;standard t0t0;ime\",\"Argentina\",\"s\"],\"Argentina/San_Juan\":[\"true¦ar1b0city of b0san juan;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Argentina/San_Luis\":[\"true¦ar1b0city of b0san luis;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Argentina/Tucuman\":[\"true¦ar1b0city of b0tucuman;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Argentina/Ushuaia\":[\"true¦ar1b0city of b0ushuaia;uenos aires;gentina0st,t;! time\",\"Argentina\",\"s\"],\"Asuncion\":[\"true¦asuncion,c3p0san lorenzo;araguay1ry,y0;!st,t;! time;apiata,iudad del este\",\"Paraguay\",\"s\",\"par\"],\"Bahia\":[\"true¦b2camacari,e1feira de santa0itabu0salvador,vitoria da conquista;na; south america s5ast south america;ahia,r0;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Bahia_Banderas\":[\"true¦bah7c2guadalajara,m0;exico0onterrey;! city;entral 0st;mexic0standard 2;an,o0;! 0;time;ia_0ía de 0;banderas\",\"Central Mexico\",\"n\",\"mex\"],\"Barbados\":[\"true¦a1b0;arbados,b,rb;st,tlantic standard time\",\"Atlantic\",\"n\"],\"Belem\":[\"true¦ananindeua,b2e1macapa,par0;auapebas,á east amapá; south america s5ast south america;elem,r0;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Belize\":[\"true¦b1c0;entral standard time,st;elize,lz,z\",\"Central\",\"n\"],\"Boa_Vista\":[\"true¦am3boa vista,c0roraima;entral brazil0uiaba;!ian0;! s3;azon0t;! 0;s0t1;tandard t0;ime\",\"Amazon\",\"n\"],\"Bogota\":[\"true¦armenGbBc7dosquebradas,floridablanca,i6m5neiva,p3s1v0;alledupar,illavicencio;anta marCincelejo,o0;acha,ledad;a0erei9opayan;lmi8sto;anizales,edellin,onterA;bague,taguei;a2o0ucu6;!l0st,t;!omb6;li,rtagena;arran3ello,ogo2u0;caramanga,enaventu0;ra;ta;cabermeja,quilla;ia\",\"Colombia\",\"n\"],\"Boise\":[\"true¦america4boise,idaho,m0;ountain0pt,st,t;! 0;id,standard t0t0;ime;! mountain\",\"Mountain\",\"n\",\"usa\"],\"Cambridge_Bay\":[\"true¦america4cambridge bay,m0;ddt,ountain0st,t;! 0;standard t0t0;ime;! mountain\",\"Mountain\",\"n\",\"usa\"],\"Campo_Grande\":[\"true¦am0brazil,campo grande,mato grosso do sul;azon standard time,t\",\"Amazon\",\"s\"],\"Cancun\":[\"true¦cancun,e0mexico,quintana roo;astern standard time,st\",\"Eastern\",\"n\"],\"Caracas\":[\"true¦alto barinKbarJcDguaBm8p7san6turmeFv0;alencia,e0;!n0t;!ezuela0;! 0n;standard t0t0;ime; cristobal,ta teresa del tuy;eta4uerto la cruz;a0ucumpiz;raca0turin;ibo,y;ren8ti0;re;a4iudad 2o1u0;a,m2;ro;bolivar,guay0;ana;bim1rac1;in0quisimeto,uta;as\",\"Venezuela\",\"n\"],\"Cayenne\":[\"true¦cayenne,french guiana3g0;f1u0;f,iana;!t;! time\",\"French Guiana\",\"n\"],\"Chicago\":[\"true¦aWbTcRdQfort worth,gPhOiMk00lJmCn8o7plano,s4t2us1wi0;chiGsconsW;/02a;ex0ulsa;!as;a0hreveport,ou4t 1;int 0n antonio;louGpaul;klahoXmaha,verland park;ashLe1or0;th dako7;braska,w 0;orleans,south me6;adisMe5i1o0;biHntgomery;lwaukee,nne1ss0;issippi,ouri;apol6so0;ta;mph4;aredo,i0ouisiana,ubb1;ncoln,ttle r0;ock;llino0owa,rving;is;oustAunts5;arland,rand prairie;allAes moines;dt,entral0hicago,orpus christi,st,t;! time;aton rouge,rowns0;vil0;le;laba8m5r1ust0;in;k1lingt0;on;ans0;as;arillo,erica0;! 0;central;ma\",\"Central\",\"n\",\"usa\"],\"Chihuahua\":[\"true¦chihuahua,h5la paz,m0;azatlan,exic1ountain 0;mexico,standard time (mexico);an pacific1o0;! pacific;! time;ep0np0p0;mx\",\"Mexican Pacific\",\"n\",\"mex\"],\"Costa_Rica\":[\"true¦c0sjmt;entral standard time,osta rica,r0st;!i\",\"Central\",\"n\"],\"Cuiaba\":[\"true¦am0brazil,cuiaba,mato grosso,varzea grande;azon standard time,t\",\"Amazon\",\"s\"],\"Danmarkshavn\":[\"true¦coordinated universal2d1g0utc,zulu;mt,reenwich mean1;anmarkshavn,enmark; time\",\"Greenwich Mean\",\"n\"],\"Dawson\":[\"true¦canada,dawson,m2y0;d0pt,wt;dt,t;ountain standard time,st\",\"Mountain\",\"n\"],\"Dawson_Creek\":[\"true¦canada,dawson creek,m1p0;pt,wt;ountain standard time,st,t\",\"Mountain\",\"n\"],\"Denver\":[\"true¦a5colorado springs,denver,el paso,m1navajo,salt lake,us0;/6a;dt,ountain0st,t;! 0;standard t0t0;ime;lbuquerque,merica0urora;! 0/shiprock;mountain\",\"Mountain\",\"n\",\"usa\"],\"Detroit\":[\"true¦america4detroit,e0grand rapids,us/michigan;astern0pt,st,t,wt;! 0;mi,standard t0t0;ime;! eastern\",\"Eastern\",\"n\",\"usa\"],\"Edmonton\":[\"true¦a6ca4edmonton,m0;ountain0st,t;! 0;standard t0t0;ime;lgary,nada0;!/1;lberta,merica 0;mountain\",\"Mountain\",\"n\",\"usa\"],\"Eirunepe\":[\"true¦a0brazil,eirunepe;c0mazonas west;re0t;! 0;standard t0t0;ime\",\"Acre\",\"n\"],\"El_Salvador\":[\"true¦c2el1s0;an0lv,oyapango,v; salvador;entral standard time,st\",\"Central\",\"n\"],\"Fort_Nelson\":[\"true¦british columbia,canada,fort nelson,m0;ountain standard time,st,t\",\"Mountain\",\"n\"],\"Fortaleza\":[\"true¦br5ca4e3fortaleza,imperatriz,j2m0natal,sao luis,teresina;a0ossoro;picernpb,racanau;oao pessoa,uazeiro do norte; south america s5ast south america;mpina grande,ucaia;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"s\"],\"Glace_Bay\":[\"true¦a1ca0glace_bay;nada,pe breton;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Goose_Bay\":[\"true¦a0canada,goose_bay,labrador,npt;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Grand_Turk\":[\"true¦america eastern,e2grand turk,kmt,t0;c0urks and caicos;!a;astern0st,t;! 0;standard t0t0;ime\",\"Eastern\",\"n\",\"usa\"],\"Guatemala\":[\"true¦c2g0mixco,villa nueva;t0uatemala;!m;entral standard time,st\",\"Central\",\"n\"],\"Guayaquil\":[\"true¦cuenca,ec2guayaquil,ma1q0santo domingo de los colorados;mt,uito;chala,nta;!t,u0;!ador0;! 0;mainland,time\",\"Ecuador\",\"n\"],\"Guyana\":[\"true¦g0;eorgetown,uy1y0;!t;!ana0;! time\",\"Guyana\",\"n\"],\"Halifax\":[\"true¦a4ca2halifax,n1p0;ei,rince edward island;ew brunswick,ova scotia;!nada0;!/atlantic;dt,st,t0;!lantic0;! 0;ns,standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Havana\":[\"true¦arroyo naranjo,bBc3diez de octubre,guantanDh1las tunas,pinar del rio,sant0;a clara,iago de cuba;avana,cu,e0n0olguin;cu;amaguey,i5u0;!b0;!a0;! 0;standard t0t0;ime;e0udad camilo cie0;nfueg1;ay1oyer0;os;amo\",\"Cuba\",\"n\",\"cuba\"],\"Hermosillo\":[\"true¦ciudad obregon,h1mexic0nogales,sonora;an pacific standard time,o;ermosillo,npmx\",\"Mexican Pacific\",\"n\"],\"Indiana/Indianapolis\":[\"true¦america2crawford,dadukmn,eastern in,i4p0star1us/east-indiana;erry,i0ulaski;ke;!/0;fort_wayne,i0;ndiana0;!polis\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Knox\":[\"true¦america1c0indiana,knox,us/indiana-starke;entral standard time,st;!/knox_in\",\"Central\",\"n\",\"usa\"],\"Indiana/Marengo\":[\"true¦america,e0indiana,marengo;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Petersburg\":[\"true¦america,e0indiana,petersburg;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Tell_City\":[\"true¦america,c0indiana,tell_city;entral standard time,st\",\"Central\",\"n\",\"usa\"],\"Indiana/Vevay\":[\"true¦america,e0indiana,vevay;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Vincennes\":[\"true¦america,e0indiana,vincennes;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Indiana/Winamac\":[\"true¦america,e0indiana,winamac;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"Inuvik\":[\"true¦america mountain,canada,inuvik,m0pddt;ountain0st,t;! 0;standard t0t0;ime\",\"Mountain\",\"n\",\"usa\"],\"Iqaluit\":[\"true¦america eastern,canada,e0iqaluit;astern0ddt,st,t;! 0;standard t0t0;ime\",\"Eastern\",\"n\",\"usa\"],\"Jamaica\":[\"true¦e3j1k0new k0;ingston;am0m;!aica;astern standard time,st\",\"Eastern\",\"n\"],\"Juneau\":[\"true¦a0juneau;k5laska0merica;! 1n0;! s1;juneau area,s0t1;tandard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"Kentucky/Louisville\":[\"true¦america0eastern 4k3l2wayne;!/0;k1l0;ouisville;entuc0;ky\",\"Eastern\",\"n\",\"usa\"],\"Kentucky/Monticello\":[\"true¦america,e0kentucky,monticello;astern standard time,st\",\"Eastern\",\"n\",\"usa\"],\"La_Paz\":[\"true¦bo1cochabamba,la paz,oruro,s0;anta cruz de la sierra,ucre;!l0t;!ivia0;! time\",\"Bolivia\",\"s\"],\"Lima\":[\"true¦arequiDc9huancCi8juliaca,lima,p2sant1t0;acna,rujillo;a anita   los ficus,iago de sur8;e0iura,ucallA;!r0t;!u0;! 0;standard t0t0;ime;ca,quitos;allao,hi1us0;co;cl0mbote;ayo;pa\",\"Peru\",\"s\"],\"Los_Angeles\":[\"true¦a05ba03c00fWgarden grove,hTirviSlMmoJnIoFp9r8s1tacoma,us0washington state;/06a;a1eattle,f,p0tocktTunrise manor;okaPringH;cramenHn0; 1ta 0;aTclariV;bernardiRdiego,fran0jo4;!cisco;ancho cucamonga,ePiver7;a0dt,ort7st,t;cific1radi0;se;! 0;standard t0t0;ime;ak1cean0regFxnard;side;land;evada,orth las8;des1reno0; valley;to;a3o0;ng6s0; 0_0;angeles;!s0; vegas;ne;enders1untington0; beach;on;onta2re0;mont,s0;no;na;ali1hula vis0;ta;!f1;ja calif0kersfield;ornia;merica0naheim;! 0;pacific\",\"Pacific\",\"n\",\"usa\"],\"Maceio\":[\"true¦a6br1e0maceio; south america s3ast south america;asilia0t;! 0;s0t1;tandard t0;ime;lagoassergipe,racaju\",\"Brasilia\",\"n\"],\"Managua\":[\"true¦c3man2ni0;!c0;!ar0;agua;entral standard time,st\",\"Central\",\"n\"],\"Manaus\":[\"true¦am4brazil3c0manaus;entral brazil0uiaba;!ian0;! s5;!/we2;azon0t;! 1as ea0;st;s0t1;tandard t0;ime\",\"Amazon\",\"s\"],\"Martinique\":[\"true¦a3f1m0;a1q,tq;fmt,ort de france,rench ma0;rtinique;st,tlantic standard time\",\"Atlantic\",\"n\"],\"Matamoros\":[\"true¦america central,c2heroica ma1m0nuevo laredo,reynosa;a0exico;tamoros;entral0st,t;! 0;standard t0t0;ime\",\"Central\",\"n\",\"usa\"],\"Mazatlan\":[\"true¦cAh8l7m0tep4;azatlAexic1ountain 0;mexico,standard time (mexico);an pacific 2o0;! pacif0/bajasur;ic;standard t0t0;ime;a paz,os mochis;np0p0;mx;hihuahua,uliac0;an\",\"Mexican Pacific\",\"n\",\"mex\"],\"Menominee\":[\"true¦america4c0menominee,wisconsin;entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Merida\":[\"true¦c3guadalajara,m0;e0onterrey;rida,xico0;! city;ampeche4entral 0st;mexic0standard 2;an,o0;! 0;time;!yucatán\",\"Central Mexico\",\"n\",\"mex\"],\"Metlakatla\":[\"true¦a0metlakatla;k5laska0merica;! 1n0;! s1;annette island,s0t1;tandard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"Mexico_City\":[\"true¦a0Lb0JcYduran0Cecatepec de morel0AguThSiQjalis0Nleon de los alda06mInHoGpEqDs9t4uruap04v2x1yucat04za0;catec0Cpop03;alapa de enriqu0Pi0Lochimil0L;e0illahermosa;nustiano carranza,racruz;a3e7la1o0uxt03;luUna02;huac,l0quepaque,xca01;nepant00pW;bas0Emaulip04pachuZ;an0oledad de graciano sanch0H; luis potosi,t0;a maria chimal0iago de q1;huQ;ueretaG;achuca de soIoza rica de7ue0;bSrto vallar04;axaJjo de agua;aucalpan07icolas romeCuevo le06;agdalena contrerUex4i2o0x;nterrey,rel0;ia,os;choHguel0; h5;!ico0;! 0/general,_0;city;rap5xtapalu9zta0;cUpalapa;idalJ;a1erre0stavo adolfo made0;ro;dalajara,naj0;ua0;to;ampeche,eFhiCiudad Ao3st,u0wt;au1ernava0;ca;htemoc,titlan izcalli;a4l2yo0;ac0;an;i0onia del valle;ma;cEhui0tzacoalc2;la;lopez mate0nezahualcoyotl;os;ap1lpancin0;go;as;laya,ntral 0;mexic0standard 2;an,o0;! 0;time;enito6uenavis0;ta;capulco3guascalientes,lvaro obreg2zcapotz0;al0;co;on; de0; juar0;ez\",\"Central Mexico\",\"n\",\"mex\"],\"Miquelon\":[\"true¦hBmAp8s0;aint pierre2pm,t pierre 0;& miquelon 0a5;s2t3;! 0;a2s0;tandard t0;ime;nd1;ierre0m; m0;iquelon;npm,pm\",\"St. Pierre & Miquelon\",\"n\",\"usa\"],\"Moncton\":[\"true¦a0canada,hepm,moncton,new brunswick;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Monterrey\":[\"true¦c8g6m3sa1t0victoria de durango;ampico,orreon;ltillo,n0; nicolas de los garza,ta catarina;exico1on0;clova,terrey;! city;omez palacio,uadal0;ajara,upe;entral 1iudad 0st;apodaca,general escobedo,madero,victoria;mexic0standard 2;an,o0;! 0;time\",\"Central Mexico\",\"n\",\"mex\"],\"Montevideo\":[\"true¦montevideo5u0;r1y0;!st,t;uguay0y;! 0;s1t2;! s0;tandard t0;ime\",\"Uruguay\",\"s\"],\"New_York\":[\"true¦a0Rb0Oc0Hd0Ge0Bf07g05hialeah,i02j00kZlexingtonYmUnMoKpIquHrDsAt7u5v3w0yonkers;ashington1est 0inston salem,orcD;raEvirgin04;! dc;ermont,irginia0;! beach;nited states,s0;!/0Ma;a0enne1he bronx,oleD;llaha0mpa;ssee;outh 1t0; petersburg,aten3;bo0CcC;a2hode1ichmo06och0;ester; is03;lei2;eens,intana roo;ennsylvanNhiladelphNittsbur0rovidence;gh;hio,rlan0;do;ew3or1y0;!c;folk,th c0;aroliE; 1_yo0a0port news;rk;hampshiXje8york0;! staT;a1eads,i0;ami,chig1;ine,nhatt0ryMssachusetts;an;! fayetO;entucky,nox9;acks2e0;rsey;ndia1r0;on5;na;eorg0reensboro;ia;ayette1l0ort lauderda2;!orida;vil0;le;ast0dt,st,t; flatbush,ern0;! 0;standard t0t0;ime;elawa9urham;ape coral,h3incinnati,leve1o0;lumbus,nnecticut;la0;nd;a0esapeake;rlot0ttanooga;te;altimo1o0rooklyn,uffalo;st4;re;kr2merica0tlanta;! 0;eastern;on\",\"Eastern\",\"n\",\"usa\"],\"Nipigon\":[\"true¦america eastern,canada,e0nipigon;astern0st,t;! 0;standard t0t0;ime\",\"Eastern\",\"n\",\"usa\"],\"Nome\":[\"true¦a0no5;k5laska0merica;! 1n0;! s1;s0ti1west;tandard ti0;me;st,t\",\"Alaska\",\"n\",\"usa\"],\"Noronha\":[\"true¦atlantic islands,brazil3f0n4;ernando de noronha 0nt;standard t0t0;ime;!/den0;oronha\",\"Fernando de Noronha\",\"n\"],\"North_Dakota/Beulah\":[\"true¦america,beulah,c0north dakota;entral standard time,st\",\"Central\",\"n\",\"usa\"],\"North_Dakota/Center\":[\"true¦america,c1merc0north dakota,oliv0;er;ent0st;er,ral standard time\",\"Central\",\"n\",\"usa\"],\"North_Dakota/New_Salem\":[\"true¦america,c1n0;ew_salem,orth dakota;entral standard time,st\",\"Central\",\"n\",\"usa\"],\"Nuuk\":[\"true¦america3g1nuuk,wg0;st,t;l,r0;eenland,l;!/godthab\",\"West Greenland\",\"n\",\"green\"],\"Ojinaga\":[\"true¦america5c4m0ojinaga;ountain0st,t;! 0;standard t0t0;ime;hihuahua,iudad juarez;! mountain\",\"Mountain\",\"n\",\"usa\"],\"Panama\":[\"true¦a3coral h,e2pa0san miguelito;!n0;!ama;astern standard time,st;merica/0t2;at1c0;aym1oral_harbour;ikok0;an\",\"Eastern\",\"n\"],\"Pangnirtung\":[\"true¦a4baffin island,canada,e0nunavit,pangnirtung;astern0st,t;! 0;standard t0t0;ime;ddt,merica eastern\",\"Eastern\",\"n\",\"usa\"],\"Paramaribo\":[\"true¦paramaribo,s0;r2ur0;!iname0;! time;!t\",\"Suriname\",\"n\"],\"Phoenix\":[\"true¦aAc8g6idaho,m4n3phoenix,s2t1u0wyoming;s/arAtah;empe,ucsC;cottsd4inaloa,onora;ayarit,ew mexico;aryv2esa,o0st,t,wt;nta6untain standard time;ilbert,lend0;ale;h0olorado;andler,ihuahua;merica2r0;izo0;na;!/crest0;on\",\"Mountain\",\"n\"],\"Port-au-Prince\":[\"true¦america eastern,cAe6h4p0;etionville,ort0; 0-au-1;au 0de paix;prince;aiti,t0;!i;astern0st,t;! 0;standard t0t0;ime;arrefour,roix des bouquets\",\"Eastern\",\"n\",\"usa\"],\"Porto_Velho\":[\"true¦am5brazil,c2porto0rondônia; 0_0;velho;entral brazil0uiaba;!ian0;! s3;azon0t;! 0;s0t1;tandard t0;ime\",\"Amazon\",\"n\"],\"Puerto_Rico\":[\"true¦a2bayam9p0;r0uerto rico;!i;merica0st,tlantic standard time;!/0;a5blanc-sabl4curacao,dominica,g3kralendijk,lower_princes,m2port_of_spa1st_0torto7virg1;barthelemy,kitts,lucia,thomas,vincent;in;arigot,ontserrat;renada,uadeloupe;on;n0ruba;guil0tigua;la\",\"Atlantic\",\"n\"],\"Punta_Arenas\":[\"true¦c0punta arenas,region of magallanes;hile0lt;! standard time\",\"Chile\",\"s\"],\"Rainy_River\":[\"true¦america4c0ft frances,rainy river;entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Rankin_Inlet\":[\"true¦america4c0rankin inlet;ddt,entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Recife\":[\"true¦aAbr4caruaru,e3jaboatao2olinda,p0;aulista,e0;rnambuco,trolina;! dos guararapes; south america s4ast south a6;a0t;silia0zil;! 0;s0t1;tandard t0;ime;merica\",\"Brasilia\",\"n\"],\"Regina\":[\"true¦c2regina,s0;askat0k;c2oon;anada0entral standard time,st;!/saskatc0;hewan\",\"Central\",\"n\"],\"Resolute\":[\"true¦america4c0resolute;entral0st,t;! 0;standard t0t0;ime;! central\",\"Central\",\"n\",\"usa\"],\"Rio_Branco\":[\"true¦a1brazil0rio branco;!/1;c1merica/porto_0;acre;re0t;! 0;standard t0t0;ime\",\"Acre\",\"s\"],\"Santarem\":[\"true¦br1e0pará west,santarem; south america s4ast south america;a0t;silia0zil;! 0;s0t1;tandard t0;ime\",\"Brasilia\",\"n\"],\"Santiago\":[\"true¦aAc4iquique,la pintana,puente alto,rancagua,san3t1v0;alparaiso,ina del mar;alca0emuco;!huano; bernardo,tiago;h1l0oncepcion;!st,t;ile0l;! 0/continental;standard t0t0;ime;ntofagasta,rica\",\"Chile\",\"s\",\"chile\"],\"Santo_Domingo\":[\"true¦a8bella vista,do6la romana,s0;an0dmt; pedro de macoris,t0;iago de los caballeros,o domingo0;! 0;e0oe0;ste;!m0;!inican republic;st,tlantic standard time\",\"Atlantic\",\"n\"],\"Sao_Paulo\":[\"true¦a16b0Tc0Md0Je0Hf0Fg0Ahortol09i05j02l01mXnVosasco,pLriFs4ta3uber2v0;i0olta redon1A;amao,la velha,tor16;a0Ml06;boao da ser00uba10;a2e1oroNu0;maLzano;rXte lago0L;nt4o 0;bernardo do campo,carl03jo0leopolLpaulo,vicE;ao de meriti,se0;! do0; rio p8s camp00;a 1o0; andDs;barbara d'oes0Pluz0Tmar0T;beirao 3o0;! 0;cla0de janei0g6ver7;ro;das nev07p0;reto;asso fun8e7iraci6lanalti0Oo4r0;aia g1esidente prud0;en0G;ran0;de;nta grossa,rto aleg0;re;caW;lotYtro0F;do;iteroi,ov0;aJo hamburgo;a1o0;gi das cruzSntes clarD;ri0ua;l07n6;imei2ondri08;acarei,oinville,u0;iz de fo0ndi9;ra;ndaia2patin1ta0;bor6pevi,quaquece1;ga;tuG;andY;o3ravat2uaru0;ja,lh0;os;ai;iSvernador valadarC;loria5oz do0ran2; iguacu; south america sHast south ameri0mbu;ca;i0uque de caxi8;adema,vi0;noN;a1o0uriti2;ntagem,tK;choeiro de itapemirDmp1no3rapicui0scavel,xias do sul;ba;in1os dos goytacaz0;es;as;aBe7lumenau,r0;!a0st,t;!silia1zil0;!/east;! 0;s0t1;tandard t0;ime;l1t0;im;ford roxo,o horizon0;te;rueri,uru;lvora4merica3na2parecida de goi0;an0;ia;polis;na;da\",\"Brasilia\",\"s\"],\"Scoresbysund\":[\"true¦e3greenland2h0ittoqqortoormiit,scoresbysund;e0neg;eg,g;! eastern;ast greenland1g0;st,t;! 0;standard t0t0;ime\",\"East Greenland\",\"n\",\"eu0\"],\"Sitka\":[\"true¦a0sitka;k6laska0merica;! 1n0;! st2;s0t2;itka area,t0;andard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"St_Johns\":[\"true¦canada7h5n0st johns;d3ewfoundland0st,t;! 0;labrador,standard t0t0;ime;dt,t;e0n0tn;tn;!/newfoundland\",\"Newfoundland\",\"n\",\"usa\"],\"Swift_Current\":[\"true¦c1s0;askatchewan,wift current;anada,entral standard time,st\",\"Central\",\"n\"],\"Tegucigalpa\":[\"true¦c2h0san pedro sula,tegucigalpa;n0onduras;!d;entral standard time,st\",\"Central\",\"n\"],\"Thule\":[\"true¦a0pituffik,thule;st,t0;!lantic0;! 0;standard t0t0;ime\",\"Atlantic\",\"n\",\"usa\"],\"Thunder_Bay\":[\"true¦canada,e0thunder bay;astern0st,t;! time\",\"Eastern\",\"n\",\"usa\"],\"Tijuana\":[\"true¦america8baja california,eAh6mexic4p0tijuana;acific0st,t;! 0;standard t0t0;ime;ali,o0;!/bajanorte;e0n0;nomx; pacific,/0;e0santa_isabel;nsenada\",\"Pacific\",\"n\",\"usa\"],\"Toronto\":[\"true¦americaGbEcaBe7gatineIhamilFkitchener,l4m3nepe2o0quebec,richmond hill,toronto,vaugh2windsor;n5sh0tt0;awa;an;arkham,ississauga,oF;avFon0;don on0gueuil;tario;astern0st,t;! 0;standard t0t0;ime;!n0;!ada0;!/7;arrie,ramp0;ton; 4/0;mo1nass0;au;ntre0;al;eastern\",\"Eastern\",\"n\",\"usa\"],\"Vancouver\":[\"true¦america 9b7ca5ladn4okanagan,p1surrey,v0yukon;ancouv3ictor7;acific0st,t;! 0;bc,standard time;er;!nada0;!/2;ritish columb0urnaby;ia;pacific\",\"Pacific\",\"n\",\"usa\"],\"Whitehorse\":[\"true¦canada1m0whitehorse,yst;ountain standard time,st;!/yukon\",\"Mountain\",\"n\"],\"Winnipeg\":[\"true¦america 7c2m1w0;est m0innipeg;anitoba;anada3entral0st,t;! 0;standard t0t0;ime;!/0;central\",\"Central\",\"n\",\"usa\"],\"Yakutat\":[\"true¦a0y4;k6laska0merica;! 1n0;! s2;s1t2y0;akutat;tandard t0;ime;st,t\",\"Alaska\",\"n\",\"usa\"],\"Yellowknife\":[\"true¦america mountain,canada,m0yellowknife;ountain0st,t;! 0;standard t0t0;ime\",\"Mountain\",\"n\",\"usa\"]},\"Antarctica\":{\"Casey\":[\"true¦antarctica,cas0;ey,t\",\"Casey\",\"s\",\"ant\"],\"Davis\":[\"true¦a1dav0;is,t;ntarctica,q,ta\",\"Davis\",\"s\"],\"Macquarie\":[\"true¦a2canberra,eastern australia6m0sydney;acquarie0elbourne;! island;e4ntarctica,us0; east0tralia eastern;!ern0;! standard0; time;st,t\",\"Eastern Australia\",\"s\",\"aus\"],\"Mawson\":[\"true¦antarctica,maw0;son,t\",\"Mawson\",\"s\"],\"Rothera\":[\"true¦a1b0city of b0rothera;uenos aires;ntarctica1r0;gentina,st,t;!/palmer\",\"Argentina\",\"s\"],\"Troll\":[\"true¦antarctica,g2troll0;! 0;research station,t1;mt,reenwich mean t0;ime\",\"Troll\",\"s\",\"troll\"],\"Vostok\":[\"true¦antarctica,vost0;!ok\",\"Vostok\",\"s\"]},\"Asia\":{\"Almaty\":[\"true¦a6central asia,east kazakhstan time,k2nur sultan,p1s0taraz,ust kamenogorsk;emey,hymkent;avlodar,etropavl;a0z;ragandy,z0;!akhstan0;! eastern;lm1s0;ia,tana;a0t; ata,ty\",\"East Kazakhstan\",\"n\"],\"Amman\":[\"true¦a2eet,irbid,jo0russeifa,wadi as sir,zarqa;!r0;!d1;mm0sia;an\",\"Eastern European\",\"n\",\"jord\"],\"Anadyr\":[\"true¦a0petropavlovsk kamchatsky;na0sia;dyr0t;! time\",\"Anadyr\",\"n\"],\"Aqtau\":[\"true¦a1kazakhstan western,mangghystaū/mankis3tashkent,west 0;asia,kazakhstan5;lm2q1s0;hgabat,ia;tau;a0t; ata,-ata0; time\",\"West Kazakhstan\",\"n\"],\"Aqtobe\":[\"true¦a1kazakhstan western,tashkent,west 0;asia,kazakhstan5;kto5lm2qt1s0;hgabat,ia;o3ö3;a0t; ata,-ata0; time;be\",\"West Kazakhstan\",\"n\"],\"Ashgabat\":[\"true¦as4t0;km,m2urkmen0;a4istan0;! time;!st,t;hga1ia0;!/ashkhabad;bat\",\"Turkmenistan\",\"n\"],\"Atyrau\":[\"true¦a1gur'yev,kazakhstan western,tashkent,west 0;asia,kazakhstan6;lm3s2t0;irau,yra0;u,ū;hgabat,ia;a0t; ata,-ata0; time\",\"West Kazakhstan\",\"n\"],\"Baghdad\":[\"true¦a6ba5dihok,erbil,i3k2mosul,na1r0;amadi,iyadh;jaf,sirC;arbala,irkuk,uwait;q,r0;aq,q;ghdad,sr9;bu ghurayb,d diw6l 5rab1s0; sulaym5ia,t;!i0;a0c;!n0;! time;amar2basrah al qadim2falluj2hill2kut,mawsil al jadid2;an0;iy0;ah\",\"Arabian\",\"n\"],\"Baku\":[\"true¦a0baku,ganja,lankaran,sumqayit;sia,z0;!e0t;!rbaijan0;! time\",\"Azerbaijan\",\"n\"],\"Bangkok\":[\"true¦asiaAbangkok,ch7h5i3jakarta,mueang nontha8na2pak kret,s0udon thani;amut prakan,e0i racha,outh east0; asia;khon ratchasima,m di9;ct,ndochina0;! time;a0ue;iphong,noi,t y2;iang m1on 0;buri;ai;!/0;phnom_pe0vientiane;nh\",\"Indochina\",\"n\"],\"Barnaul\":[\"true¦a3b2kra0north a3;snoyarsk0t;! time;arnaul,iysk;sia\",\"Krasnoyarsk\",\"n\"],\"Beirut\":[\"true¦asia,bei3e2l0ra's bay3;b0ebanon;!n;astern european time,et,urope eastern;rut\",\"Eastern European\",\"n\",\"leb\"],\"Bishkek\":[\"true¦asia,bishkek,k0osh;g2yrgy0;stan,zstan0;! time;!t,z\",\"Kyrgyzstan\",\"n\"],\"Brunei\":[\"true¦asia,b0;dt,n2r0;n,unei0;! darussalam time;!t\",\"Brunei Darussalam\",\"n\"],\"Chita\":[\"true¦asia,chita,yak0;t,utsk0;! time\",\"Yakutsk\",\"n\"],\"Choibalsan\":[\"true¦as2choibalsan,dornodsükhbaatar,mongol2ula0;anbaatar0t;! time;ia\",\"Ulaanbaatar\",\"n\"],\"Colombo\":[\"true¦as6c4dehiwala mount lavin6i2kolkata,lk1m0new delhi,sri lanka;oratuwa,umb4;!a;ndia0st;! time,n;henn0olombo;ai;ia\",\"India\",\"n\"],\"Damascus\":[\"true¦a4d3eet,h2latak5sy0;!r0;!ia;am3oms;amascus,eir ez zor;leppo,r raqq1s0;ia;ah\",\"Eastern European\",\"n\",\"syr\"],\"Dhaka\":[\"true¦asiaGbDcBd9jess8khul7mymensingh,na4pa3ra2s1t0;angail,ungi;aid8hib4ylhet;jshahi,ng7;b3ltan,r naogaon;gar5r0t3;ayan0singdi;ganj;na;ore;haka,inaj0;pur;hattogram,o0;milla,x's bazar;a0d,gd,ogra,st;gerhat,ngladesh0rishal;! time;!/dacca\",\"Bangladesh\",\"n\"],\"Dili\":[\"true¦asia,dili,east timor1tl0;!s,t;! time\",\"East Timor\",\"s\"],\"Dubai\":[\"true¦a5dubai,g3mus1om0ras al khaim2sharj2;!an,n;aff0c5;ah;st,ulf0;! time;bu dhabi,jm2rabi2sia0;!/musc0;at;an\",\"Gulf\",\"n\"],\"Dushanbe\":[\"true¦asia,dushanbe,t0;ajikistan1j0;!k,t;! time\",\"Tajikistan\",\"n\"],\"Famagusta\":[\"true¦asia,e0famagusta,northern cyprus;astern european time,et,urope eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Gaza\":[\"true¦asia,eet,gaza2p0;alestine,s0;!e;! strip\",\"Eastern European\",\"n\",\"pal\"],\"Hebron\":[\"true¦asia,e0hebron,west bank;ast jerusalem,et\",\"Eastern European\",\"n\",\"pal\"],\"Ho_Chi_Minh\":[\"true¦asia7bien hoa,can tho,da 5ho3nha tr6qui nh8rach gia,sa dec,thi xa phu my,v0;ietnam1n0ung tau;!m;! south; chi 0_chi_0;minh;lat,n0;ang;!/saig0;on\",\"Indochina\",\"n\"],\"Hong_Kong\":[\"true¦asia,h0kowloon,tsuen wan;k3ong0; kong1_k0k0;ong;! time;!g,st,t\",\"Hong Kong\",\"n\"],\"Hovd\":[\"true¦as4bayan-ölgiigovi-altaihovduvszavkhan,hov2west0; 0ern 0;mongol2;d0t;! time;ia\",\"Hovd\",\"n\"],\"Irkutsk\":[\"true¦a2brat3irk0north asia east,ulan ude;t,utsk0;! time;ngar0sia;sk\",\"Irkutsk\",\"n\"],\"Jakarta\":[\"true¦aZbTcRdepQiNjKkediri,lJmGpArengasdengklQs4t2w0yogyakM;est0ib; indoneXern indonesia time;a0egal;n4sikmal3;ema4itubondo,outh tan3u0;kabumi,medaSra0;b0kF;aya;ge0;raO;a4e1robolinggo,urw0;akAokerto;ka1ma0rcut;laKtangsiantar;long2nbaru;daIl3mulaIruI;a1ed0;an;diun,laF;embaE;a0ember;k0mbi,vasumatra;arta;d1ndonesia0;! western;!n;ok;i0urug;ampea,bino5leungsir,mahi,putat,rebon;a1e0injai,ogor;kasi,ngkulu;nd0tam;a0u1; aceh,r lampu0;ng;sia\",\"Western Indonesia\",\"s\"],\"Jayapura\":[\"true¦a2east1indonesia eastern,jayapura,m0new guinea,wit;alukus,oluccas; indones1ern indonesia time;mbon,s0;ia\",\"Eastern Indonesia\",\"s\"],\"Jerusalem\":[\"true¦as7beersheba,haifa,i2j0petah tiqwa,rishon leziyyon,tel 9west je1;e0mt;rusalem;d3l,s0;r0t;!ael0;! time;dt,t;hdod,ia0;!/tel_0;aviv\",\"Israel\",\"n\",\"isr\"],\"Kabul\":[\"true¦a1herat,jalalabad,ka0mazar e sharif;bul,ndahar;f0sia;!g0t;!hanistan0;! time\",\"Afghanistan\",\"n\"],\"Kamchatka\":[\"true¦a2kamchatka,pet0;ropavlovsk0t; kamchatsky,-kamchatski time;nadyr,sia\",\"Petropavlovsk-Kamchatski\",\"n\"],\"Karachi\":[\"true¦asia,bLchiniKdera ghaziIfaisalHgujraGhyderHislamHjhang sadr,kElaDm8nawabshah,okaBp4quetta,ra3s0;a1h0ialkJukkN;ahkIekhupu9;ddiqEhiwal,rgodha;him yarEwalpindi;ak1eshawar,k0;!t;!istan0;! time;a3i1u0;lt9zaffar7;ngo0rpur khas;ra;lir cantonment,rd6;hore,rkana;a0otli;moke,rachi,s8;n5t;abad; kh0;an;ot;a1himber,ure0;wala;hawalp0ttagram;ur\",\"Pakistan\",\"n\"],\"Kathmandu\":[\"true¦asia3biratnagar,kath4n1p0;atan,okhara;epal,p0;!l,t;!/kat0;mandu\",\"Nepal\",\"n\"],\"Khandyga\":[\"true¦asia,khandyga,yak0;t,utsk0;! time\",\"Yakutsk\",\"n\"],\"Kolkata\":[\"true¦0:3D;1:3L;2:2D;3:3M;4:3J;a35b2Dc24d1We1Uf1Sg1Fh1Ci18j13k0Pl0Km0Cn05odis3KpVquthbull3DrNsFt9u8v5warang2Myamun1P;a6el1Ui5;jayawa2Vsakha0HzianagC;doda2Orana11;daip0jja23lhasn1ttar pradesh;a8eXh7iru5umk0;chirap0Mnelve2p5vottiy0;a39p0;ane,iruvananthapur0Noothuku2Yriss0;mb5njo1X;ar0L;aBecunder4h9i8lst,o7r1Fu5;jan37r5;at,endr1C;l2Znip2N;k3liguKngrau2rJ;ahj1Zi5ri2Oya0L;mo1Mvaji07;har1Xlem,mbh24ng2t04ug0Y;a6e0Eoh5;iItak;ebare2i9j7m5nc1Gtl0Aurke37;ag5g5p0;und08;a5kot;hmund26sth2A;ch0p0;a9imp8roddat0u5;ducher23n5rn17;a5e;sa;ri;li,n7rbha6t5;ia2Vna;ni;chku2Ti5;ha2Gp21;a7e6izam4o5;i1Vwrang2B;l0Sw del0Y;di2Kg7i0Ejaf2Fn5re2Oshik,vi mumb15;ded,g5;i,loi j1V;ercoil,p0;a8eerut,irz25o7u5yso0Y;lugu,mb10rwa1Izaffar5;n1p0;nghyr,rad4;chili7d6harasht1Fleg07n5thu1Fu;ga0Iip0;hya,ur0V;patnG;a7u5;cknow,dhia5;na;l bahadur5t0; n1;aDhaBo8u5;kat6lt5rno1P;a2i;pal2;l5rWta,zhikode;h1Nka1Kl5;am;nd5ragp0;wa;kina13l8marOnp0r5shmir,tih3;i6na5ol ba18;l,tV;mn1;lakuric03y11;a6han5odNunagadh;si;b0Rip0l6m5;mu,n1shedp0;andh3gGna;chalkaranji,mph0In5st;!d5;!ia5o00;! time,n;a6is3ospet,u5;b2g2;o0Hp0ridw3;aChazi4o9reater noi0Mu6wali5y04;or;jar0OlbarQnt0rg6wa5;ha12;aon;rak6sa5;ba;hp0;juw8n5ya;dh6g5;an1;in1;aka;ar5iroz4;id4rukh4;l5taw0M;loF;aAe8h6indigul,ombOurg5;!ap0;anb0Uul5;ia;hra dun,l5was;hi;rbhan5vange8;ga;a09h8o5uttack;ch6imbato5;re;in;a6enn5;ai;nd5pL;a5i0C;!nn1;aNeKhBi9or7rahm04u5;landshahr,rh5;anp0;iv2;li;d3har sharif,jZkan07l5;asp0imoC;aAi7op6u5;baneshw3sav5;al;l6wan5;di,i;ai,wa6;g6ratp0tpa5vn1yand3;ra;alp0;l5ngaluru;gaum,la5;ry;hAli,r6thin5;da;a6ddham5eilly;an;n1s5;at;a6rai5;gh;ramp0;gQhmLizawl,jmKkoRlHmDnantCrrBs6urang4va5;di;ans8ia5;!/ca5;lcut5;ta;ol;ah;ap0;arnath,batt0r5;ava5its3o9;ti;ur;appuz6i5lah4w3;garh;ha;er;adn1ed4;ab5;ad;ag3;ar;arta5ra;la\",\"India\",\"n\"],\"Krasnoyarsk\":[\"true¦a2kra0north a2;snoyarsk0t;! time;sia\",\"Krasnoyarsk\",\"n\"],\"Kuala_Lumpur\":[\"true¦aHbukit mertajGgeorge town,ipoh,johor bahFk8m4petali3s0taipiE;e1hah alFu0;ba1ngai petani;paBremb7;ng jaya;ala1y0;!s,t;cca,ysia0;! time;ampung baru suba5la5ota bha6ua0;la1nt0;an; 0_l1;l0terengganu;umpur;ng;ru;am;lor setar,sia\",\"Malaysia\",\"s\"],\"Kuching\":[\"true¦asia,k4m2s0tawau;a0ibu;bahsarawak,ndakan;alaysia0iri,yt;! time;ota kinabalu,uching\",\"Malaysia\",\"n\"],\"Macau\":[\"true¦asia6beiji5c2hong ko5m0urumqi;ac0o;!au;h0st;ina0ongqi1;! time;ng;!/macao\",\"China\",\"n\"],\"Magadan\":[\"true¦asia,mag0;adan0t;! time\",\"Magadan\",\"n\"],\"Makassar\":[\"true¦asiaBba8c5denpa4indonesia central,k3l2ma1palu,s0wita;amarinda,ulawesi;kas2nado,taram;abuan bajo,oa jan7;endari,up8;sar;e0ity of bal3;lebesbalinusa,ntral indonesia0;! time;l0njarmasin;ikpap0;an;!/ujung_pand0;ang\",\"Central Indonesia\",\"s\"],\"Manila\":[\"true¦a04bWcRdaPgeneral santOiMlJmCnaBoAp4quezIsan1ta0zamboanga;clobZguig,rlac,ytE; 1t0;a ro2ol;fernando,jose del monte,pab02;a3h1uerto prince0;sa;!ilippine0l,st,t; time,s;gadiRnalanoy,s0;ay,ig;longapo,rmoc;ga,votQ;a0eycauayN;balacat,gugpo poblaci4kati,l3n0;da1ila,silingLtamp0;ay;luyong,ue;ingDol6;on;a1egaspi,i0ucena;bertad,pa;pu lapu,s p4;l0mus;igCoiI;os;smar0v5;inB;a0ebu,otabato;b1gayan de oro,in5l0;amba,ooc6;anatu5uy0;ao;a4inan2u0;d0tu2;ta;!gon0;an;co1guio,tang0;as;lod,or;n0sia;geles,tipo0;lo\",\"Philippine\",\"n\"],\"Nicosia\":[\"true¦a5cy3e0n2;astern european time,et,urope0; eastern,/n0;ico2;!p0;!rus;sia\",\"Eastern European\",\"n\",\"eu3\"],\"Novokuznetsk\":[\"true¦a5k2no0prokop'yev1;rth a4vokuznet0;sk;emerovo,ra0;snoyarsk0t;! time;sia\",\"Krasnoyarsk\",\"n\"],\"Novosibirsk\":[\"true¦as3no0siber3;rth central as2v0;osibirsk0t;! time;ia\",\"Novosibirsk\",\"n\"],\"Omsk\":[\"true¦asia,oms0;k0t;! time\",\"Omsk\",\"n\"],\"Oral\":[\"true¦a2kazakhstan western,oral,tashkent,west 0;asia,kazakhstan0;! 4;lm1s0;hgabat,ia;a0t; ata,-ata 0;time\",\"West Kazakhstan\",\"n\"],\"Pontianak\":[\"true¦asia,b2indonesia western,pontianak,tanjung pinang,w0;est0ib; b0ern indonesia time;orneo\",\"Western Indonesia\",\"n\"],\"Pyongyang\":[\"true¦asia,chongjin,h7k4n3p2s0won8;ariw0eoul,inuiAunch'0;on;rk,yongya7;amp'o,orth korea;a1orea0p,st;!n time;eso3nggye;a1ungnam,ye0;san;e1mhu0;ng;ju\",\"Korean\",\"n\"],\"Qatar\":[\"true¦a2doha,kuwait,qa0riyadh;!t0;!ar;r2s0;ia0t;!/bahrain; rayyan,ab0;!i0;a0c;!n0;! time\",\"Arabian\",\"n\"],\"Qostanay\":[\"true¦a2central asia,east kazakhstan time,k0qo1;azakhstan eastern,o0;stanay;lmt,s0;ia,tana\",\"East Kazakhstan\",\"n\"],\"Qyzylorda\":[\"true¦a4k1qy2tashkent,west 0;asia,kazakhstan7;azakhstan western,y0zyl-1;zyl0;orda;lm1s0;hgabat,ia;a0t; ata,-ata0; time\",\"West Kazakhstan\",\"n\"],\"Riyadh\":[\"true¦a9burayd8dammam,ha7jedd8k6me5najran,riyadh,s4ta3y0;anbu,e0;!m0;!en;'if,buk;ultan3yot;cca,dina;hamis mush6uw6;'il,far al batin;ah;bha,l 8ntarctica/syowa,rab4s0;ia0t;!/0;aden,kuw0;ait;!i0;a0c;!n0;! time;hufuf,jubayl,kharj,mubarraz\",\"Arabian\",\"n\"],\"Sakhalin\":[\"true¦asia,sak0yuzhno sakhalinsk;halin0t;! 0;island,time\",\"Sakhalin\",\"n\"],\"Samarkand\":[\"true¦asia,bukhara,nukus,qarshi,samarkand,uz0;bekistan0t;! 0;time,west\",\"Uzbekistan\",\"n\"],\"Seoul\":[\"true¦aPbuMchHdaeGgChwaseoRiBjeAk7m6pohaFrok,s2u1wonJy0;aCeosu;ijeongbuQlsL;e1outh korea,u0;nEwH;joAo0;ngnamMul;asGokpo;imhae,or0r,st,wangmyo7;!ea0;!n time;ju,on8;cCksBn6;angneu2oyaEu1wa0;ng5;mi,ns8riD;ng;gu,je4;angw3eon2in1un0;che2;ju;an,gju7;on;c1s0;an;heon3;n0sia;san1ya0;ng0; si\",\"Korean\",\"n\"],\"Shanghai\":[\"true¦0:3J;1:36;2:34;3:37;4:3D;a3Cb31c2Nd2He30f2Cg26h1Qji1Ek1Bl0Ym0Wn0Tordos,p0Pq0Lrizh10s08t01u3FwSxLyEz5;aoCh6i5ouc3unyi;bo,go0;a7en6ouk2u5; c3h31maWzh2;g2Vj1Izh2;b1Vng5o3E;jiakou5zh2;! shi xuanhua qu;ya0z27;an9i7u5;ci,e18n5;c3fu;b4c9n5ya0;cZgk2;c3g5ji,t2Q;j17qu1sh16zh2;i6uc5;ha0;a6n5uyi0;di,gt2Lh1Gi0pu,t2Lx13ya0;m17n5;!g5ni0t0Eya0;t1ya0;aBe9u5;h6so0w1Cx5zh2;i,ue;a5u;i,n;i0Hn5;sh1zh2;fang5nxi1;di1;a8i6ong5;chuans0XhDli02sh1;an5eli0;j4sh10;i6ng5;gu,sh1;an,hec1Wyu1zh2;anmi0hAi8u5;i5zh2;h5zh2;ua;c5pi0;hu1;a7en6i5uangya14;jiaz15qi,y1;gli,ya0zh0G;n6o5s0I;gu1xi0;g5t2;h1Pqiu,rKyu;i5uan1J;aFn5o14qih1Y;g5huangdH;dGh1L;an0Ting7rc,u5;ti1yang5;! H;ding0QxZ;an5eijYingbo;ch5ji0ni0to0ya0;a0o0;entoug2ianRuda5;njU;aEi8u5;anc3o6qi5;ao;he,ya0;a7jPn5upansh02;fTxia 5yi;chengguanI;n0Do5;c3y5;a0u1;i0Wn5ohek2;g5zh2;fa0;ai6un5;mi0sh1;fe0yu1;'1aAe9l4n6u5xi;jCt0U;an,c3g5i0zh2;de5li0zh2;zhE;ya0;musi,n8o5xi0;j6z5;uo;ia0;g5shG;m7xi;aGeCkt,oBu5;a6i0Dlan ergi,m5n1;en;i7ng5y4;ga0s5;hi;'1b9n1;hhot,ng ko0;bi,f7ga0ng5ze;sh5ya0;ui;ei;i7n5rb4;d1g5;u,zh2;c3k2l0F;a9u5;an6i5li;l4ya0zh2;g5k2;do0yu1zh2;nsu,opi0;en7o6u5;ji1shQx4zh2;sh1;d2g5;hua0;a6eNong5;gu1hR;d6lian5ndo0qi0to0;!g;o5uk2;nghN;angHh5n,st,t;aAen7i5n,oZuG;fe0na5;! time;g5zh2;d5zho0;e,u;ng6o5;ya0zh2;ch7de,sh6zh5;i,ou;a,u;un;zh2;a9e5;i6n5;gbu,xi;'1h5ji0;ai;i7o5yan nur;di0t2;ou;c3sh1y4;an;he0;nDsia5;!/5;ch8harb4kashg6u5;rumqi;ar;in;o5ungki0;ng5;qi0;da,qi0sh5ya0;an,un;ng\",\"China\",\"n\"],\"Singapore\":[\"true¦asia,kuala lumpur,s0woodlands;g0ingapore;!p,t\",\"Singapore\",\"s\"],\"Srednekolymsk\":[\"true¦asia,chokurdakh,sre0;dnekolymsk,t\",\"Srednekolymsk\",\"n\"],\"Taipei\":[\"true¦asia,banqiao,cst,h7k5roc,t0;a1w0;!n;i0oyu1;ch2n0pei,w0;an;aohsi0eel0;ung;sinchu,ualien\",\"Taipei\",\"n\"],\"Tashkent\":[\"true¦a3namangan,qo`q4tashkent,uz0;!b0t;!ekistan0;! east;ndij0sia;on\",\"Uzbekistan\",\"n\"],\"Tbilisi\":[\"true¦asia,ge1kuta0tbil0;isi;!o0t;!rgia0;!n\",\"Georgia\",\"n\"],\"Tehran\":[\"true¦aQbMgorgWhamViKkCmaBn8orumiy7pasragad branch,q4rasht,s2t1varam6yazd,za0;hedVnjV;abHehrU;a0hirRirjT;bzevar,nandEri,v3;a0om;rchak,zv0;in;eh;a0eyshabur;jaf0zar0;ab4;layer,shh3;a4erman3ho0;meyni sDrram0wy;ab0sC;ad;!shah;h1r0;aj;riz;r0sfahB;!an,dt,n,st;a2irjand,o0uk9;jnu0ruje0;rd;b3ndar abbas;b4hv3m2r1sia,zads0;hahr;ak,dabil;ol;az;ad0;an\",\"Iran\",\"n\"],\"Thimphu\":[\"true¦asia2b0thimphu;hutan,t0;!n;!/thimbu\",\"Bhutan\",\"n\"],\"Tokyo\":[\"true¦0:11;1:1A;2:10;a18ch16fu0Zgifu14h0Oi0Ij0FkZmTnMoKsFt9u8waka05y3;a6o3;k3no;kaic1Co3;ha2su0;maKo;ji,tsun0F;aka7o3sukuba;k5makom05y3;a2o3;hOna0ta;oro03us0Qyo;m0Jrazu0sa1tsu1;a5end00hi4o0u3;i10zu0;monose1zuo0;ita2k3ppoLsebo;ai,u06;dawa05i0Wka3sa0t0E;ya2za1;a6eyaga0Qi3umazu;i4shi3; tokyo0Inomiya ha2;ga0R;g3ha,ra0G;a3oX;no,o0sa1;a5i3orio0;na3to,yaza1;mirinkOto;chiDeb4tsu3;do,m8ya2;as0J;aBi9o7u3y6;mam5r4shi3;ro;ashi1e,ume;oto;be,c0Dfu,ri3shigaK;ya2;shiwa3takyushu;da;gosVkogawacho honmKmirenjaku,na8s5wa3;g3sa1;oe,uc07;hi01u3;g3kabe;ai;zaY;ap4dt,oetJp3st;!n;an;bara1chi4ta3wa1zu3;mi;ha5n3;omi3;ya;ra;a8i3oncho;meBr4t3;acR;a4os3;a1hi2;kaNtsu0;chi5kodate,mam3;at3;su;nohe,o3;ji;ji8ku3;i6o0s3ya2;hi2;ma;ka; sD;!sa7;i3ofu;ba,g6;geoshimo,k7mag5njo,omori,s3tsugi;ahika3ia;wa;asa1;ki;as4i3;ta;hi\",\"Japan\",\"n\"],\"Tomsk\":[\"true¦asia,oms0tomsk;k,t\",\"Omsk\",\"n\"],\"Ulaanbaatar\":[\"true¦asia3m1ula0;anbaatar,n 3t;n0ongolia;!g;!/ulan_0;bator\",\"Ulaanbaatar\",\"n\"],\"Ust-Nera\":[\"true¦asia,ust-nera,vla0;divostok,t\",\"Vladivostok\",\"n\"],\"Vladivostok\":[\"true¦asia,k1vla0;divostok,t;habarovsk0omsomolsk on amur;! vtoroy\",\"Vladivostok\",\"n\"],\"Yakutsk\":[\"true¦asia,blagoveshchen1yak0;t,ut0;sk\",\"Yakutsk\",\"n\"],\"Yangon\":[\"true¦asia4b3kyain seikgyi township,m0nay pyi taw,pathein,sittwe,yang5;a1eiktila,m0onywa;!r,t;ndalay,wlamyine;ago,urma;!/rango0;on\",\"Myanmar\",\"n\"],\"Yekaterinburg\":[\"true¦asia,chelyabin7eka5k4magnitogor7nizhn3or2perm,s1tyumen,ufa,yek0zlatoust;a4t;terlitamak,urgut;e3sk;evartov3y tagil;amensk ural'skiy,urgan;teri0;nburg;sk\",\"Yekaterinburg\",\"n\"],\"Yerevan\":[\"true¦a0caucasus,yerevan;m2rm0s1;!en0;ia;!t\",\"Armenia\",\"n\"]},\"Atlantic\":{\"Azores\":[\"true¦a0hmt;tlantic,zo0;res,st,t\",\"Azores\",\"n\",\"eu0\"],\"Bermuda\":[\"true¦a2b0;ermuda,m0;!u;st,t0;!lantic\",\"Atlantic\",\"n\",\"usa\"],\"Canary\":[\"true¦atlantic,canary1europe western,las palmas de gran canaria,santa cruz de tenerife,we0;stern european,t;! islands\",\"Western European\",\"n\",\"eu1\"],\"Cape_Verde\":[\"true¦atlantic,c0;a1pv,v0;!t;bo verde0pe verde;! is\",\"Cape Verde\",\"n\"],\"Faroe\":[\"true¦atlantic2f0;aroe0o,ro;! islands;!/faeroe\",\"Western European\",\"n\",\"eu1\"],\"Madeira\":[\"true¦atlantic,europe western,madeira1we0;stern european,t;! islands\",\"Western European\",\"n\",\"eu1\"],\"Reykjavik\":[\"true¦atlantic,coordinated universal3g2i0reykjavik,utc,zulu;celand,s0;!l;mt,reenwich mean0; time\",\"Greenwich Mean\",\"n\"],\"South_Georgia\":[\"true¦atlantic,gs1s0;gs,outh georgia;!t\",\"South Georgia\",\"n\"],\"Stanley\":[\"true¦atlantic,f0stanley;alkland1k0lk;!st,t;! island0;!s\",\"Falkland Islands\",\"s\"]},\"Australia\":{\"Adelaide\":[\"true¦a2cen0south 1; 0tral 0;australia;c2delaide,ustralia0;! 0/south,n 0;central;dt,st,t\",\"Central Australia\",\"s\",\"aus\"],\"Brisbane\":[\"true¦a1brisbane0gold coast,logan,q4townsville;! time;e3ustralia0;!/q1n east0;!ern;ueensland;dt,st\",\"Brisbane\",\"s\"],\"Broken_Hill\":[\"true¦a1broken_hill,cen0y3; australia standard time,tral australia;c2delaide,ustralia0;! central,/y0;ancowinna;st,t\",\"Central Australia\",\"s\",\"aus\"],\"Darwin\":[\"true¦a0darwin,northern territory;cst,ustralia0;!/north,n central\",\"Australian Central\",\"s\"],\"Eucla\":[\"true¦a0cw4eucla;cw4us0; central w1tralia0;!n central western;!e0;st;dt,st,t\",\"Australian Central Western\",\"s\"],\"Hobart\":[\"true¦a0canberra,eastern austral5hobart,king island,melbourne,sydney,t4;e8us0; east5tralia0;! 3/0n 3;currie,t0;asman0;ia;easte1;!e0;rn;st,t\",\"Eastern Australia\",\"s\",\"aus\"],\"Lindeman\":[\"true¦a0brisbane time,lindeman,whitsunday islands;est,ustralia0;!n eastern\",\"Brisbane\",\"s\"],\"Lord_Howe\":[\"true¦australia3l0;h1ord howe0;! island;dt,st,t;!/lhi\",\"Lord Howe\",\"s\",\"lhow\"],\"Melbourne\":[\"true¦a0canberra,eastern austral4geelong,melbourne,sydney,v3;e7us0; east4tralia0;! 2/v0n 2;ictor0;ia;easte1;!e0;rn;st,t\",\"Eastern Australia\",\"s\",\"aus\"],\"Perth\":[\"true¦a4perth,w0; 2est0; 1ern australia0;! time;australia;ustralia1w0;dt,st,t;! weste1/west,n west0;!e0;rn\",\"Western Australia\",\"s\"],\"Sydney\":[\"true¦a0c5eastern australia time,melbourne,new south wales,sydney,wollongong;e8u0;!s0;! east4tralia0;! 2/0n 2;act,c0nsw;anberra;easte1;!e0;rn;st,t\",\"Eastern Australia\",\"s\",\"aus\"]},\"Etc\":{\"GMT\":[\"true¦coordinated universal3etc2g0utc,zulu;mt,reenwich0;! mean1;!/greenwich; time\",\"Greenwich Mean\",\"n\"],\"UTC\":[\"true¦coordinated universal7etc2g1u0z4;ct,n5tc;mt,reenwich mean5;!/0;u1z0;ulu;ct,n0;iversal; time\",\"Greenwich Mean\",\"n\"]},\"Europe\":{\"Amsterdam\":[\"true¦a9brussels,c6e4groning7madrid,n2paris,ro1t0utrecht;he hague,ilburg;mance,t9;etherlands,l0;!d;indhov2urope0;! central;e1openhag0;en;ntral european,st,t;lmere stad,m0;s0t;terdam\",\"Central European\",\"n\",\"eu2\"],\"Andorra\":[\"true¦a3brussels,c1europe0madrid,paris,romance;! central;e0openhagen;ntral european,st,t;d,nd0;!orra\",\"Central European\",\"n\",\"eu2\"],\"Astrakhan\":[\"true¦astrakh1europe,m0russi1st petersburg,volgograd time;oscow,sk;an\",\"Moscow\",\"n\"],\"Athens\":[\"true¦athens,e1gr0thessaloniki;!c,eece;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Belgrade\":[\"true¦b9c7europe3madrid,n2p1romance,s0;i,lovenia,vn;aris,risti4;is,ovi sad;! central,/0;ljublja1podgorica,s0zagreb;arajevo,kopje;na;e0openhagen;ntral european,st,t;elgrade,russels\",\"Central European\",\"n\",\"eu2\"],\"Brussels\":[\"true¦antwerp6b3c1europe0gent,liege,madrid,paris,romance;! central;e0harleroi,openhag4;ntral european,st,t;e0mt,russels;!l0;!gium;en\",\"Central European\",\"n\",\"eu2\"],\"Bucharest\":[\"true¦b5c4e2gala1iasi,oradea,ploies1ro0timisoara;!mania,u;ti;astern european,et,urope0;! eastern;luj napoca,onstanta,raiova;ra0ucharest;ila,sov\",\"Eastern European\",\"n\",\"eu3\"],\"Budapest\":[\"true¦b6c3debrec4europe2hu0madrid,paris,romance;!n0;!gary;! central;e1openhag0;en;ntral european,st,t;russels,udapest\",\"Central European\",\"n\",\"eu2\"],\"Busingen\":[\"true¦b5c3de2europe1germa0madrid,paris,romance,saxo0;ny;! central,/berlin;!u;e0openhag3;ntral european,st,t;avaria,r0using1;em0ussels;en\",\"Central European\",\"n\",\"eu2\"],\"Chisinau\":[\"true¦chisinau,e2m0;d0oldova;!a;astern european,et,urope0;! eastern,/tiraspol\",\"Eastern European\",\"n\",\"eu2\"],\"Copenhagen\":[\"true¦arhus,brussels,c2d1europe0madrid,paris,romance;! central;enmark,k,nk;e0mt,openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Dublin\":[\"true¦ace,british8cork,d7e6g5i3l0tse,waterford;i0ond1;merick,sb0;on;e,r0st;eland,l;alway,mt,reenwich mean2;dinburgh,ire,urope;mt,ublin; time\",\"Irish\",\"n\",\"eu1\"],\"Gibraltar\":[\"true¦b5c3europe2gi0madrid,paris,romance;!b0;!raltar;! central;e0openhagen;ntral european,st,t;dst,russels,st\",\"Central European\",\"n\",\"eu2\"],\"Helsinki\":[\"true¦e3fi1helsinki,t0vantaa;ampere,urku;!n0;!land;astern european,et,spoo,urope0;! eastern,/mariehamn\",\"Eastern European\",\"n\",\"eu3\"],\"Istanbul\":[\"true¦aYbScQdOeKgJiHkFmBosmAs4t1u0v07zeytinburnu;eskuedWmr9;arsus,r1ur0;!kZ;!abzon,t;a3i1ultan0;beyJgazi;sIv0;as,erek;msun,n0;cakteBliurfa;aniye;a1er0uratpaH;kezefendi,sin;l0niF;atQte6;a0irikkale,onPutahP;hramanmaras,rabaglGyseS;sJzmi0;r,t;aziantep,ebze;lazig,rzurum,s1uro0;pe;en0kiC;l8yurt;eniz0iyarbakB;li;ankaEor0;lu,um;a1ur0;sa;gcil2hcelievl1likes5sak4t0;ikent,mB;er;ar;d7n4rnavutko3sia/is2ta0;seh0;ir;tanbul;ey;kara,ta0;k0l0;ya;a1iyam0;an;na,paza0;ri\",\"Turkey\",\"n\"],\"Kaliningrad\":[\"true¦e0kaliningrad;astern european,et,urope\",\"Eastern European\",\"n\"],\"Kiev\":[\"true¦bila tserkLcherIdGeDhorlCivano frankivHk8l7m5odessa,poltaLriv4sumy,ternopil,u2vinnyts1z0;aporizhzh0hytomyr;ya;a,kr0;!ai0;ne;a0ykolayE;ki5riu8;ut9vC;amyanske,h1iev,r0yB;emenchuk,opyv1yvyy rih;ark9erson,mel0;nytskyy;ivka;astern european,et,urope0;! eastern,/simfero0;pol;nipro,onet0;sk;kasy,ni0;h0vtsi;iv;va\",\"Eastern European\",\"n\",\"eu3\"],\"Kirov\":[\"true¦europe,kirov,m0russian,st petersburg,volgograd time;oscow,sk\",\"Moscow\",\"n\"],\"Lisbon\":[\"true¦amadora,europe5lisbon,p2we0;st0t;! europe,ern european;ort0rt,t;o,ugal0;! mainland;! western\",\"Western European\",\"n\",\"eu1\"],\"London\":[\"true¦a0Ob0Ac07d03eXgThRiOj00kingston upon hull,lJmHnBoxSp9reading,s1w0yF;arwick0Aig00olverha7;heffield,o3t2u1w0;an4iH;ffolk,nderland,rr0IsYttL;afNoke on tre0C;meZuth0;a1end on 0;sea;mptG;ly0orts0restF;mouth;ew4o0;r0ttinghamT;th0wC; y0amptonR;orkV;castle upon tyne,port;ancheQi0;dlan4lton keynes;ancaRdn,e2i1o0ut5;nd4;ncolnPsb3verW;e0icesterJ;ds;psw1slingt0;on;ich;ampJert0;fordI;b2l1mt0reenwich mean M;! standard L;asgow,oucesterF;!-eF;dinburgh,s4urope0;!/0;belNguernsMisle_of_m1j0;ersL;an;sex;erby2o1u0;blin,dlH;rset;!sh5;a1ity of westmin0oventry,rawlE;ster;mbridge1rdiff;eAir9lack7r2st,uckingham0;sh0;ire;adford,e3i0;st4tish0;! 0;time;nt;po0;ol;kenhead,mingham;l1xl0;ey;fast;berdeen,rchway\",\"British\",\"n\",\"eu1\"],\"Luxembourg\":[\"true¦brussels,c3europe2lu0madrid,paris,romance;!x0;!embourg;! central;e0openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Madrid\":[\"true¦aRbOcJeGfuenDgCjerez de la frontera,lBm8ovieFp6romance,s1terrassa,v0wemt,zaragoza;alladol9igo;a1evilla,pain0;! mainland;badell,n0; sebastiHt0; marti,ander,s montjuic;a0uente de vallecas;lma,mpIris;a0ostolLurcK;dr0laga;id;atiJeganI;asteiz/vitorGijon,ran1;carral el par1labr0;ada;do;ixample,lche,s1urope0;! centr2;!p;a3e1iudad line0openhagen;al;ntral europe0st,t;an;rabanchel,stello de la pla7;a0ilbao,russels,urgos;da0rce0sque;lo4; coru3l0;cala de henar1icante,mer0;ia;es;na\",\"Central European\",\"n\",\"eu2\"],\"Malta\":[\"true¦brussels,c3europe2m0paris,romance;a0lt,t;drid,lta;! central;e0openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Minsk\":[\"true¦b4europe,h3m1russian,st petersburg,v0;iteb4olgograd time;ahily0in3osc0sk;ow;omyel,rodna;abruy0elarus,lr,rest,y;sk\",\"Moscow\",\"n\"],\"Monaco\":[\"true¦brussels,c3europe2m0paris,romance;adrid,c0onaco;!o;! central;e0openhagen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Moscow\":[\"true¦ar0Db0Ac07dzerzh06europe,fet,grozn05ivano04kYlipet0FmRnNorel,pKrFs8t6v2w-su,y0zelenograd;a0oshkar oW;roslavl,sene02;asyl'evsky ostrIelikiMladi2o0ykhino zhulebT;l0ronezh;gograd Pogda;kavkaz,m08;a0uQver;ganrog,mbD;a4ever3hakhty,molen06ochi,t0yktyvkR; 4a0;ryy osk0vrop0;ol;nSodvT;int 0rX;petersburg;ostov na donu,u1y0;azLbP;!s0;!sia0;!n;e1odolUsk0;ov;nza,trozavodS;a2izhn0ovorossiyR;ekamQi0;y novM;berezhnyye chelny,l'chik;a3dst,oscow1s0urmJ;d,k;! 0;time;khachka1r'0;ino;la;a2himki,ostroma,rasno0urG;d0gvargeisky;ar;l1z0;an;ininsk5uga;vo;yy;in8;entraln1he0;boksary,repovets;iy;el1ry0;an3;gorod;khangel'1mav0;ir;sk\",\"Moscow\",\"n\"],\"Oslo\":[\"true¦a6b5c3europe2madrid,oslo,paris,romance,s0;j0valbard and jan 6;!m;! central;e0openhag4;ntral european,st,t;erg2russels;rctic/longyearby1tlantic/jan_0;may0;en\",\"Central European\",\"n\",\"eu2\"],\"Paris\":[\"true¦bIcFeuropeEfrBl9m7n5paris,r3s0toulouH;aint 1t0; 0rasbourg;etienne;e0oman9;ims,nn1;ant0i7ormandy;es;a0et,ontpellier;drid,rsei1;e havre,i0yon;lle;!a0;!n0;ce;! central;e0openhagen;ntral european,rgy pontoi0st,t;se;ordeaux,russels\",\"Central European\",\"n\",\"eu2\"],\"Prague\":[\"true¦br6c4europe2madrid,ostr3p1romance,s0;k,lovakia,vk;aris,mt,rague;! central,/bratisl0;ava;e0openhagen;ntral european,st,t;no,ussels\",\"Central European\",\"n\",\"eu2\"],\"Riga\":[\"true¦e2kalt,l0riga;atvia,st,v0;!a;ast2e1urope0;! eastern;st,t; europe,ern european\",\"Eastern European\",\"n\",\"eu3\"],\"Rome\":[\"true¦bIcEeuropeCfloreBgenoa,mAnaples,p7r5sicily,t3v0;a0eroK;!t0;!ican city;aran4rieste,u0;rin,scany;mt,om0;a4e;a1ra0;to;dova,lermo,ris;adrid,essiAil6;nce;! central,/0;san_marino,vatic3;atan5e1o0;penhagen,rsica;ntral europe0st,t;an;ari,olog2r0;esc0ussels;ia;na\",\"Central European\",\"n\",\"eu2\"],\"Samara\":[\"true¦europe,izhevsk,s0togliatti on the volga;am0yzran;ara,t\",\"Samara\",\"n\"],\"Saratov\":[\"true¦balakovo,europe,izhevsk,sa0;m0ratov;ara,t\",\"Samara\",\"n\"],\"Sofia\":[\"true¦b2e0imt,plovdiv,sof4varna;astern european,et,urope0;! eastern;g2u0;lgar0rgas;ia;!r\",\"Eastern European\",\"n\",\"eu3\"],\"Stockholm\":[\"true¦brussels,c5europe4goeteborg,ma3paris,romance,s0;e1tockholm,we0;!d4;!t;drid,lmoe;! central;e1openhag0;en;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"],\"Tallinn\":[\"true¦e0tallinn;astern european,e2st1urope0;! eastern;!onia;!t\",\"Eastern European\",\"n\",\"eu3\"],\"Tirane\":[\"true¦al4brussels,c2europe1madrid,paris,romance,tiran0;a,e;! central;e0openhagen;ntral european,st,t;!b0;!ania\",\"Central European\",\"n\",\"eu2\"],\"Ulyanovsk\":[\"true¦europe,m0russian,st petersburg,ulyanovsk,volgograd 2;oscow0sk;! 0;time\",\"Moscow\",\"n\"],\"Uzhgorod\":[\"true¦e0ruthenia,uzhgorod;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Vienna\":[\"true¦a4brussels,c1donaustadt,europe0favorit2graz,linz,madrid,paris,romance,vienna;! central;e1openhag0;en;ntral european,st,t;t,u0;stria,t\",\"Central European\",\"n\",\"eu2\"],\"Vilnius\":[\"true¦e3k2l0vilnius;ithuania,t0;!u;aunas,laipeda;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Volgograd\":[\"true¦europe,m2russian,st petersburg,vol0;gograd0t,zhskiy;! time;oscow,sk\",\"Moscow\",\"n\"],\"Warsaw\":[\"true¦bKcHeuropeGgCkAl8m7p4r3s2torun,w0zabrze;ars0rocl0;aw;osnowiec,zczec6;adIomanA;aris,l,o0raga poludnie;l0znD;!and;adrid,okot3;odz,ubl0;in;ato2iel3rak0;ow;d2li0;wi0;ce;ansk,ynia;! central;e0openhagen,zestochowa;ntral europe0st,t;an;i2russels,y0;dgoszcz,t0;om;alystok,elsko biala\",\"Central European\",\"n\",\"eu2\"],\"Zaporozhye\":[\"true¦e3luhansk2sevastopol,zapor0;izhia lugansk,ozh0;'ye,ye;! east;astern european,et,urope0;! eastern\",\"Eastern European\",\"n\",\"eu3\"],\"Zurich\":[\"true¦brussels,c4europe2geneve,li0madrid,paris,romance,swiss time,zurich;!e0;!chtenstein;! central,/0;busin1vaduz;e1openha0;gen;ntral european,st,t\",\"Central European\",\"n\",\"eu2\"]},\"Indian\":{\"Chagos\":[\"true¦british indian ocean territory,c4i0;ndian1o0;!t;! 0;c0ocean;hagos\",\"Indian Ocean\",\"n\"],\"Christmas\":[\"true¦c0indian;hristmas1x0;!r,t;! island\",\"Christmas Island\",\"s\"],\"Cocos\":[\"true¦c0indian;c2ocos0;! island0;!s;!k,t\",\"Cocos Islands\",\"n\"],\"Kerguelen\":[\"true¦a5french southern2indian,kerguelen1tf0;!t;!st paul4;! 0;& antarctic time,and antarctic0;! lands;msterdam0tf; island\",\"French Southern & Antarctic\",\"s\"],\"Mahe\":[\"true¦indian,mahe,s0;c0eychelles,yc;!t\",\"Seychelles\",\"n\"],\"Maldives\":[\"true¦indian,m0;aldives,dv,v0;!t\",\"Maldives\",\"n\"],\"Mauritius\":[\"true¦indian,m0port louis;auritius,u0;!s,t\",\"Mauritius\",\"n\"],\"Reunion\":[\"true¦indian,r0;e0éu1;t,u0;nion\",\"Réunion\",\"s\"]},\"Pacific\":{\"Apia\":[\"true¦apia,pacific,s2w0;est s1s0;!m,t;amoa\",\"West Samoa\",\"s\"],\"Auckland\":[\"true¦a2christchurch,manukau,n0pacific,wellington;ew zea2orth shore,z0;!dt,l,mt,st,t;ntarctica/1uck0;land;mcmurdo,south_pole\",\"New Zealand\",\"s\",\"nz\"],\"Bougainville\":[\"true¦bougainville,guinea2p0;a0gt;cific,pua new guinea;!n\",\"Papua New Guinea\",\"s\"],\"Chatham\":[\"true¦cha0nz-chat,pacific;dt,st,t0;!ham0;! 0;islands,time\",\"Chatham\",\"s\",\"chat\"],\"Chuuk\":[\"true¦chu2pacific0;!/0;truk,y2;t,uk0;!/truky0;ap\",\"Chuuk\",\"n\"],\"Easter\":[\"true¦chile/easter4e0pacific;as0mt;st,t0;!er0;! 0;island\",\"Easter Island\",\"s\",\"east\"],\"Efate\":[\"true¦efate,pacific,v0;anuatu,u0;!t\",\"Vanuatu\",\"n\"],\"Fakaofo\":[\"true¦fakaofo,pacific,t0;k0okelau;!l,t\",\"Tokelau\",\"n\"],\"Fiji\":[\"true¦f0pacific;iji,j0;!i,st,t\",\"Fiji\",\"s\",\"fiji\"],\"Funafuti\":[\"true¦funafuti,pacific,t0;uv1v0;!t;!alu\",\"Tuvalu\",\"n\"],\"Galapagos\":[\"true¦co1gal0pacific;apagos,t,ápagos islands;lombia,st,t\",\"Colombia\",\"n\"],\"Gambier\":[\"true¦gam0pacific;bier0t;! islands\",\"Gambier\",\"n\"],\"Guadalcanal\":[\"true¦guadalcanal,pacific,s0;b1lb,olomon0;! islands;!t\",\"Solomon Islands\",\"n\"],\"Guam\":[\"true¦ch5guam,m4northern mariana islands,p2west0; 0ern 0;pacific;acific0ort moresby;!/saipan;np,p;amorro,st\",\"Chamorro\",\"n\"],\"Honolulu\":[\"true¦aleutian4h1pacific0us/hawaii;!/johnston;a0onolulu,st;dt,st,t,waii0;! aleutian;! islands\",\"Hawaii-Aleutian\",\"n\"],\"Kanton\":[\"true¦kanton,p0;acific1ho0;enix islands,t;!/enderbury\",\"Phoenix Islands\",\"n\"],\"Kiritimati\":[\"true¦ki1lin0pacific;e islands,t;!r0;!i0;bati,timati0;! island\",\"Line Islands\",\"n\"],\"Kosrae\":[\"true¦kos0pacific;rae,t\",\"Kosrae\",\"n\"],\"Kwajalein\":[\"true¦kwajalein,m0pacific;arshall islands,ht\",\"Marshall Islands\",\"n\"],\"Majuro\":[\"true¦m0pacific;a1h0;!l,t;juro,rshall islands\",\"Marshall Islands\",\"n\"],\"Marquesas\":[\"true¦mar0pacific;quesas0t;! islands\",\"Marquesas\",\"n\"],\"Nauru\":[\"true¦n0pacific;auru,r0;!t,u\",\"Nauru\",\"n\"],\"Niue\":[\"true¦n0pacific;iu1u0;!t;!e\",\"Niue\",\"n\"],\"Norfolk\":[\"true¦n0pacific;f1orfolk0;! island;!dt,k,t\",\"Norfolk Island\",\"n\",\"aus\"],\"Noumea\":[\"true¦n0pacific;c0ew caledonia,oumea;!l,t\",\"New Caledonia\",\"n\"],\"Pago_Pago\":[\"true¦m5pa1s0us/sa4;a3st;cific0go_pago;!/0;m1sa0;moa;idway\",\"Samoa\",\"n\"],\"Palau\":[\"true¦p0;a1lw,w0;!t;cific,lau\",\"Palau\",\"n\"],\"Pitcairn\":[\"true¦p0;acific,cn,itcairn,n,st\",\"Pitcairn\",\"n\"],\"Pohnpei\":[\"true¦french polynesia,p0;acific1f,o0yf;hnpei0nt;!/ponape\",\"Ponape\",\"n\"],\"Port_Moresby\":[\"true¦antarctica/dumontd6dumont-d'6guinea5p0;a3g2ng,ort0; 0_0;moresby;!t;cific,pua new guinea;!n;urville\",\"Papua New Guinea\",\"s\"],\"Rarotonga\":[\"true¦c0pacific,rarotonga;k2o0;k,ok0;! islands;!t\",\"Cook Islands\",\"n\"],\"Tahiti\":[\"true¦pacific,society islands,tah0;iti,t\",\"Tahiti\",\"n\"],\"Tarawa\":[\"true¦gil0pacific,tarawa;bert islands,t\",\"Gilbert Islands\",\"n\"],\"Tongatapu\":[\"true¦nuku'alofa,pacific,to0;!n0t;!ga0;!tapu\",\"Tonga\",\"s\"],\"Wake\":[\"true¦pacific,u2wak0;e0t;! island;m0s minor outlying islands;!i\",\"Wake Island\",\"n\"],\"Wallis\":[\"true¦pacific,w0;allis1f0lf;!t;! 0;&0and0; futuna\",\"Wallis & Futuna\",\"n\"]}};\n\n// strings that don't pack properly\nvar misc = {\n  'gmt+0': ['Etc/GMT'],\n  'gmt-0': ['Etc/GMT'],\n  gmt0: ['Etc/GMT'],\n  'etc/gmt+0': ['Etc/GMT'],\n  'etc/gmt-0': ['Etc/GMT'],\n  'etc/gmt0': ['Etc/GMT'],\n  'msk+00': ['Europe/Moscow'],\n  'msk-01 - kaliningrad': ['Europe/Kaliningrad'],\n  'msk+00 - moscow area': ['Europe/Moscow'],\n  'msk+00 - crimea': ['Europe/Kiev'],\n  'msk+00 - volgograd': ['Europe/Volgograd'],\n  'msk+00 - kirov': ['Europe/Kirov'],\n  'msk+01 - astrakhan': ['Europe/Astrakhan'],\n  'msk+01 - saratov': ['Europe/Saratov'],\n  'msk+01 - ulyanovsk': ['Europe/Ulyanovsk'],\n  'msk+01 - samaraudmurtia': ['Europe/Samara'],\n  'msk+02 - urals': ['Asia/Yekaterinburg'],\n  'msk+03': ['Asia/Omsk'],\n  'msk+04 - novosibirsk': ['Asia/Novosibirsk'],\n  'msk+04 - altai': ['Asia/Barnaul'],\n  'msk+04': ['Asia/Tomsk'],\n  'msk+04 - kemerovo': ['Asia/Novokuznetsk'],\n  'msk+04 - krasnoyarsk area': ['Asia/Krasnoyarsk'],\n  'msk+05 - irkutskburyatia': ['Asia/Irkutsk'],\n  'msk+06 - zabaykalsky': ['Asia/Chita'],\n  'msk+06 - lena river': ['Asia/Yakutsk'],\n  'msk+06 - tomponskyust-maysky': ['Asia/Khandyga'],\n  'msk+07 - amur river': ['Asia/Vladivostok'],\n  'msk+07 - oymyakonsky': ['Asia/Ust-Nera'],\n  'msk+08 - magadan': ['Asia/Magadan'],\n  'msk+08 - sakhalin island': ['Asia/Sakhalin'],\n  'msk+08 - sakha (e) north kuril is': ['Asia/Srednekolymsk'],\n  'msk+09': ['Asia/Kamchatka'],\n  'msk+09 - bering sea': ['Asia/Anadyr'],\n  \"russia time zone 11\": [\"Asia/Anadyr\"],\n  \"russia time zone 10\": [\"Asia/Srednekolymsk\"],\n  \"russia time zone 3\": [\"Europe/Samara\"],\n  \"coordinated universal time-09\": [\"Pacific/Gambier\"],\n  \"utc-09\": [\"Pacific/Gambier\"],\n  \"coordinated universal time-08\": [\"Pacific/Pitcairn\"]\n};\n\nconst addEtc = function (zones) {\n  for (let i = 0; i <= 14; i += 1) {\n    zones[`Etc/GMT-${i}`] = {\n      offset: i,\n      meta: `gmt-${i}`,\n      hem: 'n'//sorry\n    };\n    zones[`Etc/GMT+${i}`] = {\n      offset: i * -1,\n      meta: `gmt+${i}`,\n      hem: 'n'//sorry\n    };\n  }\n};\n\nvar addUTC = addEtc;\n\n// unpack our lexicon of words\nlet zones = {};\nlet lexicon = Object.assign({}, misc);\nObject.keys(pcked).forEach(top => {\n  Object.keys(pcked[top]).forEach(name => {\n    let [words, meta, hem, dst] = pcked[top][name];\n    let id = `${top}/${name}`;\n    zones[id] = { meta, hem };\n    let keys = Object.keys(unpack$1(words));\n    keys.forEach(k => {\n      lexicon[k] = lexicon[k] || [];\n      lexicon[k].push(id);\n      // use iana aliases\n      if (k.match(/\\//)) {\n        let arr = k.split(/\\//);\n        let last = arr[arr.length - 1].toLowerCase();\n        lexicon[last] = lexicon[last] || [];\n        lexicon[last].push(id);\n      }\n    });\n    zones[id].wordCount = keys.length;\n    if (dst) {\n      zones[id].dst = dstPatterns[dst].split(/\\|/);\n    }\n  });\n});\n\naddUTC(zones);\n\nconst unique = function (arr) {\n  let obj = {};\n  for (let i = 0; i < arr.length; i += 1) {\n    obj[arr[i]] = true;\n  }\n  return Object.keys(obj)\n};\n\n// sort by num of aliases\nObject.keys(lexicon).forEach(k => {\n  if (lexicon[k].length > 1) {\n    lexicon[k] = unique(lexicon[k]);\n    lexicon[k] = lexicon[k].sort((a, b) => {\n      if (zones[a].wordCount > zones[b].wordCount) {\n        return -1\n      } else if (zones[a].wordCount < zones[b].wordCount) {\n        return 1\n      }\n      return 0\n    });\n  }\n});\n\n// console.log(zones['Etc/GMT+4'])\n\n//try to match these against iana form\nconst one = (str) => {\n  str = str.toLowerCase();\n  str = str.replace(/^in /g, '');\n  str = str.replace(/ time/g, '');\n  str = str.replace(/ (standard|daylight|summer)/g, '');\n  str = str.replace(/ - .*/g, ''); //`Eastern Time - US & Canada`\n  str = str.replace(/, .*/g, ''); //`mumbai, india`\n  str = str.replace(/\\./g, '');//st. petersberg\n  return str.trim()\n};\n\n//some more aggressive transformations\nconst two = function (str) {\n  str = str.replace(/\\b(east|west|north|south)ern/g, '$1');\n  str = str.replace(/\\b(africa|america|australia)n/g, '$1');\n  str = str.replace(/\\beuropean/g, 'europe');\n  str = str.replace(/\\islands/g, 'island');\n  str = str.replace(/.*\\//g, '');\n  return str.trim()\n};\n// even-more agressive\nconst three = function (str) {\n  str = str.replace(/\\(.*\\)/, '');//anything in brackets\n  str = str.replace(/  +/g, ' ');//extra spaces\n  return str.trim()\n};\n\nvar normalize = { one, two, three };\n\nconst isOffset = /^([-+]?[0-9]+)h(r?s)?$/i;\nconst isNumber = /^([-+]?[0-9]+)$/;\nconst utcOffset = /utc([\\-+]?[0-9]+)$/i;\nconst gmtOffset = /gmt([\\-+]?[0-9]+)$/i;\n\nconst toIana = function (num) {\n  num = Number(num);\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n    return 'Etc/GMT' + num\n  }\n  return null\n};\n\nconst parseOffset = function (tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset);\n  if (m !== null) {\n    let num = Number(m[1]) * -1;\n    return toIana(num)\n  }\n  // '+5'\n  m = tz.match(isNumber);\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  return null\n};\nvar parseOffset$1 = parseOffset;\n\n// match some text to an iana code\nconst find = function (str) {\n  // perfect id match\n  if (zones.hasOwnProperty(str)) {\n    return str\n  }\n  // lookup known word\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str]\n  }\n  // -8hrs\n  if (/[0-9]/.test(str)) {\n    let etc = parseOffset$1(str);\n    if (etc) {\n      return [etc]\n    }\n  }\n  // try a sequence of normalization steps\n  str = normalize.one(str);\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str]\n  }\n  str = normalize.two(str);\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str]\n  }\n  str = normalize.three(str);\n  if (lexicon.hasOwnProperty(str)) {\n    return lexicon[str]\n  }\n  return null\n};\n\nvar find$1 = find;\n\nvar metas = {\n  \"India\": {\n    \"std\": [\"IST\", 5.5],\n    \"long\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\"\n  },\n  \"China\": {\n    \"std\": [\"CST\", 8],\n    \"long\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\"\n  },\n  \"Central European\": {\n    \"std\": [\"CET\", 1],\n    \"dst\": [\"CEST\", 2, \"Central European Summer Time\"],\n    \"long\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\"\n  },\n  \"Atlantic\": {\n    \"dupe\": true,\n    \"std\": [\"AST\", -4],\n    \"dst\": [\"ADT\", -3],\n    \"long\": \"(UTC-04:00) Atlantic Time (Canada)\"\n  },\n  \"Greenwich Mean\": {\n    \"std\": [\"GMT\", 0],\n    \"long\": \"(UTC) Coordinated Universal Time\"\n  },\n  \"Eastern European\": {\n    \"std\": [\"EET\", 2],\n    \"dst\": [\"EEST\", 3, \"Eastern European Summer Time\"\n    ]\n  },\n  \"Central\": {\n    \"dupe\": true,\n    \"std\": [\"CST\", -6],\n    \"dst\": [\"CDT\", -5],\n    \"long\": \"(UTC-06:00) Central Time (US & Canada)\"\n  },\n  \"Eastern\": {\n    \"std\": [\"EST\", -5],\n    \"dst\": [\"EDT\", -4],\n    \"long\": \"(UTC-05:00) Eastern Time (US & Canada)\"\n  },\n  \"Argentina\": {\n    \"std\": [\"ART\", -3],\n    \"long\": \"(UTC-03:00) City of Buenos Aires\"\n  },\n  \"East Africa\": {\n    \"std\": [\"EAT\", 3],\n    \"long\": \"(UTC+03:00) Nairobi\"\n  },\n  \"West Africa\": {\n    \"std\": [\"WAT\", 1],\n    \"long\": \"(UTC+01:00) West Central Africa\"\n  },\n  \"Moscow\": {\n    \"std\": [\"MSK\", 3],\n    \"long\": \"(UTC+03:00) Moscow, St. Petersburg\"\n  },\n  \"Brasilia\": {\n    \"std\": [\"BRT\", -3],\n    \"long\": \"(UTC-03:00) Brasilia\"\n  },\n  \"Mountain\": {\n    \"std\": [\"MST\", -7],\n    \"dst\": [\"MDT\", -6],\n    \"long\": \"(UTC-07:00) Mountain Time (US & Canada)\"\n  },\n  \"Central Africa\": {\n    \"std\": [\"CAT\", 2],\n    \"long\": \"(UTC+02:00) Windhoek\"\n  },\n  \"Arabian\": {\n    \"std\": [\"AST\", 3],\n    \"long\": \"(UTC+03:00) Kuwait, Riyadh\"\n  },\n  \"Alaska\": {\n    \"std\": [\"AKST\", -9],\n    \"dst\": [\"AKDT\", -8],\n    \"long\": \"(UTC-09:00) Alaska\"\n  },\n  \"British\": {\n    \"std\": [\"GMT\", 0],\n    \"dst\": [\"BST\", 1, \"British Summer Time\"],\n    \"long\": \"(UTC+00:00) Dublin, Edinburgh, Lisbon, London\"\n  },\n  \"Irish\": {\n    \"std\": [\"GMT\", 0],\n    \"dst\": [\"IST\", 1, \"Irish Standard Time\"]\n  },\n  \"West Kazakhstan\": {\n    \"std\": [\"ALMT\", 5],\n    \"long\": \"(UTC+05:00) Ashgabat, Tashkent\"\n  },\n  \"Eastern Australia\": {\n    \"std\": [\"AEST\", 10],\n    \"dst\": [\"AEDT\", 11, \"Australian Eastern Daylight Time\"],\n    \"long\": \"(UTC+10:00) Canberra, Melbourne, Sydney\"\n  },\n  \"Western European\": {\n    \"std\": [\"WET\", 0],\n    \"dst\": [\"WEST\", 1, \"Western European Summer Time\"]\n  },\n  \"Indochina\": {\n    \"std\": [\"ICT\", 7],\n    \"long\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\"\n  },\n  \"Central Mexico\": {\n    \"long\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n    \"std\": [\"CST\", -6],\n    \"dst\": [\"CDT\", -5, \"Central Daylight Time\"\n    ]\n  },\n  \"South Africa\": {\n    \"std\": [\"SAST\", 2],\n    \"long\": \"(UTC+02:00) Harare, Pretoria\"\n  },\n  \"Krasnoyarsk\": {\n    \"std\": [\"KRAT\", 7],\n    \"long\": \"(UTC+07:00) Krasnoyarsk\"\n  },\n  \"Yakutsk\": {\n    \"std\": [\"YAKT\", 9],\n    \"long\": \"(UTC+09:00) Yakutsk\"\n  },\n  \"Pacific\": {\n    \"std\": [\"PST\", -8],\n    \"dst\": [\"PDT\", -7],\n    \"long\": \"(UTC-08:00) Pacific Time (US & Canada)\"\n  },\n  \"Amazon\": {\n    \"std\": [\"AMT\", -4],\n    \"long\": \"(UTC-04:00) Cuiaba\"\n  },\n  \"Morocco Standard\": {\n    \"offset\": 1,\n    \"long\": \"(UTC+00:00) Casablanca\",\n    \"std\": [\"WET\", 1],\n    \"dst\": [\"WEST\", 0, \"Western European Summer Time\"\n    ]\n  },\n  \"Gulf\": {\n    \"std\": [\"GST\", 4],\n    \"long\": \"(UTC+04:00) Abu Dhabi, Muscat\"\n  },\n  \"Samara\": {\n    \"std\": [\"SAMT\", 4],\n    \"long\": \"(UTC+04:00) Izhevsk, Samara\"\n  },\n  \"Uzbekistan\": {\n    \"std\": [\"UZT\", 5]\n  },\n  \"East Kazakhstan\": {\n    \"std\": [\"ALMT\", 6],\n    \"long\": \"(UTC+06:00) Astana\"\n  },\n  \"Omsk\": {\n    \"std\": [\"OMST\", 6],\n    \"long\": \"(UTC+06:00) Omsk\"\n  },\n  \"Western Indonesia\": {\n    \"std\": [\"WIB\", 7]\n  },\n  \"Ulaanbaatar\": {\n    \"std\": [\"ULAT\", 8],\n    \"long\": \"(UTC+08:00) Ulaanbaatar\"\n  },\n  \"Malaysia\": {\n    \"std\": [\"MYT\", 8]\n  },\n  \"Korean\": {\n    \"std\": [\"KST\", 9],\n    \"long\": \"(UTC+09:00) Seoul\"\n  },\n  \"Central Australia\": {\n    \"std\": [\"ACST\", 9.5],\n    \"dst\": [\"ACDT\", 10.5, \"Australian Central Daylight Time\"],\n    \"long\": \"(UTC+09:30) Adelaide\"\n  },\n  \"Brisbane\": {\n    \"dupe\": true,\n    \"std\": [\"AEST\", 10]\n  },\n  \"Vladivostok\": {\n    \"std\": [\"VLAT\", 10],\n    \"long\": \"(UTC+10:00) Vladivostok\"\n  },\n  \"Chamorro\": {\n    \"std\": [\"ChST\", 10],\n    \"long\": \"(UTC+10:00) Guam, Port Moresby\"\n  },\n  \"Papua New Guinea\": {\n    \"std\": [\"PGT\", 11]\n  },\n  \"New Zealand\": {\n    \"std\": [\"NZST\", 12],\n    \"dst\": [\"NZDT\", 13],\n    \"long\": \"(UTC+12:00) Auckland, Wellington\"\n  },\n  \"Marshall Islands\": {\n    \"std\": [\"MHT\", 12]\n  },\n  \"Samoa\": {\n    \"std\": [\"SST\", -11],\n    \"long\": \"(UTC+13:00) Samoa\"\n  },\n  \"Hawaii-Aleutian\": {\n    \"std\": [\"HAST\", -9],\n    \"dst\": [\"HADT\", -8],\n    \"long\": \"(UTC-09:00) Aleutian Islands\"\n  },\n  \"Mexican Pacific\": {\n    \"std\": [\"HNPMX\", -7],\n    \"dst\": [\"HEPMX\", -6],\n    \"long\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\"\n  },\n  \"Colombia\": {\n    \"std\": [\"COT\", -5]\n  },\n  \"Acre\": {\n    \"std\": [\"ACT\", -5]\n  },\n  \"Chile\": {\n    \"dupe\": true,\n    \"std\": [\"CLT\", -3],\n    \"dst\": [\"CLST\", -4, \"Chile Summer Time\"\n    ]\n  },\n  \"Troll\": {\n    \"dupe\": true,\n    \"std\": [\"GMT\", 0]\n  },\n  \"East Greenland\": {\n    \"std\": [\"HNEG\", 0],\n    \"dst\": [\"HEEG\", 1, \"East Greenland Summer Time\"\n    ]\n  },\n  \"Israel\": {\n    \"std\": [\"IST\", 2],\n    \"dst\": [\"IDT\", 3],\n    \"long\": \"(UTC+02:00) Jerusalem\"\n  },\n  \"Syowa\": {\n    \"std\": [\"SYOT\", 3]\n  },\n  \"Turkey\": {\n    \"std\": [\"TRT\", 3],\n    \"long\": \"(UTC+03:00) Istanbul\"\n  },\n  \"Iran\": {\n    \"std\": [\"IRST\", 3.5],\n    \"dst\": [\"IRDT\", 4.5],\n    \"long\": \"(UTC+03:30) Tehran\"\n  },\n  \"Azerbaijan\": {\n    \"std\": [\"AZT\", 4],\n    \"long\": \"(UTC+04:00) Baku\"\n  },\n  \"Georgia\": {\n    \"std\": [\"GET\", 4],\n    \"long\": \"(UTC+04:00) Tbilisi\"\n  },\n  \"Armenia\": {\n    \"std\": [\"AMT\", 4],\n    \"long\": \"(UTC+04:00) Yerevan\"\n  },\n  \"Seychelles\": {\n    \"std\": [\"SCT\", 4]\n  },\n  \"Mauritius\": {\n    \"std\": [\"MUT\", 4],\n    \"long\": \"(UTC+04:00) Port Louis\"\n  },\n  \"Réunion\": {\n    \"std\": [\"RET\", 4]\n  },\n  \"Afghanistan\": {\n    \"std\": [\"AFT\", 4.5],\n    \"long\": \"(UTC+04:30) Kabul\"\n  },\n  \"Mawson\": {\n    \"std\": [\"MAWT\", 5]\n  },\n  \"Turkmenistan\": {\n    \"std\": [\"TMT\", 5]\n  },\n  \"Tajikistan\": {\n    \"std\": [\"TJT\", 5]\n  },\n  \"Pakistan\": {\n    \"std\": [\"PKT\", 5],\n    \"long\": \"(UTC+05:00) Islamabad, Karachi\"\n  },\n  \"Yekaterinburg\": {\n    \"std\": [\"YEKT\", 5],\n    \"long\": \"(UTC+05:00) Ekaterinburg\"\n  },\n  \"French Southern & Antarctic\": {\n    \"std\": [\"TFT\", 5]\n  },\n  \"Maldives\": {\n    \"std\": [\"MVT\", 5]\n  },\n  \"Nepal\": {\n    \"std\": [\"NPT\", 5.75],\n    \"long\": \"(UTC+05:45) Kathmandu\"\n  },\n  \"Vostok\": {\n    \"std\": [\"MSK+4\", 6]\n  },\n  \"Kyrgyzstan\": {\n    \"std\": [\"KGT\", 6]\n  },\n  \"Bangladesh\": {\n    \"std\": [\"BST\", 6],\n    \"long\": \"(UTC+06:00) Dhaka\"\n  },\n  \"Bhutan\": {\n    \"std\": [\"BT\", 6]\n  },\n  \"Indian Ocean\": {\n    \"std\": [\"IOT\", 6]\n  },\n  \"Myanmar\": {\n    \"std\": [\"MMT\", 6.5],\n    \"long\": \"(UTC+06:30) Yangon (Rangoon)\"\n  },\n  \"Cocos Islands\": {\n    \"std\": [\"CCT\", 6.5]\n  },\n  \"Davis\": {\n    \"std\": [\"DAVT\", 7]\n  },\n  \"Hovd\": {\n    \"std\": [\"HOVT\", 7],\n    \"long\": \"(UTC+07:00) Hovd\"\n  },\n  \"Novosibirsk\": {\n    \"std\": [\"NOVT\", 7],\n    \"long\": \"(UTC+07:00) Novosibirsk\"\n  },\n  \"Christmas Island\": {\n    \"std\": [\"CXT\", 7]\n  },\n  \"Brunei Darussalam\": {\n    \"std\": [\"BNT\", 8]\n  },\n  \"Hong Kong\": {\n    \"std\": [\"HKT\", 8]\n  },\n  \"Irkutsk\": {\n    \"std\": [\"IRKT\", 8],\n    \"long\": \"(UTC+08:00) Irkutsk\"\n  },\n  \"Central Indonesia\": {\n    \"std\": [\"WITA\", 8]\n  },\n  \"Philippine\": {\n    \"std\": [\"PHST\", 8]\n  },\n  \"Singapore\": {\n    \"std\": [\"SGT\", 8],\n    \"long\": \"(UTC+08:00) Kuala Lumpur, Singapore\"\n  },\n  \"Taipei\": {\n    \"std\": [\"CST\", 8],\n    \"long\": \"(UTC+08:00) Taipei\"\n  },\n  \"Western Australia\": {\n    \"std\": [\"AWST\", 8],\n    \"long\": \"(UTC+08:00) Perth\"\n  },\n  \"Australian Central Western\": {\n    \"std\": [\"ACWST\", 8.75],\n    \"long\": \"(UTC+08:45) Eucla\"\n  },\n  \"East Timor\": {\n    \"std\": [\"TLT\", 9]\n  },\n  \"Eastern Indonesia\": {\n    \"std\": [\"WIT\", 9]\n  },\n  \"Japan\": {\n    \"std\": [\"JST\", 9],\n    \"long\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\"\n  },\n  \"Palau\": {\n    \"std\": [\"PWT\", 9]\n  },\n  \"Australian Central\": {\n    \"dupe\": true,\n    \"std\": [\"ACST\", 9.5]\n  },\n  \"Dumont-d’Urville\": {\n    \"std\": [\"CLST\", 10]\n  },\n  \"Chuuk\": {\n    \"std\": [\"CHUT\", 10]\n  },\n  \"Lord Howe\": {\n    \"std\": [\"LHST\", 10.5],\n    \"dst\": [\"LHDT\", 11.5],\n    \"long\": \"(UTC+10:30) Lord Howe Island\"\n  },\n  \"Casey\": {\n    \"std\": [\"CAST\", 11],\n    \"dst\": [\"CAST\", 8, \"Casey Summer Time\"\n    ]\n  },\n  \"Magadan\": {\n    \"std\": [\"MAGT\", 11],\n    \"long\": \"(UTC+11:00) Magadan\"\n  },\n  \"Sakhalin\": {\n    \"std\": [\"SAKT\", 11],\n    \"long\": \"(UTC+11:00) Sakhalin\"\n  },\n  \"Srednekolymsk\": {\n    \"std\": [\"SRET\", 11],\n    \"long\": \"(UTC+11:00) Chokurdakh\"\n  },\n  \"Vanuatu\": {\n    \"std\": [\"VUT\", 11]\n  },\n  \"Solomon Islands\": {\n    \"std\": [\"SBT\", 11]\n  },\n  \"Kosrae\": {\n    \"std\": [\"KOST\", 11]\n  },\n  \"New Caledonia\": {\n    \"std\": [\"NCT\", 11]\n  },\n  \"Ponape\": {\n    \"std\": [\"PONT\", 11]\n  },\n  \"Anadyr\": {\n    \"std\": [\"ANAT\", 12],\n    \"long\": \"(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky\"\n  },\n  \"Petropavlovsk-Kamchatski\": {\n    \"std\": [\"PETT\", 12],\n    \"long\": \"(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky\"\n  },\n  \"Fiji\": {\n    \"std\": [\"FJT\", 12],\n    \"dst\": [\"FJT\", 13, \"Fiji Summer Time\"],\n    \"long\": \"(UTC+12:00) Fiji\"\n  },\n  \"Tuvalu\": {\n    \"std\": [\"TVT\", 12]\n  },\n  \"Nauru\": {\n    \"std\": [\"NRT\", 12]\n  },\n  \"Norfolk Island\": {\n    \"std\": [\"NFT\", 12],\n    \"dst\": [\"NFDT\", 11],\n    \"long\": \"(UTC+11:00) Norfolk Island\"\n  },\n  \"Gilbert Islands\": {\n    \"std\": [\"GILT\", 12]\n  },\n  \"Wake Island\": {\n    \"std\": [\"WAKT\", 12]\n  },\n  \"Wallis & Futuna\": {\n    \"std\": [\"WFT\", 12]\n  },\n  \"Chatham\": {\n    \"std\": [\"CHAST\", 12.75],\n    \"dst\": [\"CHADT\", 13.75],\n    \"long\": \"(UTC+12:45) Chatham Islands\"\n  },\n  \"West Samoa\": {\n    \"std\": [\"WST\", 13],\n    \"dst\": [\"WST\", 14, \"West Samoa Summer Time\"\n    ]\n  },\n  \"Phoenix Islands\": {\n    \"std\": [\"PHOT\", 13]\n  },\n  \"Tokelau\": {\n    \"std\": [\"TKT\", 13]\n  },\n  \"Tonga\": {\n    \"std\": [\"TOT\", 13],\n    \"long\": \"(UTC+13:00) Nuku'alofa\"\n  },\n  \"Line Islands\": {\n    \"std\": [\"LINT\", 14],\n    \"long\": \"(UTC+14:00) Kiritimati Island\"\n  },\n  \"Niue\": {\n    \"std\": [\"NUT\", -11]\n  },\n  \"Cook Islands\": {\n    \"std\": [\"CKT\", -10]\n  },\n  \"Tahiti\": {\n    \"std\": [\"TAHT\", -10]\n  },\n  \"Marquesas\": {\n    \"std\": [\"MART\", -9.5],\n    \"long\": \"(UTC-09:30) Marquesas Islands\"\n  },\n  \"Aleutian Standard\": {\n    \"iso\": \"(UTC-10:00) Aleutian Islands\",\n    \"std\": [\"HST\", -10],\n    \"dst\": [\"HDT\", -9, \"Hawaii Daylight Time\"\n    ]\n  },\n  \"Gambier\": {\n    \"std\": [\"GAMT\", -9],\n    \"long\": \"(UTC-09:00) Coordinated Universal Time-09\"\n  },\n  \"Pitcairn\": {\n    \"std\": [\"PST\", -8],\n    \"long\": \"(UTC-08:00) Coordinated Universal Time-08\"\n  },\n  \"Northwest Mexico\": {\n    \"std\": [\"HNNOMX\", -6],\n    \"dst\": [\"HENOMX\", -5],\n    \"long\": \"(UTC-08:00) Baja California\"\n  },\n  \"Easter Island\": {\n    \"std\": [\"EAST\", -6],\n    \"dst\": [\"EASST\", -5, \"Easter Island Summer Time\"],\n    \"long\": \"(UTC-06:00) Easter Island\"\n  },\n  \"Ecuador\": {\n    \"std\": [\"ECT\", -5]\n  },\n  \"Cuba\": {\n    \"std\": [\"HNCU\", -5],\n    \"dst\": [\"HECU\", -4],\n    \"long\": \"(UTC-05:00) Havana\"\n  },\n  \"Peru\": {\n    \"std\": [\"PET\", -5]\n  },\n  \"Paraguay\": {\n    \"std\": [\"PYT\", -4],\n    \"dst\": [\"PYST\", -3, \"Paraguay Summer Time\"],\n    \"long\": \"(UTC-04:00) Asuncion\"\n  },\n  \"Venezuela\": {\n    \"std\": [\"VET\", -4],\n    \"long\": \"(UTC-04:00) Caracas\"\n  },\n  \"Guyana\": {\n    \"std\": [\"GYT\", -4]\n  },\n  \"Bolivia\": {\n    \"std\": [\"BOT\", -4]\n  },\n  \"Newfoundland\": {\n    \"std\": [\"HNTN\", -3.5],\n    \"dst\": [\"HETN\", -2.5],\n    \"long\": \"(UTC-03:30) Newfoundland\"\n  },\n  \"French Guiana\": {\n    \"std\": [\"GFT\", -3]\n  },\n  \"West Greenland\": {\n    \"std\": [\"WGT\", -3],\n    \"dst\": [\"WGST\", -2, \"West Greenland Summer Time\"],\n    \"long\": \"(UTC-03:00) Greenland\"\n  },\n  \"St. Pierre & Miquelon\": {\n    \"std\": [\"HNPM\", -3],\n    \"dst\": [\"HEPM\", -2],\n    \"long\": \"(UTC-03:00) Saint Pierre and Miquelon\"\n  },\n  \"Uruguay\": {\n    \"std\": [\"UYT\", -3],\n    \"long\": \"(UTC-03:00) Montevideo\"\n  },\n  \"Suriname\": {\n    \"std\": [\"SRT\", -3]\n  },\n  \"Falkland Islands\": {\n    \"std\": [\"FKST\", -3]\n  },\n  \"Fernando de Noronha\": {\n    \"std\": [\"FNT\", -2]\n  },\n  \"South Georgia\": {\n    \"std\": [\"GST\", -2]\n  },\n  \"Azores\": {\n    \"std\": [\"AZOT\", -1],\n    \"dst\": [\"AZOST\", 0, \"Azores Summer Time\"],\n    \"long\": \"(UTC-01:00) Azores\"\n  },\n  \"Cape Verde\": {\n    \"std\": [\"CVT\", -1],\n    \"long\": \"(UTC-01:00) Cabo Verde Is.\"\n  }\n};\n\n// const metas = require('../../data/05-metazones')\n// import offsets from './offsets.js'\n\nfor (let i = 0; i <= 14; i += 1) {\n  metas[`gmt-${i}`] = {\n    name: `Etc/GMT-${i}`,\n    std: [`GMT-${i}`, i],\n    long: `(UTC-${i}:00) Coordinated Universal Time`\n  };\n  metas[`gmt+${i}`] = {\n    name: `Etc/GMT+${i}`,\n    std: [`GMT+${i}`, -i],\n    long: `(UTC+${i}:00) Coordinated Universal Time`\n  };\n}\n\nconst display = function (id) {\n  if (!id) {\n    return null\n  }\n  if (!zones[id]) {\n    console.error(`missing id ${id}`);\n    return null\n  }\n  let metaName = zones[id].meta;\n  if (!metas[metaName]) {\n    console.error(`missing tz-meta ${metaName}`);\n  }\n  let meta = metas[metaName] || {};\n  let dst = null;\n  if (zones[id].dst && meta.dst) {\n    let [abbr, offset, name] = meta.dst;\n    name = name || `${metaName} Daylight Time`;\n    let [start, end] = zones[id].dst || [];\n    dst = { abbr, offset, name, start, end };\n  }\n\n  let [abbr, offset] = meta.std;\n  let name = meta.name || `${metaName} Time`;\n  let long = meta.long || `(UTC+${offset}:00) ${name}`;\n  return {\n    name: name,\n    iana: id,\n    standard: { abbr, offset, name: meta.name || `${metaName} Standard Time`, },\n    daylight: dst || null,\n    long: long,\n  }\n};\nvar display$1 = display;\n\nvar version = '1.5.1';\n\nconst soft = function (str) {\n  let ids = find$1(str) || [];\n  if (typeof ids === 'string') {\n    ids = [ids];\n  }\n  ids = ids.map((id) => display$1(id));\n  return ids\n};\nsoft.prototype.version = version;\n// export { find, display, version }\n\nexport { soft as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}