{"ast":null,"code":"import ms from '../../data/milliseconds.js';\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]();\n  if (current === n) {\n    return; //already there\n  }\n\n  let startUnit = previous === null ? null : s.d[previous]();\n  let original = s.epoch;\n  //try to get it as close as we can\n  let diff = n - current;\n  s.epoch += ms[unit] * diff;\n  //DST edge-case: if we are going many days, be a little conservative\n  // console.log(unit, diff)\n  if (unit === 'day') {\n    // s.epoch -= ms.minute\n    //but don't push it over a month\n    if (Math.abs(diff) > 28 && n < 28) {\n      s.epoch += ms.hour;\n    }\n  }\n  // 1st time: oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n    // s.epoch += ms[unit] * diff * 0.89 // maybe try and make it close...?\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = ms[unit] / 2;\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep;\n  }\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep;\n  }\n  // 2nd time: did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n  }\n};\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: n => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: n => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d;\n      let current = d.getMonth();\n      let original = s.epoch;\n      let startUnit = d.getFullYear();\n      if (current === n) {\n        return;\n      }\n      //try to get it as close as we can..\n      let diff = n - current;\n      s.epoch += ms.day * (diff * 28); //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getFullYear()) {\n        s.epoch = original;\n      }\n      //increment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += ms.day;\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= ms.day;\n      }\n    }\n  },\n  date: {\n    valid: n => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: n => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch;\n    }\n  },\n  millisecond: {\n    valid: n => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch;\n    }\n  }\n};\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units);\n  let old = s.clone();\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i];\n    let n = wants[k];\n    if (n === undefined) {\n      n = old[k]();\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null;\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n);\n      }\n      return;\n    }\n    units[k].walkTo(s, n);\n  }\n  return;\n};\nexport default walkTo;","map":{"version":3,"names":["ms","walk","s","n","fn","unit","previous","current","d","startUnit","original","epoch","diff","Math","abs","hour","halfStep","units","year","valid","walkTo","month","getMonth","getFullYear","day","date","minute","second","seconds","millisecond","milliseconds","wants","keys","Object","old","clone","i","length","k","undefined","parseInt","silent","console","warn"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/node_modules/spacetime/src/methods/set/walk.js"],"sourcesContent":["import ms from '../../data/milliseconds.js'\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]()\n  if (current === n) {\n    return //already there\n  }\n  let startUnit = previous === null ? null : s.d[previous]()\n  let original = s.epoch\n  //try to get it as close as we can\n  let diff = n - current\n  s.epoch += ms[unit] * diff\n  //DST edge-case: if we are going many days, be a little conservative\n  // console.log(unit, diff)\n  if (unit === 'day') {\n    // s.epoch -= ms.minute\n    //but don't push it over a month\n    if (Math.abs(diff) > 28 && n < 28) {\n      s.epoch += ms.hour\n    }\n  }\n  // 1st time: oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original\n    // s.epoch += ms[unit] * diff * 0.89 // maybe try and make it close...?\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = ms[unit] / 2\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep\n  }\n\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep\n  }\n  // 2nd time: did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original\n  }\n}\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: (n) => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: (n) => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d\n      let current = d.getMonth()\n      let original = s.epoch\n      let startUnit = d.getFullYear()\n      if (current === n) {\n        return\n      }\n      //try to get it as close as we can..\n      let diff = n - current\n      s.epoch += ms.day * (diff * 28) //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getFullYear()) {\n        s.epoch = original\n      }\n      //increment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += ms.day\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= ms.day\n      }\n    }\n  },\n  date: {\n    valid: (n) => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: (n) => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: (n) => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: (n) => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch\n    }\n  },\n  millisecond: {\n    valid: (n) => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch\n    }\n  }\n}\n\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units)\n  let old = s.clone()\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i]\n    let n = wants[k]\n    if (n === undefined) {\n      n = old[k]()\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10)\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n)\n      }\n      return\n    }\n    units[k].walkTo(s, n)\n  }\n  return\n}\n\nexport default walkTo\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}