{"ast":null,"code":"import data from './_build.js';\nimport prefixes from './_prefixes.js';\nlet all = {};\nObject.keys(data).forEach(k => {\n  let split = k.split('|');\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  };\n  if (split[2]) {\n    obj.dst = split[2];\n  }\n  let names = data[k].split(',');\n  names.forEach(str => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num);\n      return prefixes[num] + '/';\n    });\n    all[str] = obj;\n  });\n});\nall.utc = {\n  offset: 0,\n  hem: 'n' //default to northern hemisphere - (sorry!)\n};\n\n//add etc/gmt+n\nfor (let i = -14; i <= 14; i += 0.5) {\n  let num = i;\n  if (num > 0) {\n    num = '+' + num;\n  }\n  let name = 'etc/gmt' + num;\n  all[name] = {\n    offset: i * -1,\n    //they're negative!\n    hem: 'n' //(sorry)\n  };\n\n  name = 'utc/gmt' + num; //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  };\n}\nexport default all;","map":{"version":3,"names":["data","prefixes","all","Object","keys","forEach","k","split","obj","offset","Number","hem","dst","names","str","replace","before","num","utc","i","name"],"sources":["/Users/lasagna/DecentralVote/DecentralVote/Client/node_modules/spacetime/zonefile/unpack.js"],"sourcesContent":["import data from './_build.js'\nimport prefixes from './_prefixes.js'\n\nlet all = {}\nObject.keys(data).forEach((k) => {\n  let split = k.split('|')\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  }\n  if (split[2]) {\n    obj.dst = split[2]\n  }\n  let names = data[k].split(',')\n  names.forEach((str) => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num)\n      return prefixes[num] + '/'\n    })\n    all[str] = obj\n  })\n})\n\nall.utc = {\n  offset: 0,\n  hem: 'n' //default to northern hemisphere - (sorry!)\n}\n\n//add etc/gmt+n\nfor (let i = -14; i <= 14; i += 0.5) {\n  let num = i\n  if (num > 0) {\n    num = '+' + num\n  }\n  let name = 'etc/gmt' + num\n  all[name] = {\n    offset: i * -1, //they're negative!\n    hem: 'n' //(sorry)\n  }\n  name = 'utc/gmt' + num //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  }\n}\n\nexport default all\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,QAAQ,MAAM,gBAAgB;AAErC,IAAIC,GAAG,GAAG,CAAC,CAAC;AACZC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAEC,CAAC,IAAK;EAC/B,IAAIC,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACxB,IAAIC,GAAG,GAAG;IACRC,MAAM,EAAEC,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IACxBI,GAAG,EAAEJ,KAAK,CAAC,CAAC;EACd,CAAC;EACD,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACZC,GAAG,CAACI,GAAG,GAAGL,KAAK,CAAC,CAAC,CAAC;EACpB;EACA,IAAIM,KAAK,GAAGb,IAAI,CAACM,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAC9BM,KAAK,CAACR,OAAO,CAAES,GAAG,IAAK;IACrBA,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,aAAa,EAAE,CAACC,MAAM,EAAEC,GAAG,KAAK;MAChDA,GAAG,GAAGP,MAAM,CAACO,GAAG,CAAC;MACjB,OAAOhB,QAAQ,CAACgB,GAAG,CAAC,GAAG,GAAG;IAC5B,CAAC,CAAC;IACFf,GAAG,CAACY,GAAG,CAAC,GAAGN,GAAG;EAChB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFN,GAAG,CAACgB,GAAG,GAAG;EACRT,MAAM,EAAE,CAAC;EACTE,GAAG,EAAE,GAAG,CAAC;AACX,CAAC;;AAED;AACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,IAAI,GAAG,EAAE;EACnC,IAAIF,GAAG,GAAGE,CAAC;EACX,IAAIF,GAAG,GAAG,CAAC,EAAE;IACXA,GAAG,GAAG,GAAG,GAAGA,GAAG;EACjB;EACA,IAAIG,IAAI,GAAG,SAAS,GAAGH,GAAG;EAC1Bf,GAAG,CAACkB,IAAI,CAAC,GAAG;IACVX,MAAM,EAAEU,CAAC,GAAG,CAAC,CAAC;IAAE;IAChBR,GAAG,EAAE,GAAG,CAAC;EACX,CAAC;;EACDS,IAAI,GAAG,SAAS,GAAGH,GAAG,EAAC;EACvBf,GAAG,CAACkB,IAAI,CAAC,GAAG;IACVX,MAAM,EAAEU,CAAC,GAAG,CAAC,CAAC;IACdR,GAAG,EAAE;EACP,CAAC;AACH;AAEA,eAAeT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}